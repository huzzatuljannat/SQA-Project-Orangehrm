/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 198084.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 8.0], [19.5, 8.0], [19.6, 9.0], [19.7, 9.0], [19.8, 9.0], [19.9, 9.0], [20.0, 10.0], [20.1, 10.0], [20.2, 13.0], [20.3, 13.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 18.0], [21.9, 18.0], [22.0, 20.0], [22.1, 20.0], [22.2, 21.0], [22.3, 21.0], [22.4, 22.0], [22.5, 22.0], [22.6, 22.0], [22.7, 22.0], [22.8, 22.0], [22.9, 22.0], [23.0, 23.0], [23.1, 23.0], [23.2, 24.0], [23.3, 24.0], [23.4, 24.0], [23.5, 24.0], [23.6, 24.0], [23.7, 24.0], [23.8, 24.0], [23.9, 24.0], [24.0, 24.0], [24.1, 24.0], [24.2, 25.0], [24.3, 25.0], [24.4, 25.0], [24.5, 25.0], [24.6, 25.0], [24.7, 25.0], [24.8, 25.0], [24.9, 25.0], [25.0, 26.0], [25.1, 26.0], [25.2, 28.0], [25.3, 28.0], [25.4, 30.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 31.0], [25.9, 31.0], [26.0, 31.0], [26.1, 31.0], [26.2, 31.0], [26.3, 31.0], [26.4, 32.0], [26.5, 32.0], [26.6, 32.0], [26.7, 32.0], [26.8, 34.0], [26.9, 34.0], [27.0, 36.0], [27.1, 36.0], [27.2, 36.0], [27.3, 36.0], [27.4, 36.0], [27.5, 36.0], [27.6, 36.0], [27.7, 36.0], [27.8, 37.0], [27.9, 37.0], [28.0, 38.0], [28.1, 38.0], [28.2, 113.0], [28.3, 113.0], [28.4, 117.0], [28.5, 117.0], [28.6, 1168.0], [28.7, 1168.0], [28.8, 1169.0], [28.9, 1169.0], [29.0, 1170.0], [29.1, 1170.0], [29.2, 1170.0], [29.3, 1170.0], [29.4, 1184.0], [29.5, 1184.0], [29.6, 1195.0], [29.7, 1195.0], [29.8, 1195.0], [29.9, 1195.0], [30.0, 1198.0], [30.1, 1198.0], [30.2, 1198.0], [30.3, 1198.0], [30.4, 1198.0], [30.5, 1198.0], [30.6, 1198.0], [30.7, 1198.0], [30.8, 1199.0], [30.9, 1199.0], [31.0, 1201.0], [31.1, 1201.0], [31.2, 1202.0], [31.3, 1202.0], [31.4, 1204.0], [31.5, 1204.0], [31.6, 1207.0], [31.7, 1207.0], [31.8, 1207.0], [31.9, 1207.0], [32.0, 1207.0], [32.1, 1207.0], [32.2, 1208.0], [32.3, 1208.0], [32.4, 1210.0], [32.5, 1210.0], [32.6, 1211.0], [32.7, 1211.0], [32.8, 1211.0], [32.9, 1211.0], [33.0, 1212.0], [33.1, 1212.0], [33.2, 1213.0], [33.3, 1213.0], [33.4, 1213.0], [33.5, 1213.0], [33.6, 1213.0], [33.7, 1213.0], [33.8, 1213.0], [33.9, 1213.0], [34.0, 1214.0], [34.1, 1214.0], [34.2, 3606.0], [34.3, 3606.0], [34.4, 3633.0], [34.5, 3633.0], [34.6, 3657.0], [34.7, 3657.0], [34.8, 3678.0], [34.9, 3678.0], [35.0, 3765.0], [35.1, 3765.0], [35.2, 3895.0], [35.3, 3895.0], [35.4, 3895.0], [35.5, 3964.0], [35.6, 3964.0], [35.7, 4174.0], [35.8, 4174.0], [35.9, 4492.0], [36.0, 4492.0], [36.1, 4496.0], [36.2, 4496.0], [36.3, 4657.0], [36.4, 4657.0], [36.5, 4670.0], [36.6, 4670.0], [36.7, 4683.0], [36.8, 4683.0], [36.9, 4697.0], [37.0, 4697.0], [37.1, 4709.0], [37.2, 4709.0], [37.3, 4834.0], [37.4, 4834.0], [37.5, 4838.0], [37.6, 4838.0], [37.7, 4985.0], [37.8, 4985.0], [37.9, 5053.0], [38.0, 5053.0], [38.1, 5069.0], [38.2, 5069.0], [38.3, 5558.0], [38.4, 5558.0], [38.5, 5560.0], [38.6, 5560.0], [38.7, 5561.0], [38.8, 5561.0], [38.9, 5571.0], [39.0, 5571.0], [39.1, 5573.0], [39.2, 5573.0], [39.3, 5575.0], [39.4, 5575.0], [39.5, 5919.0], [39.6, 5919.0], [39.7, 6076.0], [39.8, 6076.0], [39.9, 6731.0], [40.0, 6731.0], [40.1, 7222.0], [40.2, 7222.0], [40.3, 7224.0], [40.4, 7224.0], [40.5, 7443.0], [40.6, 7443.0], [40.7, 7569.0], [40.8, 7569.0], [40.9, 7573.0], [41.0, 7573.0], [41.1, 7736.0], [41.2, 7736.0], [41.3, 8041.0], [41.4, 8041.0], [41.5, 8307.0], [41.6, 8307.0], [41.7, 10412.0], [41.8, 10412.0], [41.9, 10419.0], [42.0, 10419.0], [42.1, 10431.0], [42.2, 10431.0], [42.3, 10432.0], [42.4, 10432.0], [42.5, 10433.0], [42.6, 10433.0], [42.7, 10436.0], [42.8, 10436.0], [42.9, 10440.0], [43.0, 10440.0], [43.1, 10444.0], [43.2, 10444.0], [43.3, 10463.0], [43.4, 10463.0], [43.5, 10496.0], [43.6, 10496.0], [43.7, 10522.0], [43.8, 10522.0], [43.9, 10579.0], [44.0, 10579.0], [44.1, 12310.0], [44.2, 12310.0], [44.3, 12314.0], [44.4, 12314.0], [44.5, 12329.0], [44.6, 12329.0], [44.7, 12340.0], [44.8, 12340.0], [44.9, 12852.0], [45.0, 12852.0], [45.1, 13465.0], [45.2, 13465.0], [45.3, 13619.0], [45.4, 13619.0], [45.5, 13631.0], [45.6, 13631.0], [45.7, 13738.0], [45.8, 13738.0], [45.9, 15007.0], [46.0, 15007.0], [46.1, 15010.0], [46.2, 15010.0], [46.3, 15012.0], [46.4, 15012.0], [46.5, 15015.0], [46.6, 15015.0], [46.7, 15016.0], [46.8, 15016.0], [46.9, 15017.0], [47.0, 15017.0], [47.1, 15017.0], [47.2, 15017.0], [47.3, 15018.0], [47.4, 15018.0], [47.5, 15456.0], [47.6, 15456.0], [47.7, 15465.0], [47.8, 15465.0], [47.9, 15603.0], [48.0, 15603.0], [48.1, 60919.0], [48.2, 60919.0], [48.3, 62892.0], [48.4, 62892.0], [48.5, 67549.0], [48.6, 67549.0], [48.7, 67812.0], [48.8, 67812.0], [48.9, 68352.0], [49.0, 68352.0], [49.1, 94572.0], [49.2, 94572.0], [49.3, 98807.0], [49.4, 98807.0], [49.5, 99056.0], [49.6, 99056.0], [49.7, 99108.0], [49.8, 99108.0], [49.9, 99950.0], [50.0, 99950.0], [50.1, 100168.0], [50.2, 100168.0], [50.3, 100211.0], [50.4, 100211.0], [50.5, 100540.0], [50.6, 100540.0], [50.7, 101018.0], [50.8, 101018.0], [50.9, 101066.0], [51.0, 101066.0], [51.1, 101122.0], [51.2, 101122.0], [51.3, 102022.0], [51.4, 102022.0], [51.5, 102077.0], [51.6, 102077.0], [51.7, 102148.0], [51.8, 102148.0], [51.9, 102397.0], [52.0, 102397.0], [52.1, 102433.0], [52.2, 102433.0], [52.3, 103125.0], [52.4, 103125.0], [52.5, 103572.0], [52.6, 103572.0], [52.7, 103682.0], [52.8, 103682.0], [52.9, 103798.0], [53.0, 103798.0], [53.1, 104258.0], [53.2, 104258.0], [53.3, 104677.0], [53.4, 104677.0], [53.5, 104750.0], [53.6, 104750.0], [53.7, 105033.0], [53.8, 105033.0], [53.9, 105469.0], [54.0, 105469.0], [54.1, 106393.0], [54.2, 106393.0], [54.3, 106468.0], [54.4, 106468.0], [54.5, 107043.0], [54.6, 107043.0], [54.7, 107567.0], [54.8, 107567.0], [54.9, 107802.0], [55.0, 107802.0], [55.1, 108578.0], [55.2, 108578.0], [55.3, 109328.0], [55.4, 109328.0], [55.5, 109631.0], [55.6, 109631.0], [55.7, 110142.0], [55.8, 110142.0], [55.9, 110621.0], [56.0, 110621.0], [56.1, 110692.0], [56.2, 110692.0], [56.3, 110806.0], [56.4, 110806.0], [56.5, 111055.0], [56.6, 111055.0], [56.7, 111260.0], [56.8, 111260.0], [56.9, 111472.0], [57.0, 111472.0], [57.1, 111589.0], [57.2, 111589.0], [57.3, 111639.0], [57.4, 111639.0], [57.5, 112382.0], [57.6, 112382.0], [57.7, 112756.0], [57.8, 112756.0], [57.9, 112969.0], [58.0, 112969.0], [58.1, 113151.0], [58.2, 113151.0], [58.3, 113495.0], [58.4, 113495.0], [58.5, 113709.0], [58.6, 113709.0], [58.7, 113852.0], [58.8, 113852.0], [58.9, 114956.0], [59.0, 114956.0], [59.1, 115020.0], [59.2, 115020.0], [59.3, 115356.0], [59.4, 115356.0], [59.5, 116470.0], [59.6, 116470.0], [59.7, 116704.0], [59.8, 116704.0], [59.9, 117383.0], [60.0, 117383.0], [60.1, 118492.0], [60.2, 118492.0], [60.3, 118507.0], [60.4, 118507.0], [60.5, 118993.0], [60.6, 118993.0], [60.7, 119523.0], [60.8, 119523.0], [60.9, 119576.0], [61.0, 119576.0], [61.1, 120222.0], [61.2, 120222.0], [61.3, 120375.0], [61.4, 120375.0], [61.5, 120590.0], [61.6, 120590.0], [61.7, 120921.0], [61.8, 120921.0], [61.9, 121305.0], [62.0, 121305.0], [62.1, 121313.0], [62.2, 121313.0], [62.3, 121438.0], [62.4, 121438.0], [62.5, 121468.0], [62.6, 121468.0], [62.7, 121530.0], [62.8, 121530.0], [62.9, 121754.0], [63.0, 121754.0], [63.1, 121886.0], [63.2, 121886.0], [63.3, 121929.0], [63.4, 121929.0], [63.5, 121940.0], [63.6, 121940.0], [63.7, 122005.0], [63.8, 122005.0], [63.9, 122602.0], [64.0, 122602.0], [64.1, 122722.0], [64.2, 122722.0], [64.3, 122788.0], [64.4, 122788.0], [64.5, 122790.0], [64.6, 122790.0], [64.7, 122915.0], [64.8, 122915.0], [64.9, 123363.0], [65.0, 123363.0], [65.1, 123507.0], [65.2, 123507.0], [65.3, 123873.0], [65.4, 123873.0], [65.5, 124276.0], [65.6, 124276.0], [65.7, 124645.0], [65.8, 124645.0], [65.9, 124836.0], [66.0, 124836.0], [66.1, 125075.0], [66.2, 125075.0], [66.3, 125204.0], [66.4, 125204.0], [66.5, 125255.0], [66.6, 125255.0], [66.7, 126001.0], [66.8, 126001.0], [66.9, 126474.0], [67.0, 126474.0], [67.1, 126588.0], [67.2, 126588.0], [67.3, 126912.0], [67.4, 126912.0], [67.5, 127067.0], [67.6, 127067.0], [67.7, 127106.0], [67.8, 127106.0], [67.9, 127378.0], [68.0, 127378.0], [68.1, 127391.0], [68.2, 127391.0], [68.3, 127477.0], [68.4, 127477.0], [68.5, 127532.0], [68.6, 127532.0], [68.7, 127616.0], [68.8, 127616.0], [68.9, 127634.0], [69.0, 127634.0], [69.1, 127648.0], [69.2, 127648.0], [69.3, 127698.0], [69.4, 127698.0], [69.5, 127952.0], [69.6, 127952.0], [69.7, 129197.0], [69.8, 129197.0], [69.9, 129974.0], [70.0, 129974.0], [70.1, 130224.0], [70.2, 130224.0], [70.3, 130409.0], [70.4, 130409.0], [70.5, 130659.0], [70.6, 130659.0], [70.7, 131129.0], [70.8, 131129.0], [70.9, 131342.0], [71.0, 131342.0], [71.1, 131390.0], [71.2, 131390.0], [71.3, 131487.0], [71.4, 131487.0], [71.5, 131588.0], [71.6, 131588.0], [71.7, 132435.0], [71.8, 132435.0], [71.9, 133046.0], [72.0, 133046.0], [72.1, 133774.0], [72.2, 133774.0], [72.3, 133804.0], [72.4, 133804.0], [72.5, 135433.0], [72.6, 135433.0], [72.7, 135450.0], [72.8, 135450.0], [72.9, 137701.0], [73.0, 137701.0], [73.1, 138186.0], [73.2, 138186.0], [73.3, 138444.0], [73.4, 138444.0], [73.5, 138548.0], [73.6, 138548.0], [73.7, 138969.0], [73.8, 138969.0], [73.9, 138974.0], [74.0, 138974.0], [74.1, 139653.0], [74.2, 139653.0], [74.3, 139714.0], [74.4, 139714.0], [74.5, 139967.0], [74.6, 139967.0], [74.7, 140097.0], [74.8, 140097.0], [74.9, 140447.0], [75.0, 140447.0], [75.1, 140459.0], [75.2, 140459.0], [75.3, 140701.0], [75.4, 140701.0], [75.5, 140740.0], [75.6, 140740.0], [75.7, 141563.0], [75.8, 141563.0], [75.9, 141778.0], [76.0, 141778.0], [76.1, 142164.0], [76.2, 142164.0], [76.3, 142734.0], [76.4, 142734.0], [76.5, 143255.0], [76.6, 143255.0], [76.7, 146700.0], [76.8, 146700.0], [76.9, 146976.0], [77.0, 146976.0], [77.1, 147000.0], [77.2, 147000.0], [77.3, 148028.0], [77.4, 148028.0], [77.5, 148059.0], [77.6, 148059.0], [77.7, 148158.0], [77.8, 148158.0], [77.9, 148293.0], [78.0, 148293.0], [78.1, 148515.0], [78.2, 148515.0], [78.3, 150060.0], [78.4, 150060.0], [78.5, 150268.0], [78.6, 150268.0], [78.7, 150377.0], [78.8, 150377.0], [78.9, 150491.0], [79.0, 150491.0], [79.1, 150516.0], [79.2, 150516.0], [79.3, 150582.0], [79.4, 150582.0], [79.5, 150768.0], [79.6, 150768.0], [79.7, 150779.0], [79.8, 150779.0], [79.9, 150863.0], [80.0, 150863.0], [80.1, 151026.0], [80.2, 151026.0], [80.3, 151123.0], [80.4, 151123.0], [80.5, 151241.0], [80.6, 151241.0], [80.7, 151499.0], [80.8, 151499.0], [80.9, 152392.0], [81.0, 152392.0], [81.1, 152409.0], [81.2, 152409.0], [81.3, 152522.0], [81.4, 152522.0], [81.5, 152523.0], [81.6, 152523.0], [81.7, 152545.0], [81.8, 152545.0], [81.9, 155222.0], [82.0, 155222.0], [82.1, 155718.0], [82.2, 155718.0], [82.3, 155862.0], [82.4, 155862.0], [82.5, 155883.0], [82.6, 155883.0], [82.7, 156731.0], [82.8, 156731.0], [82.9, 156867.0], [83.0, 156867.0], [83.1, 156898.0], [83.2, 156898.0], [83.3, 157460.0], [83.4, 157460.0], [83.5, 158866.0], [83.6, 158866.0], [83.7, 159782.0], [83.8, 159782.0], [83.9, 159938.0], [84.0, 159938.0], [84.1, 160563.0], [84.2, 160563.0], [84.3, 160671.0], [84.4, 160671.0], [84.5, 161603.0], [84.6, 161603.0], [84.7, 161811.0], [84.8, 161811.0], [84.9, 162197.0], [85.0, 162197.0], [85.1, 163276.0], [85.2, 163276.0], [85.3, 163319.0], [85.4, 163319.0], [85.5, 163634.0], [85.6, 163634.0], [85.7, 164127.0], [85.8, 164127.0], [85.9, 164308.0], [86.0, 164308.0], [86.1, 164724.0], [86.2, 164724.0], [86.3, 164768.0], [86.4, 164768.0], [86.5, 164857.0], [86.6, 164857.0], [86.7, 165462.0], [86.8, 165462.0], [86.9, 166014.0], [87.0, 166014.0], [87.1, 166135.0], [87.2, 166135.0], [87.3, 166187.0], [87.4, 166187.0], [87.5, 167113.0], [87.6, 167113.0], [87.7, 168401.0], [87.8, 168401.0], [87.9, 169089.0], [88.0, 169089.0], [88.1, 170883.0], [88.2, 170883.0], [88.3, 171286.0], [88.4, 171286.0], [88.5, 172266.0], [88.6, 172266.0], [88.7, 172876.0], [88.8, 172876.0], [88.9, 174557.0], [89.0, 174557.0], [89.1, 174884.0], [89.2, 174884.0], [89.3, 175348.0], [89.4, 175348.0], [89.5, 175430.0], [89.6, 175430.0], [89.7, 176212.0], [89.8, 176212.0], [89.9, 176329.0], [90.0, 176329.0], [90.1, 176791.0], [90.2, 176791.0], [90.3, 177077.0], [90.4, 177077.0], [90.5, 177126.0], [90.6, 177126.0], [90.7, 177261.0], [90.8, 177261.0], [90.9, 177779.0], [91.0, 177779.0], [91.1, 178234.0], [91.2, 178234.0], [91.3, 178660.0], [91.4, 178660.0], [91.5, 179132.0], [91.6, 179132.0], [91.7, 179213.0], [91.8, 179213.0], [91.9, 180731.0], [92.0, 180731.0], [92.1, 181724.0], [92.2, 181724.0], [92.3, 182383.0], [92.4, 182383.0], [92.5, 182482.0], [92.6, 182482.0], [92.7, 182526.0], [92.8, 182526.0], [92.9, 182653.0], [93.0, 182653.0], [93.1, 183936.0], [93.2, 183936.0], [93.3, 184277.0], [93.4, 184277.0], [93.5, 184338.0], [93.6, 184338.0], [93.7, 184699.0], [93.8, 184699.0], [93.9, 185485.0], [94.0, 185485.0], [94.1, 187319.0], [94.2, 187319.0], [94.3, 189218.0], [94.4, 189218.0], [94.5, 189709.0], [94.6, 189709.0], [94.7, 189858.0], [94.8, 189858.0], [94.9, 190230.0], [95.0, 190230.0], [95.1, 190354.0], [95.2, 190354.0], [95.3, 190477.0], [95.4, 190477.0], [95.5, 190585.0], [95.6, 190585.0], [95.7, 191434.0], [95.8, 191434.0], [95.9, 191796.0], [96.0, 191796.0], [96.1, 192050.0], [96.2, 192050.0], [96.3, 192133.0], [96.4, 192133.0], [96.5, 192547.0], [96.6, 192547.0], [96.7, 192643.0], [96.8, 192643.0], [96.9, 192994.0], [97.0, 192994.0], [97.1, 193183.0], [97.2, 193183.0], [97.3, 193413.0], [97.4, 193413.0], [97.5, 193898.0], [97.6, 193898.0], [97.7, 194110.0], [97.8, 194110.0], [97.9, 194162.0], [98.0, 194162.0], [98.1, 194549.0], [98.2, 194549.0], [98.3, 194751.0], [98.4, 194751.0], [98.5, 195046.0], [98.6, 195046.0], [98.7, 195605.0], [98.8, 195605.0], [98.9, 195674.0], [99.0, 195674.0], [99.1, 195793.0], [99.2, 195793.0], [99.3, 195971.0], [99.4, 195971.0], [99.5, 196468.0], [99.6, 196468.0], [99.7, 196594.0], [99.8, 196594.0], [99.9, 198084.0], [100.0, 198084.0]], "isOverall": false, "label": "Add Employee", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 5.0], [13.8, 5.0], [13.9, 5.0], [14.0, 5.0], [14.1, 5.0], [14.2, 5.0], [14.3, 5.0], [14.4, 6.0], [14.5, 6.0], [14.6, 6.0], [14.7, 6.0], [14.8, 6.0], [14.9, 6.0], [15.0, 76.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 56989.0], [15.5, 56989.0], [15.6, 56989.0], [15.7, 58931.0], [15.8, 58931.0], [15.9, 58931.0], [16.0, 63082.0], [16.1, 63082.0], [16.2, 63082.0], [16.3, 63569.0], [16.4, 63569.0], [16.5, 63569.0], [16.6, 63569.0], [16.7, 63624.0], [16.8, 63624.0], [16.9, 63624.0], [17.0, 63666.0], [17.1, 63666.0], [17.2, 63666.0], [17.3, 63677.0], [17.4, 63677.0], [17.5, 63677.0], [17.6, 63794.0], [17.7, 63794.0], [17.8, 63794.0], [17.9, 63794.0], [18.0, 64202.0], [18.1, 64202.0], [18.2, 64202.0], [18.3, 64270.0], [18.4, 64270.0], [18.5, 64270.0], [18.6, 64277.0], [18.7, 64277.0], [18.8, 64277.0], [18.9, 64322.0], [19.0, 64322.0], [19.1, 64322.0], [19.2, 64322.0], [19.3, 64375.0], [19.4, 64375.0], [19.5, 64375.0], [19.6, 64433.0], [19.7, 64433.0], [19.8, 64433.0], [19.9, 64596.0], [20.0, 64596.0], [20.1, 64596.0], [20.2, 64790.0], [20.3, 64790.0], [20.4, 64790.0], [20.5, 64790.0], [20.6, 64955.0], [20.7, 64955.0], [20.8, 64955.0], [20.9, 65108.0], [21.0, 65108.0], [21.1, 65108.0], [21.2, 65114.0], [21.3, 65114.0], [21.4, 65114.0], [21.5, 65176.0], [21.6, 65176.0], [21.7, 65176.0], [21.8, 65176.0], [21.9, 65550.0], [22.0, 65550.0], [22.1, 65550.0], [22.2, 65601.0], [22.3, 65601.0], [22.4, 65601.0], [22.5, 65867.0], [22.6, 65867.0], [22.7, 65867.0], [22.8, 65867.0], [22.9, 65977.0], [23.0, 65977.0], [23.1, 65977.0], [23.2, 66152.0], [23.3, 66152.0], [23.4, 66152.0], [23.5, 66401.0], [23.6, 66401.0], [23.7, 66401.0], [23.8, 66849.0], [23.9, 66849.0], [24.0, 66849.0], [24.1, 66849.0], [24.2, 67343.0], [24.3, 67343.0], [24.4, 67343.0], [24.5, 67481.0], [24.6, 67481.0], [24.7, 67481.0], [24.8, 67763.0], [24.9, 67763.0], [25.0, 67763.0], [25.1, 67927.0], [25.2, 67927.0], [25.3, 67927.0], [25.4, 67927.0], [25.5, 68002.0], [25.6, 68002.0], [25.7, 68002.0], [25.8, 68231.0], [25.9, 68231.0], [26.0, 68231.0], [26.1, 68498.0], [26.2, 68498.0], [26.3, 68498.0], [26.4, 68503.0], [26.5, 68503.0], [26.6, 68503.0], [26.7, 68503.0], [26.8, 68599.0], [26.9, 68599.0], [27.0, 68599.0], [27.1, 68771.0], [27.2, 68771.0], [27.3, 68771.0], [27.4, 68980.0], [27.5, 68980.0], [27.6, 68980.0], [27.7, 69332.0], [27.8, 69332.0], [27.9, 69332.0], [28.0, 69332.0], [28.1, 69341.0], [28.2, 69341.0], [28.3, 69341.0], [28.4, 69424.0], [28.5, 69424.0], [28.6, 69424.0], [28.7, 69658.0], [28.8, 69658.0], [28.9, 69658.0], [29.0, 69970.0], [29.1, 69970.0], [29.2, 69970.0], [29.3, 69970.0], [29.4, 70141.0], [29.5, 70141.0], [29.6, 70141.0], [29.7, 70363.0], [29.8, 70363.0], [29.9, 70363.0], [30.0, 70419.0], [30.1, 70419.0], [30.2, 70419.0], [30.3, 70422.0], [30.4, 70422.0], [30.5, 70422.0], [30.6, 70422.0], [30.7, 70698.0], [30.8, 70698.0], [30.9, 70698.0], [31.0, 70726.0], [31.1, 70726.0], [31.2, 70726.0], [31.3, 70764.0], [31.4, 70764.0], [31.5, 70764.0], [31.6, 71035.0], [31.7, 71035.0], [31.8, 71035.0], [31.9, 71035.0], [32.0, 72154.0], [32.1, 72154.0], [32.2, 72154.0], [32.3, 72539.0], [32.4, 72539.0], [32.5, 72539.0], [32.6, 72594.0], [32.7, 72594.0], [32.8, 72594.0], [32.9, 72843.0], [33.0, 72843.0], [33.1, 72843.0], [33.2, 72843.0], [33.3, 72848.0], [33.4, 72848.0], [33.5, 72848.0], [33.6, 73206.0], [33.7, 73206.0], [33.8, 73206.0], [33.9, 73297.0], [34.0, 73297.0], [34.1, 73297.0], [34.2, 73297.0], [34.3, 73612.0], [34.4, 73612.0], [34.5, 73612.0], [34.6, 73680.0], [34.7, 73680.0], [34.8, 73680.0], [34.9, 73777.0], [35.0, 73777.0], [35.1, 73777.0], [35.2, 73929.0], [35.3, 73929.0], [35.4, 73929.0], [35.5, 73929.0], [35.6, 74171.0], [35.7, 74171.0], [35.8, 74171.0], [35.9, 74835.0], [36.0, 74835.0], [36.1, 74835.0], [36.2, 75393.0], [36.3, 75393.0], [36.4, 75393.0], [36.5, 75413.0], [36.6, 75413.0], [36.7, 75413.0], [36.8, 75413.0], [36.9, 75414.0], [37.0, 75414.0], [37.1, 75414.0], [37.2, 75416.0], [37.3, 75416.0], [37.4, 75416.0], [37.5, 75574.0], [37.6, 75574.0], [37.7, 75574.0], [37.8, 75575.0], [37.9, 75575.0], [38.0, 75575.0], [38.1, 75575.0], [38.2, 75579.0], [38.3, 75579.0], [38.4, 75579.0], [38.5, 75626.0], [38.6, 75626.0], [38.7, 75626.0], [38.8, 75634.0], [38.9, 75634.0], [39.0, 75634.0], [39.1, 75657.0], [39.2, 75657.0], [39.3, 75657.0], [39.4, 75657.0], [39.5, 75716.0], [39.6, 75716.0], [39.7, 75716.0], [39.8, 75717.0], [39.9, 75717.0], [40.0, 75717.0], [40.1, 75927.0], [40.2, 75927.0], [40.3, 75927.0], [40.4, 75979.0], [40.5, 75979.0], [40.6, 75979.0], [40.7, 75979.0], [40.8, 76152.0], [40.9, 76152.0], [41.0, 76152.0], [41.1, 76180.0], [41.2, 76180.0], [41.3, 76180.0], [41.4, 76216.0], [41.5, 76216.0], [41.6, 76216.0], [41.7, 76309.0], [41.8, 76309.0], [41.9, 76309.0], [42.0, 76309.0], [42.1, 76561.0], [42.2, 76561.0], [42.3, 76561.0], [42.4, 76792.0], [42.5, 76792.0], [42.6, 76792.0], [42.7, 76809.0], [42.8, 76809.0], [42.9, 76809.0], [43.0, 76849.0], [43.1, 76849.0], [43.2, 76849.0], [43.3, 76849.0], [43.4, 76889.0], [43.5, 76889.0], [43.6, 76889.0], [43.7, 76911.0], [43.8, 76911.0], [43.9, 76911.0], [44.0, 77004.0], [44.1, 77004.0], [44.2, 77004.0], [44.3, 77052.0], [44.4, 77052.0], [44.5, 77052.0], [44.6, 77052.0], [44.7, 77090.0], [44.8, 77090.0], [44.9, 77090.0], [45.0, 77115.0], [45.1, 77115.0], [45.2, 77115.0], [45.3, 77213.0], [45.4, 77213.0], [45.5, 77213.0], [45.6, 77213.0], [45.7, 77214.0], [45.8, 77214.0], [45.9, 77214.0], [46.0, 77504.0], [46.1, 77504.0], [46.2, 77504.0], [46.3, 77597.0], [46.4, 77597.0], [46.5, 77597.0], [46.6, 77668.0], [46.7, 77668.0], [46.8, 77668.0], [46.9, 77668.0], [47.0, 77696.0], [47.1, 77696.0], [47.2, 77696.0], [47.3, 77731.0], [47.4, 77731.0], [47.5, 77731.0], [47.6, 77824.0], [47.7, 77824.0], [47.8, 77824.0], [47.9, 77825.0], [48.0, 77825.0], [48.1, 77825.0], [48.2, 77825.0], [48.3, 77836.0], [48.4, 77836.0], [48.5, 77836.0], [48.6, 77857.0], [48.7, 77857.0], [48.8, 77857.0], [48.9, 77964.0], [49.0, 77964.0], [49.1, 77964.0], [49.2, 78206.0], [49.3, 78206.0], [49.4, 78206.0], [49.5, 78206.0], [49.6, 78268.0], [49.7, 78268.0], [49.8, 78268.0], [49.9, 78275.0], [50.0, 78275.0], [50.1, 78275.0], [50.2, 78300.0], [50.3, 78300.0], [50.4, 78300.0], [50.5, 78348.0], [50.6, 78348.0], [50.7, 78348.0], [50.8, 78348.0], [50.9, 78365.0], [51.0, 78365.0], [51.1, 78365.0], [51.2, 78387.0], [51.3, 78387.0], [51.4, 78387.0], [51.5, 78459.0], [51.6, 78459.0], [51.7, 78459.0], [51.8, 78861.0], [51.9, 78861.0], [52.0, 78861.0], [52.1, 78861.0], [52.2, 78962.0], [52.3, 78962.0], [52.4, 78962.0], [52.5, 78979.0], [52.6, 78979.0], [52.7, 78979.0], [52.8, 79141.0], [52.9, 79141.0], [53.0, 79141.0], [53.1, 79187.0], [53.2, 79187.0], [53.3, 79187.0], [53.4, 79187.0], [53.5, 79340.0], [53.6, 79340.0], [53.7, 79340.0], [53.8, 79362.0], [53.9, 79362.0], [54.0, 79362.0], [54.1, 79362.0], [54.2, 79362.0], [54.3, 79362.0], [54.4, 79408.0], [54.5, 79408.0], [54.6, 79408.0], [54.7, 79408.0], [54.8, 79435.0], [54.9, 79435.0], [55.0, 79435.0], [55.1, 79455.0], [55.2, 79455.0], [55.3, 79455.0], [55.4, 79499.0], [55.5, 79499.0], [55.6, 79499.0], [55.7, 79499.0], [55.8, 79543.0], [55.9, 79543.0], [56.0, 79543.0], [56.1, 79616.0], [56.2, 79616.0], [56.3, 79616.0], [56.4, 79882.0], [56.5, 79882.0], [56.6, 79882.0], [56.7, 79947.0], [56.8, 79947.0], [56.9, 79947.0], [57.0, 79947.0], [57.1, 79977.0], [57.2, 79977.0], [57.3, 79977.0], [57.4, 80291.0], [57.5, 80291.0], [57.6, 80291.0], [57.7, 80362.0], [57.8, 80362.0], [57.9, 80362.0], [58.0, 80420.0], [58.1, 80420.0], [58.2, 80420.0], [58.3, 80420.0], [58.4, 80444.0], [58.5, 80444.0], [58.6, 80444.0], [58.7, 80589.0], [58.8, 80589.0], [58.9, 80589.0], [59.0, 80958.0], [59.1, 80958.0], [59.2, 80958.0], [59.3, 81275.0], [59.4, 81275.0], [59.5, 81275.0], [59.6, 81275.0], [59.7, 81309.0], [59.8, 81309.0], [59.9, 81309.0], [60.0, 81417.0], [60.1, 81417.0], [60.2, 81417.0], [60.3, 81700.0], [60.4, 81700.0], [60.5, 81700.0], [60.6, 81925.0], [60.7, 81925.0], [60.8, 81925.0], [60.9, 81925.0], [61.0, 82069.0], [61.1, 82069.0], [61.2, 82069.0], [61.3, 82363.0], [61.4, 82363.0], [61.5, 82363.0], [61.6, 82483.0], [61.7, 82483.0], [61.8, 82483.0], [61.9, 83444.0], [62.0, 83444.0], [62.1, 83444.0], [62.2, 83444.0], [62.3, 83692.0], [62.4, 83692.0], [62.5, 83692.0], [62.6, 84117.0], [62.7, 84117.0], [62.8, 84117.0], [62.9, 84447.0], [63.0, 84447.0], [63.1, 84447.0], [63.2, 84689.0], [63.3, 84689.0], [63.4, 84689.0], [63.5, 84689.0], [63.6, 84991.0], [63.7, 84991.0], [63.8, 84991.0], [63.9, 85746.0], [64.0, 85746.0], [64.1, 85746.0], [64.2, 85972.0], [64.3, 85972.0], [64.4, 85972.0], [64.5, 86733.0], [64.6, 86733.0], [64.7, 86733.0], [64.8, 86733.0], [64.9, 88344.0], [65.0, 88344.0], [65.1, 88344.0], [65.2, 88546.0], [65.3, 88546.0], [65.4, 88546.0], [65.5, 88845.0], [65.6, 88845.0], [65.7, 88845.0], [65.8, 89218.0], [65.9, 89218.0], [66.0, 89218.0], [66.1, 89218.0], [66.2, 90252.0], [66.3, 90252.0], [66.4, 90252.0], [66.5, 90420.0], [66.6, 90420.0], [66.7, 90420.0], [66.8, 90806.0], [66.9, 90806.0], [67.0, 90806.0], [67.1, 90806.0], [67.2, 92867.0], [67.3, 92867.0], [67.4, 92867.0], [67.5, 93886.0], [67.6, 93886.0], [67.7, 93886.0], [67.8, 94597.0], [67.9, 94597.0], [68.0, 94597.0], [68.1, 95266.0], [68.2, 95266.0], [68.3, 95266.0], [68.4, 95266.0], [68.5, 95392.0], [68.6, 95392.0], [68.7, 95392.0], [68.8, 95600.0], [68.9, 95600.0], [69.0, 95600.0], [69.1, 95625.0], [69.2, 95625.0], [69.3, 95625.0], [69.4, 95701.0], [69.5, 95701.0], [69.6, 95701.0], [69.7, 95701.0], [69.8, 96131.0], [69.9, 96131.0], [70.0, 96131.0], [70.1, 96469.0], [70.2, 96469.0], [70.3, 96469.0], [70.4, 96480.0], [70.5, 96480.0], [70.6, 96480.0], [70.7, 96691.0], [70.8, 96691.0], [70.9, 96691.0], [71.0, 96691.0], [71.1, 96785.0], [71.2, 96785.0], [71.3, 96785.0], [71.4, 96846.0], [71.5, 96846.0], [71.6, 96846.0], [71.7, 97099.0], [71.8, 97099.0], [71.9, 97099.0], [72.0, 97275.0], [72.1, 97275.0], [72.2, 97275.0], [72.3, 97275.0], [72.4, 97374.0], [72.5, 97374.0], [72.6, 97374.0], [72.7, 97623.0], [72.8, 97623.0], [72.9, 97623.0], [73.0, 97673.0], [73.1, 97673.0], [73.2, 97673.0], [73.3, 98000.0], [73.4, 98000.0], [73.5, 98000.0], [73.6, 98000.0], [73.7, 98181.0], [73.8, 98181.0], [73.9, 98181.0], [74.0, 98251.0], [74.1, 98251.0], [74.2, 98251.0], [74.3, 98334.0], [74.4, 98334.0], [74.5, 98334.0], [74.6, 98605.0], [74.7, 98605.0], [74.8, 98605.0], [74.9, 98605.0], [75.0, 99527.0], [75.1, 99527.0], [75.2, 99527.0], [75.3, 99675.0], [75.4, 99675.0], [75.5, 99675.0], [75.6, 99732.0], [75.7, 99732.0], [75.8, 99732.0], [75.9, 99778.0], [76.0, 99778.0], [76.1, 99778.0], [76.2, 99778.0], [76.3, 99916.0], [76.4, 99916.0], [76.5, 99916.0], [76.6, 99925.0], [76.7, 99925.0], [76.8, 99925.0], [76.9, 99983.0], [77.0, 99983.0], [77.1, 99983.0], [77.2, 100065.0], [77.3, 100065.0], [77.4, 100065.0], [77.5, 100065.0], [77.6, 100096.0], [77.7, 100096.0], [77.8, 100096.0], [77.9, 100183.0], [78.0, 100183.0], [78.1, 100183.0], [78.2, 100198.0], [78.3, 100198.0], [78.4, 100198.0], [78.5, 100198.0], [78.6, 100223.0], [78.7, 100223.0], [78.8, 100223.0], [78.9, 100248.0], [79.0, 100248.0], [79.1, 100248.0], [79.2, 100319.0], [79.3, 100319.0], [79.4, 100319.0], [79.5, 100322.0], [79.6, 100322.0], [79.7, 100322.0], [79.8, 100322.0], [79.9, 100331.0], [80.0, 100331.0], [80.1, 100331.0], [80.2, 100439.0], [80.3, 100439.0], [80.4, 100439.0], [80.5, 100465.0], [80.6, 100465.0], [80.7, 100465.0], [80.8, 100514.0], [80.9, 100514.0], [81.0, 100514.0], [81.1, 100514.0], [81.2, 100537.0], [81.3, 100537.0], [81.4, 100537.0], [81.5, 100628.0], [81.6, 100628.0], [81.7, 100628.0], [81.8, 100686.0], [81.9, 100686.0], [82.0, 100686.0], [82.1, 100752.0], [82.2, 100752.0], [82.3, 100752.0], [82.4, 100752.0], [82.5, 100778.0], [82.6, 100778.0], [82.7, 100778.0], [82.8, 100795.0], [82.9, 100795.0], [83.0, 100795.0], [83.1, 100807.0], [83.2, 100807.0], [83.3, 100807.0], [83.4, 100920.0], [83.5, 100920.0], [83.6, 100920.0], [83.7, 100920.0], [83.8, 100968.0], [83.9, 100968.0], [84.0, 100968.0], [84.1, 101101.0], [84.2, 101101.0], [84.3, 101101.0], [84.4, 101130.0], [84.5, 101130.0], [84.6, 101130.0], [84.7, 101336.0], [84.8, 101336.0], [84.9, 101336.0], [85.0, 101336.0], [85.1, 101378.0], [85.2, 101378.0], [85.3, 101378.0], [85.4, 101464.0], [85.5, 101464.0], [85.6, 101464.0], [85.7, 101586.0], [85.8, 101586.0], [85.9, 101586.0], [86.0, 101676.0], [86.1, 101676.0], [86.2, 101676.0], [86.3, 101676.0], [86.4, 101746.0], [86.5, 101746.0], [86.6, 101746.0], [86.7, 101852.0], [86.8, 101852.0], [86.9, 101852.0], [87.0, 101972.0], [87.1, 101972.0], [87.2, 101972.0], [87.3, 102015.0], [87.4, 102015.0], [87.5, 102015.0], [87.6, 102015.0], [87.7, 102020.0], [87.8, 102020.0], [87.9, 102020.0], [88.0, 102062.0], [88.1, 102062.0], [88.2, 102062.0], [88.3, 102124.0], [88.4, 102124.0], [88.5, 102124.0], [88.6, 102284.0], [88.7, 102284.0], [88.8, 102284.0], [88.9, 102284.0], [89.0, 102751.0], [89.1, 102751.0], [89.2, 102751.0], [89.3, 102912.0], [89.4, 102912.0], [89.5, 102912.0], [89.6, 103166.0], [89.7, 103166.0], [89.8, 103166.0], [89.9, 103166.0], [90.0, 105447.0], [90.1, 105447.0], [90.2, 105447.0], [90.3, 105567.0], [90.4, 105567.0], [90.5, 105567.0], [90.6, 105686.0], [90.7, 105686.0], [90.8, 105686.0], [90.9, 106016.0], [91.0, 106016.0], [91.1, 106016.0], [91.2, 106016.0], [91.3, 106156.0], [91.4, 106156.0], [91.5, 106156.0], [91.6, 107299.0], [91.7, 107299.0], [91.8, 107299.0], [91.9, 107318.0], [92.0, 107318.0], [92.1, 107318.0], [92.2, 107389.0], [92.3, 107389.0], [92.4, 107389.0], [92.5, 107389.0], [92.6, 108769.0], [92.7, 108769.0], [92.8, 108769.0], [92.9, 109402.0], [93.0, 109402.0], [93.1, 109402.0], [93.2, 109598.0], [93.3, 109598.0], [93.4, 109598.0], [93.5, 110422.0], [93.6, 110422.0], [93.7, 110422.0], [93.8, 110422.0], [93.9, 110764.0], [94.0, 110764.0], [94.1, 110764.0], [94.2, 110808.0], [94.3, 110808.0], [94.4, 110808.0], [94.5, 110910.0], [94.6, 110910.0], [94.7, 110910.0], [94.8, 111008.0], [94.9, 111008.0], [95.0, 111008.0], [95.1, 111008.0], [95.2, 112165.0], [95.3, 112165.0], [95.4, 112165.0], [95.5, 114336.0], [95.6, 114336.0], [95.7, 114336.0], [95.8, 114747.0], [95.9, 114747.0], [96.0, 114747.0], [96.1, 115802.0], [96.2, 115802.0], [96.3, 115802.0], [96.4, 115802.0], [96.5, 117119.0], [96.6, 117119.0], [96.7, 117119.0], [96.8, 119456.0], [96.9, 119456.0], [97.0, 119456.0], [97.1, 120541.0], [97.2, 120541.0], [97.3, 120541.0], [97.4, 121568.0], [97.5, 121568.0], [97.6, 121568.0], [97.7, 121568.0], [97.8, 123862.0], [97.9, 123862.0], [98.0, 123862.0], [98.1, 126596.0], [98.2, 126596.0], [98.3, 126596.0], [98.4, 126661.0], [98.5, 126661.0], [98.6, 126661.0], [98.7, 126840.0], [98.8, 126840.0], [98.9, 126840.0], [99.0, 126840.0], [99.1, 126876.0], [99.2, 126876.0], [99.3, 126876.0], [99.4, 126877.0], [99.5, 126877.0], [99.6, 126877.0], [99.7, 127601.0], [99.8, 127601.0], [99.9, 127601.0]], "isOverall": false, "label": "Add Employee-1", "isController": false}, {"data": [[0.0, 1945.0], [0.1, 1945.0], [0.2, 1945.0], [0.3, 1945.0], [0.4, 1947.0], [0.5, 1947.0], [0.6, 1947.0], [0.7, 1951.0], [0.8, 1951.0], [0.9, 1951.0], [1.0, 3929.0], [1.1, 3929.0], [1.2, 3929.0], [1.3, 3929.0], [1.4, 3961.0], [1.5, 3961.0], [1.6, 3961.0], [1.7, 4320.0], [1.8, 4320.0], [1.9, 4320.0], [2.0, 5558.0], [2.1, 5558.0], [2.2, 5558.0], [2.3, 5560.0], [2.4, 5560.0], [2.5, 5560.0], [2.6, 5560.0], [2.7, 5561.0], [2.8, 5561.0], [2.9, 5561.0], [3.0, 5567.0], [3.1, 5567.0], [3.2, 5567.0], [3.3, 5572.0], [3.4, 5572.0], [3.5, 5572.0], [3.6, 5573.0], [3.7, 5573.0], [3.8, 5573.0], [3.9, 5573.0], [4.0, 5919.0], [4.1, 5919.0], [4.2, 5919.0], [4.3, 6076.0], [4.4, 6076.0], [4.5, 6076.0], [4.6, 7222.0], [4.7, 7222.0], [4.8, 7222.0], [4.9, 7224.0], [5.0, 7224.0], [5.1, 7224.0], [5.2, 7224.0], [5.3, 7442.0], [5.4, 7442.0], [5.5, 7442.0], [5.6, 7569.0], [5.7, 7569.0], [5.8, 7569.0], [5.9, 7736.0], [6.0, 7736.0], [6.1, 7736.0], [6.2, 8040.0], [6.3, 8040.0], [6.4, 8040.0], [6.5, 8040.0], [6.6, 8307.0], [6.7, 8307.0], [6.8, 8307.0], [6.9, 10410.0], [7.0, 10410.0], [7.1, 10410.0], [7.2, 10418.0], [7.3, 10418.0], [7.4, 10418.0], [7.5, 10426.0], [7.6, 10426.0], [7.7, 10426.0], [7.8, 10426.0], [7.9, 10428.0], [8.0, 10428.0], [8.1, 10428.0], [8.2, 10430.0], [8.3, 10430.0], [8.4, 10430.0], [8.5, 10433.0], [8.6, 10433.0], [8.7, 10433.0], [8.8, 10435.0], [8.9, 10435.0], [9.0, 10435.0], [9.1, 10435.0], [9.2, 10440.0], [9.3, 10440.0], [9.4, 10440.0], [9.5, 10447.0], [9.6, 10447.0], [9.7, 10447.0], [9.8, 10461.0], [9.9, 10461.0], [10.0, 10461.0], [10.1, 10495.0], [10.2, 10495.0], [10.3, 10495.0], [10.4, 10495.0], [10.5, 10578.0], [10.6, 10578.0], [10.7, 10578.0], [10.8, 12310.0], [10.9, 12310.0], [11.0, 12310.0], [11.1, 12314.0], [11.2, 12314.0], [11.3, 12314.0], [11.4, 12314.0], [11.5, 12329.0], [11.6, 12329.0], [11.7, 12329.0], [11.8, 12339.0], [11.9, 12339.0], [12.0, 12339.0], [12.1, 12851.0], [12.2, 12851.0], [12.3, 12851.0], [12.4, 13464.0], [12.5, 13464.0], [12.6, 13464.0], [12.7, 13464.0], [12.8, 13619.0], [12.9, 13619.0], [13.0, 13619.0], [13.1, 13630.0], [13.2, 13630.0], [13.3, 13630.0], [13.4, 13737.0], [13.5, 13737.0], [13.6, 13737.0], [13.7, 14364.0], [13.8, 14364.0], [13.9, 14364.0], [14.0, 14364.0], [14.1, 14542.0], [14.2, 14542.0], [14.3, 14542.0], [14.4, 15007.0], [14.5, 15007.0], [14.6, 15007.0], [14.7, 15010.0], [14.8, 15010.0], [14.9, 15010.0], [15.0, 15011.0], [15.1, 15011.0], [15.2, 15011.0], [15.3, 15011.0], [15.4, 15015.0], [15.5, 15015.0], [15.6, 15015.0], [15.7, 15015.0], [15.8, 15015.0], [15.9, 15015.0], [16.0, 15016.0], [16.1, 15016.0], [16.2, 15016.0], [16.3, 15017.0], [16.4, 15017.0], [16.5, 15017.0], [16.6, 15017.0], [16.7, 15017.0], [16.8, 15017.0], [16.9, 15017.0], [17.0, 15454.0], [17.1, 15454.0], [17.2, 15454.0], [17.3, 15463.0], [17.4, 15463.0], [17.5, 15463.0], [17.6, 15478.0], [17.7, 15478.0], [17.8, 15478.0], [17.9, 15478.0], [18.0, 15601.0], [18.1, 15601.0], [18.2, 15601.0], [18.3, 15661.0], [18.4, 15661.0], [18.5, 15661.0], [18.6, 15973.0], [18.7, 15973.0], [18.8, 15973.0], [18.9, 16276.0], [19.0, 16276.0], [19.1, 16276.0], [19.2, 16276.0], [19.3, 16461.0], [19.4, 16461.0], [19.5, 16461.0], [19.6, 16757.0], [19.7, 16757.0], [19.8, 16757.0], [19.9, 16919.0], [20.0, 16919.0], [20.1, 16919.0], [20.2, 16992.0], [20.3, 16992.0], [20.4, 16992.0], [20.5, 16992.0], [20.6, 17043.0], [20.7, 17043.0], [20.8, 17043.0], [20.9, 17317.0], [21.0, 17317.0], [21.1, 17317.0], [21.2, 17332.0], [21.3, 17332.0], [21.4, 17332.0], [21.5, 17503.0], [21.6, 17503.0], [21.7, 17503.0], [21.8, 17503.0], [21.9, 17720.0], [22.0, 17720.0], [22.1, 17720.0], [22.2, 17830.0], [22.3, 17830.0], [22.4, 17830.0], [22.5, 18510.0], [22.6, 18510.0], [22.7, 18510.0], [22.8, 18510.0], [22.9, 18839.0], [23.0, 18839.0], [23.1, 18839.0], [23.2, 19150.0], [23.3, 19150.0], [23.4, 19150.0], [23.5, 19371.0], [23.6, 19371.0], [23.7, 19371.0], [23.8, 19558.0], [23.9, 19558.0], [24.0, 19558.0], [24.1, 19558.0], [24.2, 20131.0], [24.3, 20131.0], [24.4, 20131.0], [24.5, 20852.0], [24.6, 20852.0], [24.7, 20852.0], [24.8, 20936.0], [24.9, 20936.0], [25.0, 20936.0], [25.1, 21755.0], [25.2, 21755.0], [25.3, 21755.0], [25.4, 21755.0], [25.5, 21964.0], [25.6, 21964.0], [25.7, 21964.0], [25.8, 22925.0], [25.9, 22925.0], [26.0, 22925.0], [26.1, 23019.0], [26.2, 23019.0], [26.3, 23019.0], [26.4, 23181.0], [26.5, 23181.0], [26.6, 23181.0], [26.7, 23181.0], [26.8, 23642.0], [26.9, 23642.0], [27.0, 23642.0], [27.1, 24049.0], [27.2, 24049.0], [27.3, 24049.0], [27.4, 24226.0], [27.5, 24226.0], [27.6, 24226.0], [27.7, 24231.0], [27.8, 24231.0], [27.9, 24231.0], [28.0, 24231.0], [28.1, 24232.0], [28.2, 24232.0], [28.3, 24232.0], [28.4, 24233.0], [28.5, 24233.0], [28.6, 24233.0], [28.7, 24234.0], [28.8, 24234.0], [28.9, 24234.0], [29.0, 24257.0], [29.1, 24257.0], [29.2, 24257.0], [29.3, 24257.0], [29.4, 24320.0], [29.5, 24320.0], [29.6, 24320.0], [29.7, 24534.0], [29.8, 24534.0], [29.9, 24534.0], [30.0, 24907.0], [30.1, 24907.0], [30.2, 24907.0], [30.3, 25143.0], [30.4, 25143.0], [30.5, 25143.0], [30.6, 25143.0], [30.7, 25166.0], [30.8, 25166.0], [30.9, 25166.0], [31.0, 25220.0], [31.1, 25220.0], [31.2, 25220.0], [31.3, 25621.0], [31.4, 25621.0], [31.5, 25621.0], [31.6, 26290.0], [31.7, 26290.0], [31.8, 26290.0], [31.9, 26290.0], [32.0, 26482.0], [32.1, 26482.0], [32.2, 26482.0], [32.3, 26584.0], [32.4, 26584.0], [32.5, 26584.0], [32.6, 26590.0], [32.7, 26590.0], [32.8, 26590.0], [32.9, 26758.0], [33.0, 26758.0], [33.1, 26758.0], [33.2, 26758.0], [33.3, 26893.0], [33.4, 26893.0], [33.5, 26893.0], [33.6, 27200.0], [33.7, 27200.0], [33.8, 27200.0], [33.9, 27703.0], [34.0, 27703.0], [34.1, 27703.0], [34.2, 27703.0], [34.3, 28024.0], [34.4, 28024.0], [34.5, 28024.0], [34.6, 28439.0], [34.7, 28439.0], [34.8, 28439.0], [34.9, 29616.0], [35.0, 29616.0], [35.1, 29616.0], [35.2, 30811.0], [35.3, 30811.0], [35.4, 30811.0], [35.5, 30811.0], [35.6, 31051.0], [35.7, 31051.0], [35.8, 31051.0], [35.9, 31053.0], [36.0, 31053.0], [36.1, 31053.0], [36.2, 31078.0], [36.3, 31078.0], [36.4, 31078.0], [36.5, 31187.0], [36.6, 31187.0], [36.7, 31187.0], [36.8, 31187.0], [36.9, 31314.0], [37.0, 31314.0], [37.1, 31314.0], [37.2, 31998.0], [37.3, 31998.0], [37.4, 31998.0], [37.5, 32000.0], [37.6, 32000.0], [37.7, 32000.0], [37.8, 33692.0], [37.9, 33692.0], [38.0, 33692.0], [38.1, 33692.0], [38.2, 34213.0], [38.3, 34213.0], [38.4, 34213.0], [38.5, 34215.0], [38.6, 34215.0], [38.7, 34215.0], [38.8, 34376.0], [38.9, 34376.0], [39.0, 34376.0], [39.1, 34511.0], [39.2, 34511.0], [39.3, 34511.0], [39.4, 34511.0], [39.5, 34517.0], [39.6, 34517.0], [39.7, 34517.0], [39.8, 34569.0], [39.9, 34569.0], [40.0, 34569.0], [40.1, 34577.0], [40.2, 34577.0], [40.3, 34577.0], [40.4, 35534.0], [40.5, 35534.0], [40.6, 35534.0], [40.7, 35534.0], [40.8, 35967.0], [40.9, 35967.0], [41.0, 35967.0], [41.1, 36356.0], [41.2, 36356.0], [41.3, 36356.0], [41.4, 37216.0], [41.5, 37216.0], [41.6, 37216.0], [41.7, 37932.0], [41.8, 37932.0], [41.9, 37932.0], [42.0, 37932.0], [42.1, 38004.0], [42.2, 38004.0], [42.3, 38004.0], [42.4, 38049.0], [42.5, 38049.0], [42.6, 38049.0], [42.7, 38129.0], [42.8, 38129.0], [42.9, 38129.0], [43.0, 38510.0], [43.1, 38510.0], [43.2, 38510.0], [43.3, 38510.0], [43.4, 38687.0], [43.5, 38687.0], [43.6, 38687.0], [43.7, 39640.0], [43.8, 39640.0], [43.9, 39640.0], [44.0, 39881.0], [44.1, 39881.0], [44.2, 39881.0], [44.3, 40343.0], [44.4, 40343.0], [44.5, 40343.0], [44.6, 40343.0], [44.7, 40821.0], [44.8, 40821.0], [44.9, 40821.0], [45.0, 40984.0], [45.1, 40984.0], [45.2, 40984.0], [45.3, 41643.0], [45.4, 41643.0], [45.5, 41643.0], [45.6, 41643.0], [45.7, 41722.0], [45.8, 41722.0], [45.9, 41722.0], [46.0, 43697.0], [46.1, 43697.0], [46.2, 43697.0], [46.3, 43708.0], [46.4, 43708.0], [46.5, 43708.0], [46.6, 45967.0], [46.7, 45967.0], [46.8, 45967.0], [46.9, 45967.0], [47.0, 46052.0], [47.1, 46052.0], [47.2, 46052.0], [47.3, 46157.0], [47.4, 46157.0], [47.5, 46157.0], [47.6, 47038.0], [47.7, 47038.0], [47.8, 47038.0], [47.9, 48872.0], [48.0, 48872.0], [48.1, 48872.0], [48.2, 48872.0], [48.3, 48929.0], [48.4, 48929.0], [48.5, 48929.0], [48.6, 49755.0], [48.7, 49755.0], [48.8, 49755.0], [48.9, 49977.0], [49.0, 49977.0], [49.1, 49977.0], [49.2, 51127.0], [49.3, 51127.0], [49.4, 51127.0], [49.5, 51127.0], [49.6, 51311.0], [49.7, 51311.0], [49.8, 51311.0], [49.9, 51427.0], [50.0, 51427.0], [50.1, 51427.0], [50.2, 52336.0], [50.3, 52336.0], [50.4, 52336.0], [50.5, 52373.0], [50.6, 52373.0], [50.7, 52373.0], [50.8, 52373.0], [50.9, 53028.0], [51.0, 53028.0], [51.1, 53028.0], [51.2, 55224.0], [51.3, 55224.0], [51.4, 55224.0], [51.5, 55271.0], [51.6, 55271.0], [51.7, 55271.0], [51.8, 55507.0], [51.9, 55507.0], [52.0, 55507.0], [52.1, 55507.0], [52.2, 55777.0], [52.3, 55777.0], [52.4, 55777.0], [52.5, 55866.0], [52.6, 55866.0], [52.7, 55866.0], [52.8, 55887.0], [52.9, 55887.0], [53.0, 55887.0], [53.1, 56677.0], [53.2, 56677.0], [53.3, 56677.0], [53.4, 56677.0], [53.5, 56751.0], [53.6, 56751.0], [53.7, 56751.0], [53.8, 56975.0], [53.9, 56975.0], [54.0, 56975.0], [54.1, 56984.0], [54.2, 56984.0], [54.3, 56984.0], [54.4, 57006.0], [54.5, 57006.0], [54.6, 57006.0], [54.7, 57006.0], [54.8, 57022.0], [54.9, 57022.0], [55.0, 57022.0], [55.1, 57025.0], [55.2, 57025.0], [55.3, 57025.0], [55.4, 57097.0], [55.5, 57097.0], [55.6, 57097.0], [55.7, 57097.0], [55.8, 57112.0], [55.9, 57112.0], [56.0, 57112.0], [56.1, 57128.0], [56.2, 57128.0], [56.3, 57128.0], [56.4, 57230.0], [56.5, 57230.0], [56.6, 57230.0], [56.7, 57478.0], [56.8, 57478.0], [56.9, 57478.0], [57.0, 57478.0], [57.1, 57495.0], [57.2, 57495.0], [57.3, 57495.0], [57.4, 57976.0], [57.5, 57976.0], [57.6, 57976.0], [57.7, 58127.0], [57.8, 58127.0], [57.9, 58127.0], [58.0, 58497.0], [58.1, 58497.0], [58.2, 58497.0], [58.3, 58497.0], [58.4, 58859.0], [58.5, 58859.0], [58.6, 58859.0], [58.7, 59049.0], [58.8, 59049.0], [58.9, 59049.0], [59.0, 59094.0], [59.1, 59094.0], [59.2, 59094.0], [59.3, 59095.0], [59.4, 59095.0], [59.5, 59095.0], [59.6, 59095.0], [59.7, 59099.0], [59.8, 59099.0], [59.9, 59099.0], [60.0, 59101.0], [60.1, 59101.0], [60.2, 59101.0], [60.3, 59105.0], [60.4, 59105.0], [60.5, 59105.0], [60.6, 59108.0], [60.7, 59108.0], [60.8, 59108.0], [60.9, 59108.0], [61.0, 59114.0], [61.1, 59114.0], [61.2, 59114.0], [61.3, 59125.0], [61.4, 59125.0], [61.5, 59125.0], [61.6, 59132.0], [61.7, 59132.0], [61.8, 59132.0], [61.9, 59133.0], [62.0, 59133.0], [62.1, 59133.0], [62.2, 59133.0], [62.3, 59141.0], [62.4, 59141.0], [62.5, 59141.0], [62.6, 59148.0], [62.7, 59148.0], [62.8, 59148.0], [62.9, 59150.0], [63.0, 59150.0], [63.1, 59150.0], [63.2, 59151.0], [63.3, 59151.0], [63.4, 59151.0], [63.5, 59151.0], [63.6, 59353.0], [63.7, 59353.0], [63.8, 59353.0], [63.9, 59856.0], [64.0, 59856.0], [64.1, 59856.0], [64.2, 60091.0], [64.3, 60091.0], [64.4, 60091.0], [64.5, 60642.0], [64.6, 60642.0], [64.7, 60642.0], [64.8, 60642.0], [64.9, 60688.0], [65.0, 60688.0], [65.1, 60688.0], [65.2, 60692.0], [65.3, 60692.0], [65.4, 60692.0], [65.5, 60710.0], [65.6, 60710.0], [65.7, 60710.0], [65.8, 60920.0], [65.9, 60920.0], [66.0, 60920.0], [66.1, 60920.0], [66.2, 62137.0], [66.3, 62137.0], [66.4, 62137.0], [66.5, 62739.0], [66.6, 62739.0], [66.7, 62739.0], [66.8, 63040.0], [66.9, 63040.0], [67.0, 63040.0], [67.1, 63040.0], [67.2, 64496.0], [67.3, 64496.0], [67.4, 64496.0], [67.5, 64724.0], [67.6, 64724.0], [67.7, 64724.0], [67.8, 65602.0], [67.9, 65602.0], [68.0, 65602.0], [68.1, 65954.0], [68.2, 65954.0], [68.3, 65954.0], [68.4, 65954.0], [68.5, 66042.0], [68.6, 66042.0], [68.7, 66042.0], [68.8, 67559.0], [68.9, 67559.0], [69.0, 67559.0], [69.1, 67600.0], [69.2, 67600.0], [69.3, 67600.0], [69.4, 67635.0], [69.5, 67635.0], [69.6, 67635.0], [69.7, 67635.0], [69.8, 68843.0], [69.9, 68843.0], [70.0, 68843.0], [70.1, 69203.0], [70.2, 69203.0], [70.3, 69203.0], [70.4, 70319.0], [70.5, 70319.0], [70.6, 70319.0], [70.7, 70878.0], [70.8, 70878.0], [70.9, 70878.0], [71.0, 70878.0], [71.1, 70880.0], [71.2, 70880.0], [71.3, 70880.0], [71.4, 71472.0], [71.5, 71472.0], [71.6, 71472.0], [71.7, 72156.0], [71.8, 72156.0], [71.9, 72156.0], [72.0, 72355.0], [72.1, 72355.0], [72.2, 72355.0], [72.3, 72355.0], [72.4, 72376.0], [72.5, 72376.0], [72.6, 72376.0], [72.7, 72381.0], [72.8, 72381.0], [72.9, 72381.0], [73.0, 72473.0], [73.1, 72473.0], [73.2, 72473.0], [73.3, 72749.0], [73.4, 72749.0], [73.5, 72749.0], [73.6, 72749.0], [73.7, 72989.0], [73.8, 72989.0], [73.9, 72989.0], [74.0, 73029.0], [74.1, 73029.0], [74.2, 73029.0], [74.3, 74756.0], [74.4, 74756.0], [74.5, 74756.0], [74.6, 74839.0], [74.7, 74839.0], [74.8, 74839.0], [74.9, 74839.0], [75.0, 74873.0], [75.1, 74873.0], [75.2, 74873.0], [75.3, 75483.0], [75.4, 75483.0], [75.5, 75483.0], [75.6, 76101.0], [75.7, 76101.0], [75.8, 76101.0], [75.9, 76951.0], [76.0, 76951.0], [76.1, 76951.0], [76.2, 76951.0], [76.3, 76997.0], [76.4, 76997.0], [76.5, 76997.0], [76.6, 77007.0], [76.7, 77007.0], [76.8, 77007.0], [76.9, 77603.0], [77.0, 77603.0], [77.1, 77603.0], [77.2, 78882.0], [77.3, 78882.0], [77.4, 78882.0], [77.5, 78882.0], [77.6, 79075.0], [77.7, 79075.0], [77.8, 79075.0], [77.9, 79667.0], [78.0, 79667.0], [78.1, 79667.0], [78.2, 79678.0], [78.3, 79678.0], [78.4, 79678.0], [78.5, 79678.0], [78.6, 80391.0], [78.7, 80391.0], [78.8, 80391.0], [78.9, 80888.0], [79.0, 80888.0], [79.1, 80888.0], [79.2, 81324.0], [79.3, 81324.0], [79.4, 81324.0], [79.5, 81565.0], [79.6, 81565.0], [79.7, 81565.0], [79.8, 81565.0], [79.9, 81644.0], [80.0, 81644.0], [80.1, 81644.0], [80.2, 81740.0], [80.3, 81740.0], [80.4, 81740.0], [80.5, 82032.0], [80.6, 82032.0], [80.7, 82032.0], [80.8, 82891.0], [80.9, 82891.0], [81.0, 82891.0], [81.1, 82891.0], [81.2, 82975.0], [81.3, 82975.0], [81.4, 82975.0], [81.5, 83028.0], [81.6, 83028.0], [81.7, 83028.0], [81.8, 83157.0], [81.9, 83157.0], [82.0, 83157.0], [82.1, 83343.0], [82.2, 83343.0], [82.3, 83343.0], [82.4, 83343.0], [82.5, 83410.0], [82.6, 83410.0], [82.7, 83410.0], [82.8, 83651.0], [82.9, 83651.0], [83.0, 83651.0], [83.1, 84023.0], [83.2, 84023.0], [83.3, 84023.0], [83.4, 84214.0], [83.5, 84214.0], [83.6, 84214.0], [83.7, 84214.0], [83.8, 84507.0], [83.9, 84507.0], [84.0, 84507.0], [84.1, 85177.0], [84.2, 85177.0], [84.3, 85177.0], [84.4, 85314.0], [84.5, 85314.0], [84.6, 85314.0], [84.7, 85533.0], [84.8, 85533.0], [84.9, 85533.0], [85.0, 85533.0], [85.1, 86011.0], [85.2, 86011.0], [85.3, 86011.0], [85.4, 86503.0], [85.5, 86503.0], [85.6, 86503.0], [85.7, 87151.0], [85.8, 87151.0], [85.9, 87151.0], [86.0, 87151.0], [86.1, 87151.0], [86.2, 87151.0], [86.3, 87151.0], [86.4, 87985.0], [86.5, 87985.0], [86.6, 87985.0], [86.7, 88043.0], [86.8, 88043.0], [86.9, 88043.0], [87.0, 88786.0], [87.1, 88786.0], [87.2, 88786.0], [87.3, 89075.0], [87.4, 89075.0], [87.5, 89075.0], [87.6, 89075.0], [87.7, 89797.0], [87.8, 89797.0], [87.9, 89797.0], [88.0, 90141.0], [88.1, 90141.0], [88.2, 90141.0], [88.3, 90255.0], [88.4, 90255.0], [88.5, 90255.0], [88.6, 90877.0], [88.7, 90877.0], [88.8, 90877.0], [88.9, 90877.0], [89.0, 91684.0], [89.1, 91684.0], [89.2, 91684.0], [89.3, 91715.0], [89.4, 91715.0], [89.5, 91715.0], [89.6, 91756.0], [89.7, 91756.0], [89.8, 91756.0], [89.9, 91756.0], [90.0, 91766.0], [90.1, 91766.0], [90.2, 91766.0], [90.3, 91796.0], [90.4, 91796.0], [90.5, 91796.0], [90.6, 91803.0], [90.7, 91803.0], [90.8, 91803.0], [90.9, 91803.0], [91.0, 91803.0], [91.1, 91803.0], [91.2, 91803.0], [91.3, 91811.0], [91.4, 91811.0], [91.5, 91811.0], [91.6, 91814.0], [91.7, 91814.0], [91.8, 91814.0], [91.9, 92325.0], [92.0, 92325.0], [92.1, 92325.0], [92.2, 93195.0], [92.3, 93195.0], [92.4, 93195.0], [92.5, 93195.0], [92.6, 93385.0], [92.7, 93385.0], [92.8, 93385.0], [92.9, 93636.0], [93.0, 93636.0], [93.1, 93636.0], [93.2, 93945.0], [93.3, 93945.0], [93.4, 93945.0], [93.5, 94510.0], [93.6, 94510.0], [93.7, 94510.0], [93.8, 94510.0], [93.9, 94584.0], [94.0, 94584.0], [94.1, 94584.0], [94.2, 94625.0], [94.3, 94625.0], [94.4, 94625.0], [94.5, 94897.0], [94.6, 94897.0], [94.7, 94897.0], [94.8, 95339.0], [94.9, 95339.0], [95.0, 95339.0], [95.1, 95339.0], [95.2, 95873.0], [95.3, 95873.0], [95.4, 95873.0], [95.5, 95878.0], [95.6, 95878.0], [95.7, 95878.0], [95.8, 95907.0], [95.9, 95907.0], [96.0, 95907.0], [96.1, 95909.0], [96.2, 95909.0], [96.3, 95909.0], [96.4, 95909.0], [96.5, 97061.0], [96.6, 97061.0], [96.7, 97061.0], [96.8, 97457.0], [96.9, 97457.0], [97.0, 97457.0], [97.1, 99114.0], [97.2, 99114.0], [97.3, 99114.0], [97.4, 99278.0], [97.5, 99278.0], [97.6, 99278.0], [97.7, 99278.0], [97.8, 100032.0], [97.9, 100032.0], [98.0, 100032.0], [98.1, 100410.0], [98.2, 100410.0], [98.3, 100410.0], [98.4, 100930.0], [98.5, 100930.0], [98.6, 100930.0], [98.7, 101551.0], [98.8, 101551.0], [98.9, 101551.0], [99.0, 101551.0], [99.1, 102062.0], [99.2, 102062.0], [99.3, 102062.0], [99.4, 105152.0], [99.5, 105152.0], [99.6, 105152.0], [99.7, 106067.0], [99.8, 106067.0], [99.9, 106067.0]], "isOverall": false, "label": "Add Employee-0", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 141.0, "series": [{"data": [[0.0, 141.0], [138400.0, 1.0], [140000.0, 1.0], [143200.0, 1.0], [148000.0, 2.0], [151200.0, 1.0], [131300.0, 2.0], [137700.0, 1.0], [150500.0, 2.0], [163300.0, 1.0], [174500.0, 1.0], [177700.0, 1.0], [182500.0, 1.0], [187300.0, 1.0], [190500.0, 1.0], [192100.0, 1.0], [67500.0, 1.0], [68300.0, 1.0], [101100.0, 1.0], [103500.0, 1.0], [107500.0, 1.0], [111500.0, 1.0], [112300.0, 1.0], [113100.0, 1.0], [120300.0, 1.0], [121900.0, 2.0], [119500.0, 2.0], [122700.0, 3.0], [123500.0, 1.0], [127500.0, 1.0], [129100.0, 1.0], [129900.0, 1.0], [133800.0, 1.0], [135400.0, 2.0], [151400.0, 1.0], [148200.0, 1.0], [169000.0, 1.0], [172200.0, 1.0], [177000.0, 1.0], [178600.0, 1.0], [175400.0, 1.0], [189800.0, 1.0], [191400.0, 1.0], [100.0, 2.0], [131500.0, 1.0], [142700.0, 1.0], [150700.0, 2.0], [152300.0, 1.0], [176300.0, 1.0], [184300.0, 1.0], [60900.0, 1.0], [100200.0, 1.0], [101000.0, 2.0], [104200.0, 1.0], [105000.0, 1.0], [110600.0, 2.0], [113800.0, 1.0], [111400.0, 1.0], [120200.0, 1.0], [121800.0, 1.0], [122600.0, 1.0], [124200.0, 1.0], [125000.0, 1.0], [127400.0, 1.0], [130600.0, 1.0], [132400.0, 1.0], [140400.0, 2.0], [150000.0, 1.0], [166000.0, 1.0], [170800.0, 1.0], [177200.0, 1.0], [196400.0, 1.0], [198000.0, 1.0], [1100.0, 12.0], [1200.0, 16.0], [138100.0, 1.0], [139700.0, 1.0], [152500.0, 3.0], [155700.0, 1.0], [160500.0, 1.0], [162100.0, 1.0], [194100.0, 2.0], [192500.0, 1.0], [195700.0, 1.0], [3600.0, 4.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [4400.0, 2.0], [4600.0, 4.0], [4700.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5000.0, 2.0], [5500.0, 6.0], [5900.0, 1.0], [6000.0, 1.0], [94500.0, 1.0], [100100.0, 1.0], [6700.0, 1.0], [112900.0, 1.0], [113700.0, 1.0], [7200.0, 2.0], [7400.0, 1.0], [115300.0, 1.0], [118500.0, 1.0], [7500.0, 2.0], [120900.0, 1.0], [121700.0, 1.0], [7700.0, 1.0], [123300.0, 1.0], [126500.0, 1.0], [8000.0, 1.0], [127300.0, 2.0], [8300.0, 1.0], [147000.0, 1.0], [150200.0, 1.0], [10400.0, 10.0], [10500.0, 2.0], [185400.0, 1.0], [190200.0, 1.0], [193400.0, 1.0], [195000.0, 1.0], [12300.0, 4.0], [12800.0, 1.0], [13400.0, 1.0], [13600.0, 2.0], [13700.0, 1.0], [15000.0, 8.0], [15400.0, 2.0], [15600.0, 1.0], [141500.0, 1.0], [139900.0, 1.0], [151100.0, 1.0], [167100.0, 1.0], [176700.0, 1.0], [195900.0, 1.0], [62800.0, 1.0], [102400.0, 1.0], [106400.0, 1.0], [109600.0, 1.0], [111200.0, 1.0], [118400.0, 1.0], [124800.0, 1.0], [126400.0, 1.0], [130400.0, 1.0], [150400.0, 1.0], [155200.0, 1.0], [156800.0, 2.0], [161600.0, 1.0], [163200.0, 1.0], [164800.0, 1.0], [171200.0, 1.0], [172800.0, 1.0], [179200.0, 1.0], [182400.0, 1.0], [190400.0, 1.0], [192000.0, 1.0], [133700.0, 1.0], [138500.0, 1.0], [141700.0, 1.0], [148100.0, 1.0], [164100.0, 1.0], [175300.0, 1.0], [181700.0, 1.0], [189700.0, 1.0], [192900.0, 1.0], [194500.0, 1.0], [99100.0, 1.0], [99900.0, 1.0], [102300.0, 1.0], [103100.0, 1.0], [104700.0, 1.0], [106300.0, 1.0], [112700.0, 1.0], [116700.0, 1.0], [121500.0, 1.0], [127100.0, 1.0], [127900.0, 1.0], [133000.0, 1.0], [131400.0, 1.0], [161800.0, 1.0], [176200.0, 1.0], [182600.0, 1.0], [184200.0, 1.0], [193800.0, 1.0], [146700.0, 1.0], [164300.0, 1.0], [177100.0, 1.0], [193100.0, 1.0], [194700.0, 1.0], [67800.0, 1.0], [99000.0, 1.0], [105400.0, 1.0], [104600.0, 1.0], [107000.0, 1.0], [107800.0, 1.0], [111000.0, 1.0], [113400.0, 1.0], [115000.0, 1.0], [121400.0, 2.0], [124600.0, 1.0], [123800.0, 1.0], [127000.0, 1.0], [130200.0, 1.0], [139600.0, 1.0], [152400.0, 1.0], [150800.0, 1.0], [158800.0, 1.0], [163600.0, 1.0], [168400.0, 1.0], [174800.0, 1.0], [189200.0, 1.0], [195600.0, 2.0], [138900.0, 2.0], [142100.0, 1.0], [146900.0, 1.0], [148500.0, 1.0], [159700.0, 1.0], [166100.0, 2.0], [191700.0, 1.0], [196500.0, 1.0], [100500.0, 1.0], [102100.0, 1.0], [103700.0, 1.0], [108500.0, 1.0], [109300.0, 1.0], [110100.0, 1.0], [114900.0, 1.0], [117300.0, 1.0], [118900.0, 1.0], [121300.0, 2.0], [120500.0, 1.0], [122900.0, 1.0], [126900.0, 1.0], [151000.0, 1.0], [155800.0, 2.0], [160600.0, 1.0], [157400.0, 1.0], [165400.0, 1.0], [178200.0, 1.0], [184600.0, 1.0], [192600.0, 1.0], [131100.0, 1.0], [140700.0, 2.0], [150300.0, 1.0], [156700.0, 1.0], [159900.0, 1.0], [164700.0, 2.0], [179100.0, 1.0], [180700.0, 1.0], [182300.0, 1.0], [183900.0, 1.0], [190300.0, 1.0], [102000.0, 2.0], [98800.0, 1.0], [103600.0, 1.0], [110800.0, 1.0], [111600.0, 1.0], [116400.0, 1.0], [122000.0, 1.0], [125200.0, 2.0], [126000.0, 1.0], [127600.0, 4.0]], "isOverall": false, "label": "Add Employee", "isController": false}, {"data": [[0.0, 47.0], [68700.0, 1.0], [65900.0, 1.0], [67900.0, 1.0], [69900.0, 1.0], [70700.0, 2.0], [70300.0, 1.0], [75900.0, 2.0], [76300.0, 1.0], [76700.0, 1.0], [77100.0, 1.0], [77500.0, 2.0], [73900.0, 1.0], [75500.0, 3.0], [79500.0, 1.0], [78300.0, 4.0], [79100.0, 2.0], [79900.0, 2.0], [80300.0, 1.0], [81900.0, 1.0], [77900.0, 1.0], [82300.0, 1.0], [85900.0, 1.0], [86700.0, 1.0], [88300.0, 1.0], [96700.0, 1.0], [98300.0, 1.0], [101900.0, 1.0], [101500.0, 1.0], [101100.0, 2.0], [100300.0, 3.0], [100700.0, 3.0], [99500.0, 1.0], [99900.0, 3.0], [103100.0, 1.0], [105500.0, 1.0], [102700.0, 1.0], [108700.0, 1.0], [109500.0, 1.0], [110700.0, 1.0], [114300.0, 1.0], [114700.0, 1.0], [117100.0, 1.0], [121500.0, 1.0], [56900.0, 1.0], [58900.0, 1.0], [63700.0, 1.0], [64500.0, 1.0], [64700.0, 1.0], [65500.0, 1.0], [64900.0, 1.0], [65100.0, 3.0], [63500.0, 1.0], [64300.0, 2.0], [65800.0, 1.0], [67400.0, 1.0], [68200.0, 1.0], [69400.0, 1.0], [70600.0, 1.0], [71000.0, 1.0], [75400.0, 3.0], [77800.0, 4.0], [77000.0, 3.0], [76200.0, 1.0], [78200.0, 3.0], [79400.0, 4.0], [79800.0, 1.0], [80200.0, 1.0], [81400.0, 1.0], [84600.0, 1.0], [83400.0, 1.0], [90200.0, 1.0], [93800.0, 1.0], [97000.0, 1.0], [96600.0, 1.0], [98200.0, 1.0], [101400.0, 1.0], [101800.0, 1.0], [102200.0, 1.0], [98600.0, 1.0], [100200.0, 2.0], [100600.0, 2.0], [105400.0, 1.0], [109400.0, 1.0], [111000.0, 1.0], [115800.0, 1.0], [119400.0, 1.0], [123800.0, 1.0], [126600.0, 1.0], [66100.0, 1.0], [67300.0, 1.0], [67700.0, 1.0], [68500.0, 2.0], [69300.0, 2.0], [68900.0, 1.0], [72500.0, 2.0], [70100.0, 1.0], [73700.0, 1.0], [72100.0, 1.0], [75700.0, 2.0], [76900.0, 1.0], [76500.0, 1.0], [74100.0, 1.0], [75300.0, 1.0], [77700.0, 1.0], [76100.0, 2.0], [79300.0, 3.0], [78900.0, 2.0], [80500.0, 1.0], [81700.0, 1.0], [80900.0, 1.0], [81300.0, 1.0], [84100.0, 1.0], [84900.0, 1.0], [85700.0, 1.0], [88500.0, 1.0], [94500.0, 1.0], [96100.0, 1.0], [95300.0, 1.0], [95700.0, 1.0], [97300.0, 1.0], [98100.0, 1.0], [101300.0, 2.0], [101700.0, 1.0], [100100.0, 2.0], [100900.0, 2.0], [99700.0, 2.0], [102100.0, 1.0], [100500.0, 2.0], [102900.0, 1.0], [106100.0, 1.0], [107300.0, 2.0], [112100.0, 1.0], [110900.0, 1.0], [120500.0, 1.0], [126500.0, 1.0], [63000.0, 1.0], [63600.0, 3.0], [64200.0, 3.0], [64400.0, 1.0], [65600.0, 1.0], [66400.0, 1.0], [66800.0, 1.0], [68000.0, 1.0], [68400.0, 1.0], [69600.0, 1.0], [70400.0, 2.0], [73200.0, 2.0], [72800.0, 2.0], [73600.0, 2.0], [75600.0, 3.0], [76800.0, 3.0], [77200.0, 2.0], [77600.0, 2.0], [74800.0, 1.0], [80400.0, 2.0], [78400.0, 1.0], [78800.0, 1.0], [79600.0, 1.0], [81200.0, 1.0], [83600.0, 1.0], [82000.0, 1.0], [82400.0, 1.0], [84400.0, 1.0], [88800.0, 1.0], [89200.0, 1.0], [90400.0, 1.0], [90800.0, 1.0], [92800.0, 1.0], [95200.0, 1.0], [95600.0, 2.0], [97600.0, 2.0], [96400.0, 2.0], [96800.0, 1.0], [97200.0, 1.0], [98000.0, 1.0], [101600.0, 1.0], [102000.0, 3.0], [100400.0, 2.0], [99600.0, 1.0], [100000.0, 2.0], [100800.0, 1.0], [105600.0, 1.0], [106000.0, 1.0], [107200.0, 1.0], [110400.0, 1.0], [110800.0, 1.0], [126800.0, 3.0], [127600.0, 1.0]], "isOverall": false, "label": "Add Employee-1", "isController": false}, {"data": [[65900.0, 1.0], [67500.0, 1.0], [72300.0, 3.0], [74700.0, 1.0], [80300.0, 1.0], [85100.0, 1.0], [92300.0, 1.0], [93100.0, 1.0], [93900.0, 1.0], [105100.0, 1.0], [34500.0, 4.0], [38500.0, 1.0], [38100.0, 1.0], [40900.0, 1.0], [41700.0, 1.0], [43700.0, 1.0], [46100.0, 1.0], [48900.0, 1.0], [49700.0, 1.0], [51300.0, 1.0], [56900.0, 2.0], [55700.0, 1.0], [58100.0, 1.0], [59300.0, 1.0], [60900.0, 1.0], [62100.0, 1.0], [71400.0, 1.0], [73000.0, 1.0], [77000.0, 1.0], [75400.0, 1.0], [84200.0, 1.0], [83400.0, 1.0], [89000.0, 1.0], [97000.0, 1.0], [94600.0, 1.0], [1900.0, 3.0], [3900.0, 2.0], [4300.0, 1.0], [72100.0, 1.0], [72900.0, 1.0], [76100.0, 1.0], [76900.0, 2.0], [81700.0, 1.0], [83300.0, 1.0], [5500.0, 6.0], [86500.0, 1.0], [89700.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [94500.0, 2.0], [95300.0, 1.0], [100900.0, 1.0], [7200.0, 2.0], [7400.0, 1.0], [7500.0, 1.0], [7700.0, 1.0], [8000.0, 1.0], [8300.0, 1.0], [10400.0, 11.0], [10500.0, 1.0], [12300.0, 4.0], [12800.0, 1.0], [13400.0, 1.0], [13600.0, 2.0], [13700.0, 1.0], [14300.0, 1.0], [14500.0, 1.0], [15000.0, 8.0], [15400.0, 3.0], [15600.0, 2.0], [15900.0, 1.0], [16200.0, 1.0], [16400.0, 1.0], [17000.0, 1.0], [17800.0, 1.0], [18800.0, 1.0], [20800.0, 1.0], [23000.0, 1.0], [23600.0, 1.0], [24200.0, 6.0], [24000.0, 1.0], [25200.0, 1.0], [26400.0, 1.0], [25600.0, 1.0], [26200.0, 1.0], [26800.0, 1.0], [27200.0, 1.0], [28400.0, 1.0], [28000.0, 1.0], [29600.0, 1.0], [30800.0, 1.0], [31000.0, 3.0], [32000.0, 1.0], [33600.0, 1.0], [38000.0, 2.0], [37200.0, 1.0], [39600.0, 1.0], [40800.0, 1.0], [41600.0, 1.0], [43600.0, 1.0], [46000.0, 1.0], [48800.0, 1.0], [55200.0, 2.0], [57200.0, 1.0], [58800.0, 1.0], [58400.0, 1.0], [60000.0, 1.0], [64400.0, 1.0], [65600.0, 1.0], [68800.0, 1.0], [77600.0, 1.0], [81600.0, 1.0], [80800.0, 1.0], [84000.0, 1.0], [88000.0, 1.0], [93600.0, 1.0], [99200.0, 1.0], [100000.0, 1.0], [70300.0, 1.0], [72700.0, 1.0], [81500.0, 1.0], [83100.0, 1.0], [85500.0, 1.0], [87900.0, 1.0], [87100.0, 2.0], [88700.0, 1.0], [95900.0, 2.0], [99100.0, 1.0], [101500.0, 1.0], [34300.0, 1.0], [35500.0, 1.0], [35900.0, 1.0], [36300.0, 1.0], [37900.0, 1.0], [40300.0, 1.0], [45900.0, 1.0], [49900.0, 1.0], [51100.0, 1.0], [52300.0, 2.0], [56700.0, 1.0], [57100.0, 2.0], [55500.0, 1.0], [59100.0, 11.0], [57900.0, 1.0], [60700.0, 1.0], [62700.0, 1.0], [64700.0, 1.0], [79000.0, 1.0], [83000.0, 1.0], [91800.0, 4.0], [90200.0, 1.0], [95800.0, 2.0], [97400.0, 1.0], [81300.0, 1.0], [82900.0, 1.0], [85300.0, 1.0], [84500.0, 1.0], [90100.0, 1.0], [91700.0, 4.0], [93300.0, 1.0], [16900.0, 2.0], [16700.0, 1.0], [17300.0, 2.0], [17700.0, 1.0], [17500.0, 1.0], [18500.0, 1.0], [19300.0, 1.0], [19100.0, 1.0], [20100.0, 1.0], [19500.0, 1.0], [20900.0, 1.0], [21700.0, 1.0], [21900.0, 1.0], [23100.0, 1.0], [22900.0, 1.0], [24500.0, 1.0], [24300.0, 1.0], [24900.0, 1.0], [25100.0, 2.0], [26500.0, 2.0], [26700.0, 1.0], [27700.0, 1.0], [31100.0, 1.0], [31300.0, 1.0], [31900.0, 1.0], [34200.0, 2.0], [38600.0, 1.0], [39800.0, 1.0], [47000.0, 1.0], [53000.0, 1.0], [51400.0, 1.0], [57000.0, 4.0], [55800.0, 2.0], [56600.0, 1.0], [57400.0, 2.0], [59000.0, 4.0], [59800.0, 1.0], [60600.0, 3.0], [63000.0, 1.0], [67600.0, 2.0], [66000.0, 1.0], [69200.0, 1.0], [72400.0, 1.0], [70800.0, 2.0], [74800.0, 2.0], [78800.0, 1.0], [79600.0, 2.0], [82000.0, 1.0], [82800.0, 1.0], [83600.0, 1.0], [86000.0, 1.0], [91600.0, 1.0], [90800.0, 1.0], [94800.0, 1.0], [100400.0, 1.0], [102000.0, 1.0], [106000.0, 1.0]], "isOverall": false, "label": "Add Employee-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 198000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 287.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 827.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 827.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 287.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 55.5, "minX": 1.7154063E12, "maxY": 303.83291139240515, "series": [{"data": [[1.71540648E12, 55.5], [1.71540636E12, 129.3176470588235], [1.71540642E12, 164.02127659574464], [1.7154063E12, 303.83291139240515]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 198084.0, "series": [{"data": [[3.0, 196468.0], [9.0, 195674.0], [15.0, 198084.0], [18.0, 195046.0], [21.0, 194751.0], [27.0, 194162.0], [30.0, 193898.0], [33.0, 196594.0], [41.0, 195971.0], [42.0, 195793.0], [45.0, 195605.0], [46.0, 192547.0], [52.0, 192133.0], [55.0, 190477.0], [54.0, 192050.0], [57.0, 194549.0], [56.0, 191796.0], [62.0, 194110.0], [64.0, 192994.0], [75.0, 192643.0], [79.0, 193413.0], [81.0, 190585.0], [87.0, 190230.0], [84.0, 193183.0], [95.0, 191434.0], [111.0, 189858.0], [110.0, 187319.0], [108.0, 190354.0], [115.0, 189709.0], [122.0, 184699.0], [120.0, 189218.0], [127.0, 184338.0], [133.0, 185485.0], [143.0, 182653.0], [139.0, 184277.0], [136.0, 183936.0], [147.0, 179213.0], [146.0, 182383.0], [159.0, 177779.0], [156.0, 182482.0], [154.0, 182526.0], [167.0, 177126.0], [165.0, 181724.0], [178.0, 176212.0], [177.0, 180731.0], [187.0, 175430.0], [195.0, 179132.0], [193.0, 174884.0], [206.0, 178234.0], [202.0, 178660.0], [211.0, 177077.0], [223.0, 176791.0], [219.0, 177261.0], [227.0, 176329.0], [247.0, 170883.0], [241.0, 175348.0], [240.0, 174557.0], [270.0, 171286.0], [269.0, 169089.0], [268.0, 172266.0], [262.0, 172876.0], [279.0, 166014.0], [278.0, 164768.0], [274.0, 166187.0], [272.0, 168401.0], [302.0, 164127.0], [299.0, 162197.0], [298.0, 164308.0], [293.0, 163276.0], [291.0, 167113.0], [314.0, 161603.0], [311.0, 163634.0], [306.0, 166135.0], [332.0, 158866.0], [330.0, 163319.0], [327.0, 164724.0], [325.0, 164857.0], [320.0, 165462.0], [351.0, 156731.0], [349.0, 160563.0], [348.0, 159782.0], [346.0, 160671.0], [345.0, 159938.0], [342.0, 157460.0], [339.0, 161811.0], [367.0, 156867.0], [360.0, 155222.0], [359.0, 155862.0], [353.0, 155883.0], [383.0, 156898.0], [375.0, 155718.0], [392.0, 151026.0], [384.0, 152545.0], [404.0, 150863.0], [430.0, 148158.0], [429.0, 152392.0], [428.0, 152409.0], [426.0, 148293.0], [424.0, 152523.0], [422.0, 152522.0], [419.0, 150377.0], [417.0, 150491.0], [447.0, 151241.0], [445.0, 150768.0], [442.0, 151123.0], [434.0, 150060.0], [433.0, 148059.0], [458.0, 150268.0], [454.0, 150516.0], [448.0, 151499.0], [473.0, 146700.0], [470.0, 150582.0], [467.0, 148515.0], [466.0, 150779.0], [494.0, 147000.0], [493.0, 146976.0], [492.0, 148028.0], [510.0, 139967.0], [508.0, 143255.0], [540.0, 140740.0], [534.0, 141563.0], [532.0, 139653.0], [531.0, 141778.0], [526.0, 140459.0], [522.0, 142734.0], [521.0, 142164.0], [548.0, 138444.0], [560.0, 138969.0], [572.0, 138548.0], [566.0, 138974.0], [559.0, 135433.0], [557.0, 137701.0], [554.0, 140097.0], [552.0, 139714.0], [547.0, 140447.0], [544.0, 140701.0], [604.0, 133774.0], [576.0, 138186.0], [639.0, 133046.0], [638.0, 131342.0], [629.0, 133804.0], [615.0, 131487.0], [613.0, 131588.0], [611.0, 135450.0], [610.0, 131390.0], [647.0, 132435.0], [670.0, 130224.0], [666.0, 130409.0], [660.0, 127391.0], [659.0, 129197.0], [658.0, 127698.0], [654.0, 127477.0], [653.0, 127634.0], [651.0, 129974.0], [644.0, 130659.0], [640.0, 131129.0], [679.0, 127648.0], [698.0, 123873.0], [699.0, 127532.0], [696.0, 124836.0], [678.0, 127616.0], [674.0, 127952.0], [672.0, 126001.0], [693.0, 126474.0], [691.0, 126588.0], [687.0, 126912.0], [685.0, 127067.0], [684.0, 127106.0], [682.0, 127378.0], [731.0, 122005.0], [734.0, 122790.0], [729.0, 123363.0], [728.0, 121305.0], [727.0, 123507.0], [726.0, 121438.0], [721.0, 121929.0], [719.0, 125204.0], [709.0, 125075.0], [705.0, 125255.0], [718.0, 124276.0], [713.0, 124645.0], [763.0, 121530.0], [766.0, 118993.0], [762.0, 119523.0], [760.0, 119576.0], [759.0, 122788.0], [754.0, 121313.0], [752.0, 121754.0], [750.0, 122722.0], [738.0, 122602.0], [736.0, 120590.0], [747.0, 121886.0], [745.0, 122915.0], [790.0, 120222.0], [787.0, 120375.0], [786.0, 116704.0], [782.0, 120921.0], [773.0, 121468.0], [772.0, 118507.0], [768.0, 121940.0], [814.0, 117383.0], [808.0, 118492.0], [863.0, 113852.0], [852.0, 111472.0], [851.0, 115020.0], [848.0, 111639.0], [844.0, 114956.0], [843.0, 112756.0], [835.0, 115356.0], [834.0, 113151.0], [833.0, 116470.0], [892.0, 111260.0], [895.0, 111055.0], [890.0, 111589.0], [880.0, 109631.0], [875.0, 112969.0], [873.0, 110142.0], [872.0, 112382.0], [870.0, 113495.0], [867.0, 113709.0], [924.0, 108578.0], [916.0, 109328.0], [904.0, 110621.0], [899.0, 110806.0], [898.0, 110692.0], [954.0, 102397.0], [958.0, 105469.0], [959.0, 105033.0], [957.0, 104677.0], [952.0, 106393.0], [931.0, 107567.0], [951.0, 106468.0], [948.0, 103682.0], [943.0, 107043.0], [938.0, 107802.0], [984.0, 102148.0], [991.0, 102022.0], [988.0, 98807.0], [986.0, 102077.0], [980.0, 102433.0], [971.0, 103572.0], [970.0, 103125.0], [968.0, 103798.0], [964.0, 104258.0], [963.0, 104750.0], [998.0, 100540.0], [1019.0, 94572.0], [1021.0, 67812.0], [1018.0, 68352.0], [1012.0, 99108.0], [1006.0, 99056.0], [1002.0, 100168.0], [1001.0, 99950.0], [1000.0, 100211.0], [997.0, 101018.0], [996.0, 101066.0], [995.0, 101122.0], [1057.0, 13631.0], [1068.0, 12852.0], [1061.0, 13465.0], [1058.0, 13619.0], [1056.0, 13738.0], [1034.0, 15456.0], [1033.0, 38192.0], [1032.0, 15603.0], [1026.0, 62892.0], [1027.0, 67549.0], [1054.0, 15017.0], [1049.0, 15017.0], [1043.0, 15012.0], [1040.0, 15010.666666666666], [1127.0, 8041.0], [1146.0, 7573.0], [1147.0, 7443.0], [1125.0, 8307.0], [1144.0, 1.0], [1140.0, 6731.0], [1139.0, 7569.0], [1117.0, 12329.0], [1129.0, 2.0], [1131.0, 2.0], [1128.0, 2.0], [1206.0, 3.25], [1212.0, 1662.6666666666665], [1200.0, 5069.0], [1182.0, 2780.5], [1167.0, 18.0], [1155.0, 7736.0], [1180.0, 18.0], [1178.0, 1.0], [1175.0, 47.00000000000001], [1173.0, 2.0], [1172.0, 2960.5], [1170.0, 1.0], [1171.0, 1.0], [1201.0, 1.0], [1194.0, 4174.0], [1196.0, 2.0], [1195.0, 1857.0], [1189.0, 5053.0], [1214.0, 6.0], [1184.0, 1.0], [1215.0, 1206.8999999999999], [1188.0, 5564.5], [1187.0, 5573.0], [1210.0, 5.0], [1203.0, 7.0], [1202.0, 5575.0], [1264.0, 1.25], [1276.0, 2.0], [1279.0, 4709.0], [1250.0, 1.3333333333333333], [1251.0, 2.0], [1254.0, 9.333333333333332], [1252.0, 1.0], [1268.0, 2351.0], [1267.0, 3.666666666666667], [1273.0, 22.666666666666668], [1271.0, 25.0], [1274.0, 23.0], [1275.0, 23.666666666666668], [1262.0, 1.5], [1263.0, 2.0], [1261.0, 3895.0], [1257.0, 4.0], [1259.0, 9.0], [1258.0, 8.0], [1256.0, 1.6666666666666667], [1246.0, 4838.0], [1245.0, 1.0], [1244.0, 31.0], [1241.0, 15.0], [1239.0, 320.75], [1230.0, 602.5], [1231.0, 806.0], [1229.0, 596.2], [1228.0, 1.0], [1225.0, 1.0], [1223.0, 1170.0], [1221.0, 1207.0], [1216.0, 7223.0], [1227.0, 1211.0], [1237.0, 1998.0], [1236.0, 1382.125], [1235.0, 598.75], [1232.0, 164.375], [1233.0, 149.66666666666666], [1234.0, 423.6666666666667], [1334.0, 5.0], [1332.0, 2.0], [1336.0, 1818.5], [1335.0, 2026.25], [1337.0, 2247.5], [1328.0, 3657.0], [1312.0, 3.0], [1311.0, 3678.0], [1281.0, 3.0], [1287.0, 4683.0], [1283.0, 4663.5], [1290.0, 3765.0], [1289.0, 1.0], [1310.0, 3.0], [1309.0, 2.0], [1304.0, 3.0], [1303.0, 2.0], [1297.0, 3.0], [1453.0, 10522.0], [1432.0, 10579.0], [1455.0, 12314.0], [1454.0, 12310.0], [1420.0, 12340.0], [1584.0, 10463.0], [1604.0, 10464.5], [1609.0, 10436.6], [1602.0, 10412.0], [1600.0, 10419.0]], "isOverall": false, "label": "Add Employee", "isController": false}, {"data": [[875.6239999999997, 75294.86800000003]], "isOverall": false, "label": "Add Employee-Aggregated", "isController": false}, {"data": [[3.0, 101130.0], [9.0, 100778.0], [15.0, 100628.0], [18.0, 100537.0], [21.0, 100807.0], [27.0, 100968.0], [30.0, 100514.0], [33.0, 100686.0], [41.0, 100065.0], [42.0, 99916.0], [45.0, 99732.0], [46.0, 100752.0], [52.0, 100331.0], [55.0, 100223.0], [54.0, 100248.0], [57.0, 99925.0], [56.0, 99983.0], [62.0, 99527.0], [64.0, 102124.0], [75.0, 100319.0], [79.0, 99778.0], [81.0, 100795.0], [87.0, 100096.0], [84.0, 101378.0], [95.0, 99675.0], [111.0, 98181.0], [110.0, 98251.0], [108.0, 98605.0], [115.0, 98000.0], [122.0, 100198.0], [120.0, 100439.0], [127.0, 100322.0], [133.0, 98334.0], [143.0, 126877.0], [139.0, 127601.0], [136.0, 96785.0], [147.0, 126840.0], [146.0, 126876.0], [159.0, 75717.0], [156.0, 126596.0], [154.0, 126661.0], [167.0, 75574.0], [165.0, 75657.0], [178.0, 76180.0], [177.0, 75579.0], [187.0, 76152.0], [195.0, 123862.0], [193.0, 77824.0], [206.0, 77825.0], [202.0, 77731.0], [211.0, 77964.0], [223.0, 121568.0], [219.0, 89218.0], [227.0, 88344.0], [247.0, 119456.0], [241.0, 88845.0], [240.0, 88546.0], [270.0, 85972.0], [269.0, 85746.0], [268.0, 86733.0], [262.0, 120541.0], [279.0, 82363.0], [278.0, 83444.0], [274.0, 84447.0], [272.0, 84991.0], [302.0, 82483.0], [299.0, 81309.0], [298.0, 81417.0], [293.0, 117119.0], [291.0, 115802.0], [314.0, 81925.0], [311.0, 82069.0], [306.0, 80958.0], [332.0, 81275.0], [330.0, 80291.0], [327.0, 114747.0], [325.0, 81700.0], [320.0, 114336.0], [351.0, 110764.0], [349.0, 110808.0], [348.0, 110910.0], [346.0, 77696.0], [345.0, 111008.0], [342.0, 110422.0], [339.0, 77597.0], [367.0, 74835.0], [360.0, 80362.0], [359.0, 112165.0], [353.0, 76216.0], [383.0, 77836.0], [375.0, 76849.0], [392.0, 107318.0], [384.0, 72154.0], [404.0, 75393.0], [430.0, 75413.0], [429.0, 79408.0], [428.0, 75416.0], [426.0, 79455.0], [424.0, 79499.0], [422.0, 75575.0], [419.0, 75626.0], [417.0, 79616.0], [447.0, 109598.0], [445.0, 78300.0], [442.0, 109402.0], [434.0, 79187.0], [433.0, 78861.0], [458.0, 74171.0], [454.0, 78365.0], [448.0, 105447.0], [473.0, 108769.0], [470.0, 78206.0], [467.0, 73680.0], [466.0, 73777.0], [494.0, 106016.0], [493.0, 106156.0], [492.0, 76561.0], [510.0, 102751.0], [508.0, 102912.0], [540.0, 101101.0], [534.0, 73929.0], [532.0, 73612.0], [531.0, 69424.0], [526.0, 70141.0], [522.0, 70363.0], [521.0, 102284.0], [548.0, 72843.0], [560.0, 100920.0], [572.0, 72594.0], [566.0, 100465.0], [559.0, 73297.0], [557.0, 73206.0], [554.0, 72539.0], [552.0, 101586.0], [547.0, 72848.0], [544.0, 102015.0], [604.0, 71035.0], [576.0, 100183.0], [639.0, 96691.0], [638.0, 70422.0], [629.0, 70764.0], [615.0, 97275.0], [613.0, 97374.0], [611.0, 70726.0], [610.0, 70698.0], [647.0, 96469.0], [670.0, 107299.0], [666.0, 107389.0], [660.0, 95392.0], [659.0, 69341.0], [658.0, 95701.0], [654.0, 68980.0], [653.0, 69658.0], [651.0, 69332.0], [644.0, 69970.0], [640.0, 70419.0], [679.0, 68498.0], [698.0, 66849.0], [699.0, 105567.0], [696.0, 105686.0], [678.0, 68503.0], [674.0, 68599.0], [672.0, 68771.0], [693.0, 67343.0], [691.0, 67481.0], [687.0, 67763.0], [685.0, 67927.0], [684.0, 68002.0], [682.0, 68231.0], [731.0, 103166.0], [734.0, 63666.0], [729.0, 64270.0], [728.0, 64322.0], [727.0, 64375.0], [726.0, 64433.0], [721.0, 64955.0], [719.0, 65114.0], [709.0, 65977.0], [705.0, 66152.0], [718.0, 65176.0], [713.0, 65550.0], [763.0, 101972.0], [766.0, 101676.0], [762.0, 102020.0], [760.0, 101746.0], [759.0, 101852.0], [754.0, 64202.0], [752.0, 64277.0], [750.0, 64596.0], [738.0, 65108.0], [736.0, 63569.0], [747.0, 64790.0], [745.0, 102062.0], [790.0, 84689.0], [787.0, 63624.0], [786.0, 63677.0], [782.0, 63794.0], [773.0, 101336.0], [772.0, 101464.0], [768.0, 63082.0], [814.0, 83692.0], [808.0, 84117.0], [863.0, 96131.0], [852.0, 80420.0], [851.0, 80444.0], [848.0, 80589.0], [844.0, 97623.0], [843.0, 96480.0], [835.0, 96846.0], [834.0, 97673.0], [833.0, 97099.0], [892.0, 79947.0], [895.0, 79977.0], [890.0, 94597.0], [880.0, 95266.0], [875.0, 78459.0], [873.0, 95600.0], [872.0, 95625.0], [870.0, 78979.0], [867.0, 79141.0], [924.0, 78962.0], [916.0, 92867.0], [904.0, 79435.0], [899.0, 93886.0], [898.0, 79882.0], [954.0, 78348.0], [958.0, 78268.0], [959.0, 78275.0], [957.0, 78387.0], [952.0, 90420.0], [931.0, 79543.0], [951.0, 90806.0], [948.0, 79362.0], [943.0, 79340.0], [938.0, 79362.0], [984.0, 77004.0], [991.0, 77115.0], [988.0, 77052.0], [986.0, 76911.0], [980.0, 77213.0], [971.0, 77090.0], [970.0, 77504.0], [968.0, 77214.0], [964.0, 77668.0], [963.0, 77857.0], [998.0, 76309.0], [1019.0, 90252.0], [1021.0, 65867.0], [1018.0, 66401.0], [1012.0, 75927.0], [1006.0, 75414.0], [1002.0, 75634.0], [1001.0, 75716.0], [1000.0, 75979.0], [997.0, 76792.0], [996.0, 76809.0], [995.0, 76889.0], [1057.0, 2.0], [1068.0, 2.0], [1061.0, 2.0], [1058.0, 1.0], [1056.0, 1.0], [1034.0, 1.0], [1033.0, 28495.0], [1032.0, 2.0], [1026.0, 58931.0], [1027.0, 65601.0], [1054.0, 1.6666666666666667], [1049.0, 1.0], [1043.0, 2.0], [1040.0, 1.0], [1147.0, 2.0], [1139.0, 1.0], [1127.0, 1.0], [1125.0, 1.0], [1117.0, 0.0], [1202.0, 3.0], [1195.0, 1.0], [1188.0, 1.5], [1187.0, 1.0], [1182.0, 1.0], [1172.0, 1.0], [1155.0, 1.0], [1236.0, 1.0], [1216.0, 0.5], [1453.0, 76.0], [1432.0, 2.0], [1455.0, 1.0], [1454.0, 1.0], [1420.0, 2.0], [1584.0, 3.0], [1604.0, 3.0], [1609.0, 5.2], [1602.0, 2.0], [1600.0, 2.0]], "isOverall": false, "label": "Add Employee-1", "isController": false}, {"data": [[648.0651465798045, 73075.03583061894]], "isOverall": false, "label": "Add Employee-1-Aggregated", "isController": false}, {"data": [[3.0, 95339.0], [9.0, 94897.0], [15.0, 97457.0], [18.0, 94510.0], [21.0, 93945.0], [27.0, 93195.0], [30.0, 93385.0], [33.0, 95909.0], [41.0, 95907.0], [42.0, 95878.0], [45.0, 95873.0], [46.0, 91796.0], [52.0, 91803.0], [55.0, 90255.0], [54.0, 91803.0], [57.0, 94625.0], [56.0, 91814.0], [62.0, 94584.0], [64.0, 90877.0], [75.0, 92325.0], [79.0, 93636.0], [81.0, 89797.0], [87.0, 90141.0], [84.0, 91811.0], [95.0, 91766.0], [111.0, 91684.0], [110.0, 89075.0], [108.0, 91756.0], [115.0, 91715.0], [122.0, 84507.0], [120.0, 88786.0], [127.0, 84023.0], [133.0, 87151.0], [143.0, 55777.0], [139.0, 56677.0], [136.0, 87151.0], [147.0, 52373.0], [146.0, 55507.0], [159.0, 102062.0], [156.0, 55887.0], [154.0, 55866.0], [167.0, 101551.0], [165.0, 106067.0], [178.0, 100032.0], [177.0, 105152.0], [187.0, 99278.0], [195.0, 55271.0], [193.0, 97061.0], [206.0, 100410.0], [202.0, 100930.0], [211.0, 99114.0], [223.0, 55224.0], [219.0, 88043.0], [227.0, 87985.0], [247.0, 51427.0], [241.0, 86503.0], [240.0, 86011.0], [270.0, 85314.0], [269.0, 83343.0], [268.0, 85533.0], [262.0, 52336.0], [279.0, 83651.0], [278.0, 81324.0], [274.0, 81740.0], [272.0, 83410.0], [302.0, 81644.0], [299.0, 80888.0], [298.0, 82891.0], [293.0, 46157.0], [291.0, 51311.0], [314.0, 79678.0], [311.0, 81565.0], [306.0, 85177.0], [332.0, 77603.0], [330.0, 83028.0], [327.0, 49977.0], [325.0, 83157.0], [320.0, 51127.0], [351.0, 45967.0], [349.0, 49755.0], [348.0, 48872.0], [346.0, 82975.0], [345.0, 48929.0], [342.0, 47038.0], [339.0, 84214.0], [367.0, 82032.0], [360.0, 74873.0], [359.0, 43697.0], [353.0, 79667.0], [383.0, 79075.0], [375.0, 78882.0], [392.0, 43708.0], [384.0, 80391.0], [404.0, 75483.0], [430.0, 72749.0], [429.0, 72989.0], [428.0, 76997.0], [426.0, 68843.0], [424.0, 73029.0], [422.0, 76951.0], [419.0, 74756.0], [417.0, 70880.0], [447.0, 41643.0], [445.0, 72473.0], [442.0, 41722.0], [434.0, 70878.0], [433.0, 69203.0], [458.0, 76101.0], [454.0, 72156.0], [448.0, 46052.0], [473.0, 37932.0], [470.0, 72381.0], [467.0, 74839.0], [466.0, 77007.0], [494.0, 40984.0], [493.0, 40821.0], [492.0, 71472.0], [510.0, 37216.0], [508.0, 40343.0], [540.0, 39640.0], [534.0, 67635.0], [532.0, 66042.0], [531.0, 72355.0], [526.0, 70319.0], [522.0, 72376.0], [521.0, 39881.0], [548.0, 65602.0], [560.0, 38049.0], [572.0, 65954.0], [566.0, 38510.0], [559.0, 62137.0], [557.0, 64496.0], [554.0, 67559.0], [552.0, 38129.0], [547.0, 67600.0], [544.0, 38687.0], [604.0, 62739.0], [576.0, 38004.0], [639.0, 36356.0], [638.0, 60920.0], [629.0, 63040.0], [615.0, 34213.0], [613.0, 34215.0], [611.0, 64724.0], [610.0, 60692.0], [647.0, 35967.0], [670.0, 22925.0], [666.0, 23019.0], [660.0, 32000.0], [659.0, 59856.0], [658.0, 31998.0], [654.0, 58497.0], [653.0, 57976.0], [651.0, 60642.0], [644.0, 60688.0], [640.0, 60710.0], [679.0, 59151.0], [698.0, 57025.0], [699.0, 21964.0], [696.0, 19150.0], [678.0, 59114.0], [674.0, 59353.0], [672.0, 57230.0], [693.0, 59132.0], [691.0, 59108.0], [687.0, 59150.0], [685.0, 59141.0], [684.0, 59105.0], [682.0, 59148.0], [731.0, 18839.0], [734.0, 59125.0], [729.0, 59094.0], [728.0, 56984.0], [727.0, 59133.0], [726.0, 57006.0], [721.0, 56975.0], [719.0, 60091.0], [709.0, 59099.0], [705.0, 59049.0], [718.0, 59101.0], [713.0, 59095.0], [763.0, 19558.0], [766.0, 17317.0], [762.0, 17503.0], [760.0, 17830.0], [759.0, 20936.0], [754.0, 57112.0], [752.0, 57478.0], [750.0, 58127.0], [738.0, 57495.0], [736.0, 57022.0], [747.0, 57097.0], [745.0, 20852.0], [790.0, 35534.0], [787.0, 56751.0], [786.0, 53028.0], [782.0, 57128.0], [773.0, 20131.0], [772.0, 17043.0], [768.0, 58859.0], [814.0, 33692.0], [808.0, 34376.0], [863.0, 17720.0], [852.0, 31053.0], [851.0, 34577.0], [848.0, 31051.0], [844.0, 17332.0], [843.0, 16276.0], [835.0, 18510.0], [834.0, 15478.0], [833.0, 19371.0], [892.0, 31314.0], [895.0, 31078.0], [890.0, 16992.0], [880.0, 14364.0], [875.0, 34511.0], [873.0, 14542.0], [872.0, 16757.0], [870.0, 34517.0], [867.0, 34569.0], [924.0, 29616.0], [916.0, 16461.0], [904.0, 31187.0], [899.0, 16919.0], [898.0, 30811.0], [954.0, 24049.0], [958.0, 27200.0], [959.0, 26758.0], [957.0, 26290.0], [952.0, 15973.0], [931.0, 28024.0], [951.0, 15661.0], [948.0, 24320.0], [943.0, 27703.0], [938.0, 28439.0], [984.0, 25143.0], [991.0, 24907.0], [988.0, 21755.0], [986.0, 25166.0], [980.0, 25220.0], [971.0, 26482.0], [970.0, 25621.0], [968.0, 26584.0], [964.0, 26590.0], [963.0, 26893.0], [998.0, 24231.0], [1019.0, 4320.0], [1021.0, 1945.0], [1018.0, 1951.0], [1012.0, 23181.0], [1006.0, 23642.0], [1002.0, 24534.0], [1001.0, 24234.0], [1000.0, 24232.0], [997.0, 24226.0], [996.0, 24257.0], [995.0, 24233.0], [1057.0, 13630.0], [1068.0, 12851.0], [1061.0, 13464.0], [1058.0, 13619.0], [1056.0, 13737.0], [1034.0, 15454.0], [1033.0, 9696.0], [1032.0, 15601.0], [1026.0, 3961.0], [1027.0, 1947.0], [1054.0, 15016.0], [1049.0, 15017.0], [1043.0, 15011.0], [1040.0, 15010.666666666666], [1147.0, 7442.0], [1139.0, 7569.0], [1127.0, 8040.0], [1125.0, 8307.0], [1117.0, 12329.0], [1202.0, 5573.0], [1195.0, 5561.0], [1188.0, 5562.5], [1187.0, 5572.0], [1182.0, 5560.0], [1172.0, 5919.0], [1155.0, 7736.0], [1236.0, 6076.0], [1216.0, 7223.0], [1453.0, 10447.0], [1432.0, 10578.0], [1455.0, 12314.0], [1454.0, 12310.0], [1420.0, 12339.0], [1584.0, 10461.0], [1604.0, 10462.5], [1609.0, 10432.4], [1602.0, 10410.0], [1600.0, 10418.0]], "isOverall": false, "label": "Add Employee-0", "isController": false}, {"data": [[648.0651465798045, 49109.93159609118]], "isOverall": false, "label": "Add Employee-0-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1609.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 397.8333333333333, "minX": 1.7154063E12, "maxY": 22386.3, "series": [{"data": [[1.71540648E12, 16523.566666666666], [1.71540636E12, 3238.7833333333333], [1.71540642E12, 22386.3], [1.7154063E12, 15762.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71540648E12, 828.6666666666666], [1.71540636E12, 448.3333333333333], [1.71540642E12, 1192.4333333333334], [1.7154063E12, 397.8333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3.446808510638298, "minX": 1.7154063E12, "maxY": 172998.59090909097, "series": [{"data": [[1.71540648E12, 172998.59090909097], [1.71540636E12, 65504.8], [1.71540642E12, 121692.79310344828], [1.7154063E12, 2685.875000000001]], "isOverall": false, "label": "Add Employee", "isController": false}, {"data": [[1.71540648E12, 94116.93636363637], [1.71540636E12, 62757.8], [1.71540642E12, 81153.25517241383], [1.7154063E12, 3.446808510638298]], "isOverall": false, "label": "Add Employee-1", "isController": false}, {"data": [[1.71540636E12, 60243.63749999998], [1.71540642E12, 95108.07692307692], [1.7154063E12, 16005.11111111111]], "isOverall": false, "label": "Add Employee-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7154063E12, "maxY": 95104.35897435901, "series": [{"data": [[1.71540648E12, 78842.95454545454], [1.71540636E12, 2745.0], [1.71540642E12, 40520.020689655175], [1.7154063E12, 2114.1083333333327]], "isOverall": false, "label": "Add Employee", "isController": false}, {"data": [[1.71540648E12, 94086.87272727273], [1.71540636E12, 62754.2], [1.71540642E12, 81148.11034482758], [1.7154063E12, 0.0]], "isOverall": false, "label": "Add Employee-1", "isController": false}, {"data": [[1.71540636E12, 60202.47500000003], [1.71540642E12, 95104.35897435901], [1.7154063E12, 15997.898148148146]], "isOverall": false, "label": "Add Employee-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7154063E12, "maxY": 1682.9743589743591, "series": [{"data": [[1.71540648E12, 1553.5181818181813], [1.71540636E12, 3.8], [1.71540642E12, 928.1034482758625], [1.7154063E12, 571.1999999999998]], "isOverall": false, "label": "Add Employee", "isController": false}, {"data": [[1.71540648E12, 1.1454545454545462], [1.71540636E12, 1.0], [1.71540642E12, 4.8], [1.7154063E12, 3.340425531914893]], "isOverall": false, "label": "Add Employee-1", "isController": false}, {"data": [[1.71540636E12, 1160.8937499999997], [1.71540642E12, 1682.9743589743591], [1.7154063E12, 502.5833333333334]], "isOverall": false, "label": "Add Employee-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1945.0, "minX": 1.7154063E12, "maxY": 198084.0, "series": [{"data": [[1.71540648E12, 198084.0], [1.71540636E12, 88786.0], [1.71540642E12, 150779.0], [1.7154063E12, 29616.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71540648E12, 72154.0], [1.71540636E12, 30811.0], [1.71540642E12, 63082.0], [1.7154063E12, 1945.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71540648E12, 191349.1], [1.71540636E12, 83144.1], [1.71540642E12, 131588.0], [1.7154063E12, 26309.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71540648E12, 196567.54], [1.71540636E12, 88258.47], [1.71540642E12, 148368.9], [1.7154063E12, 29510.069999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71540648E12, 137830.0], [1.71540636E12, 59137.0], [1.71540642E12, 100920.0], [1.7154063E12, 15470.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71540648E12, 194159.4], [1.71540636E12, 85412.55], [1.71540642E12, 140272.0], [1.7154063E12, 27061.85]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 113837.5, "series": [{"data": [[8.0, 77002.0], [2.0, 89969.0], [34.0, 15016.5], [36.0, 10434.0], [9.0, 91814.0], [10.0, 102042.0], [44.0, 3961.0], [11.0, 99950.0], [47.0, 7442.0], [12.0, 110181.0], [3.0, 58859.0], [51.0, 5564.0], [4.0, 99082.0], [1.0, 49194.0], [5.0, 32602.0], [20.0, 113837.5], [89.0, 5997.5], [6.0, 107344.0], [25.0, 59108.0], [7.0, 89075.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 7504.5], [36.0, 5244.0], [10.0, 2.0], [44.0, 4.0], [89.0, 3.0], [47.0, 1203.0], [12.0, 6156.0], [3.0, 6869.5], [51.0, 3.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 89.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 87150.0, "series": [{"data": [[8.0, 70328.0], [2.0, 77152.0], [34.0, 15016.5], [36.0, 10432.0], [9.0, 78265.0], [10.0, 67578.5], [44.0, 3956.0], [11.0, 75713.0], [47.0, 7433.0], [12.0, 73318.0], [3.0, 57476.0], [51.0, 5558.0], [4.0, 80819.5], [1.0, 49185.0], [5.0, 32600.0], [20.0, 75490.5], [89.0, 5997.0], [6.0, 71366.0], [25.0, 59105.0], [7.0, 87150.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 7503.0], [36.0, 5204.0], [10.0, 0.0], [44.0, 0.0], [89.0, 0.0], [47.0, 0.0], [12.0, 6155.0], [3.0, 6867.5], [51.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 89.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.65, "minX": 1.7154063E12, "maxY": 15.25, "series": [{"data": [[1.71540636E12, 2.6666666666666665], [1.71540642E12, 0.65], [1.7154063E12, 15.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540642E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.7154063E12, "maxY": 4.833333333333333, "series": [{"data": [[1.71540648E12, 3.6666666666666665], [1.71540636E12, 0.16666666666666666], [1.71540642E12, 4.833333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7154063E12, 4.783333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.71540636E12, 2.6666666666666665], [1.71540642E12, 0.65], [1.7154063E12, 1.8]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.7154063E12, "maxY": 4.0, "series": [{"data": [[1.7154063E12, 0.7833333333333333]], "isOverall": false, "label": "Add Employee-1-failure", "isController": false}, {"data": [[1.71540648E12, 1.8333333333333333], [1.71540636E12, 0.08333333333333333], [1.71540642E12, 2.4166666666666665]], "isOverall": false, "label": "Add Employee-1-success", "isController": false}, {"data": [[1.71540636E12, 2.6666666666666665], [1.71540642E12, 0.65], [1.7154063E12, 1.8]], "isOverall": false, "label": "Add Employee-0-success", "isController": false}, {"data": [[1.7154063E12, 4.0]], "isOverall": false, "label": "Add Employee-failure", "isController": false}, {"data": [[1.71540648E12, 1.8333333333333333], [1.71540636E12, 0.08333333333333333], [1.71540642E12, 2.4166666666666665]], "isOverall": false, "label": "Add Employee-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.8, "minX": 1.7154063E12, "maxY": 5.483333333333333, "series": [{"data": [[1.71540648E12, 3.6666666666666665], [1.71540636E12, 2.8333333333333335], [1.71540642E12, 5.483333333333333], [1.7154063E12, 1.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7154063E12, 4.783333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

