/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 199929.0, "series": [{"data": [[0.0, 1952.0], [0.1, 1952.0], [0.2, 1952.0], [0.3, 3727.0], [0.4, 3727.0], [0.5, 3941.0], [0.6, 3941.0], [0.7, 4121.0], [0.8, 4121.0], [0.9, 4121.0], [1.0, 5564.0], [1.1, 5564.0], [1.2, 5569.0], [1.3, 5569.0], [1.4, 5569.0], [1.5, 5569.0], [1.6, 5569.0], [1.7, 5576.0], [1.8, 5576.0], [1.9, 5917.0], [2.0, 5917.0], [2.1, 5917.0], [2.2, 5917.0], [2.3, 5917.0], [2.4, 5943.0], [2.5, 5943.0], [2.6, 7213.0], [2.7, 7213.0], [2.8, 7224.0], [2.9, 7224.0], [3.0, 7224.0], [3.1, 7225.0], [3.2, 7225.0], [3.3, 7230.0], [3.4, 7230.0], [3.5, 7418.0], [3.6, 7418.0], [3.7, 7772.0], [3.8, 7772.0], [3.9, 7772.0], [4.0, 7927.0], [4.1, 7927.0], [4.2, 8423.0], [4.3, 8423.0], [4.4, 8722.0], [4.5, 8722.0], [4.6, 8722.0], [4.7, 10418.0], [4.8, 10418.0], [4.9, 10422.0], [5.0, 10422.0], [5.1, 10427.0], [5.2, 10427.0], [5.3, 10427.0], [5.4, 10429.0], [5.5, 10429.0], [5.6, 10435.0], [5.7, 10435.0], [5.8, 10445.0], [5.9, 10445.0], [6.0, 10445.0], [6.1, 10495.0], [6.2, 10495.0], [6.3, 12284.0], [6.4, 12284.0], [6.5, 12304.0], [6.6, 12304.0], [6.7, 12307.0], [6.8, 12307.0], [6.9, 12307.0], [7.0, 12309.0], [7.1, 12309.0], [7.2, 12320.0], [7.3, 12320.0], [7.4, 12331.0], [7.5, 12331.0], [7.6, 12331.0], [7.7, 12335.0], [7.8, 12335.0], [7.9, 12344.0], [8.0, 12344.0], [8.1, 12442.0], [8.2, 12442.0], [8.3, 12442.0], [8.4, 12690.0], [8.5, 12690.0], [8.6, 12751.0], [8.7, 12751.0], [8.8, 12814.0], [8.9, 12814.0], [9.0, 12814.0], [9.1, 12967.0], [9.2, 12967.0], [9.3, 13186.0], [9.4, 13186.0], [9.5, 13449.0], [9.6, 13449.0], [9.7, 13464.0], [9.8, 13464.0], [9.9, 13464.0], [10.0, 13755.0], [10.1, 13755.0], [10.2, 13865.0], [10.3, 13865.0], [10.4, 15008.0], [10.5, 15008.0], [10.6, 15008.0], [10.7, 15011.0], [10.8, 15011.0], [10.9, 15012.0], [11.0, 15012.0], [11.1, 15021.0], [11.2, 15021.0], [11.3, 15021.0], [11.4, 15030.0], [11.5, 15030.0], [11.6, 15048.0], [11.7, 15048.0], [11.8, 15274.0], [11.9, 15274.0], [12.0, 15274.0], [12.1, 15661.0], [12.2, 15661.0], [12.3, 16273.0], [12.4, 16273.0], [12.5, 16463.0], [12.6, 16463.0], [12.7, 16463.0], [12.8, 16464.0], [12.9, 16464.0], [13.0, 16470.0], [13.1, 16470.0], [13.2, 16549.0], [13.3, 16549.0], [13.4, 16763.0], [13.5, 16763.0], [13.6, 16763.0], [13.7, 16994.0], [13.8, 16994.0], [13.9, 17148.0], [14.0, 17148.0], [14.1, 17169.0], [14.2, 17169.0], [14.3, 17169.0], [14.4, 17433.0], [14.5, 17433.0], [14.6, 17548.0], [14.7, 17548.0], [14.8, 18210.0], [14.9, 18210.0], [15.0, 18210.0], [15.1, 18376.0], [15.2, 18376.0], [15.3, 18536.0], [15.4, 18536.0], [15.5, 18600.0], [15.6, 18600.0], [15.7, 18600.0], [15.8, 19406.0], [15.9, 19406.0], [16.0, 19463.0], [16.1, 19463.0], [16.2, 19523.0], [16.3, 19523.0], [16.4, 19680.0], [16.5, 19680.0], [16.6, 19680.0], [16.7, 19700.0], [16.8, 19700.0], [16.9, 19761.0], [17.0, 19761.0], [17.1, 19805.0], [17.2, 19805.0], [17.3, 19805.0], [17.4, 19897.0], [17.5, 19897.0], [17.6, 19993.0], [17.7, 19993.0], [17.8, 20787.0], [17.9, 20787.0], [18.0, 20787.0], [18.1, 21129.0], [18.2, 21129.0], [18.3, 21234.0], [18.4, 21234.0], [18.5, 21742.0], [18.6, 21742.0], [18.7, 21742.0], [18.8, 21803.0], [18.9, 21803.0], [19.0, 21936.0], [19.1, 21936.0], [19.2, 21936.0], [19.3, 21936.0], [19.4, 21961.0], [19.5, 21961.0], [19.6, 21961.0], [19.7, 22111.0], [19.8, 22111.0], [19.9, 22115.0], [20.0, 22115.0], [20.1, 22152.0], [20.2, 22152.0], [20.3, 22152.0], [20.4, 22749.0], [20.5, 22749.0], [20.6, 22856.0], [20.7, 22856.0], [20.8, 23049.0], [20.9, 23049.0], [21.0, 23049.0], [21.1, 23164.0], [21.2, 23164.0], [21.3, 23218.0], [21.4, 23218.0], [21.5, 23420.0], [21.6, 23420.0], [21.7, 23420.0], [21.8, 23518.0], [21.9, 23518.0], [22.0, 23540.0], [22.1, 23540.0], [22.2, 23617.0], [22.3, 23617.0], [22.4, 23617.0], [22.5, 23760.0], [22.6, 23760.0], [22.7, 24231.0], [22.8, 24231.0], [22.9, 24236.0], [23.0, 24236.0], [23.1, 24493.0], [23.2, 24493.0], [23.3, 24493.0], [23.4, 24511.0], [23.5, 24511.0], [23.6, 24577.0], [23.7, 24577.0], [23.8, 25144.0], [23.9, 25144.0], [24.0, 25144.0], [24.1, 25160.0], [24.2, 25160.0], [24.3, 25245.0], [24.4, 25245.0], [24.5, 25459.0], [24.6, 25459.0], [24.7, 25459.0], [24.8, 25559.0], [24.9, 25559.0], [25.0, 26306.0], [25.1, 26306.0], [25.2, 26332.0], [25.3, 26332.0], [25.4, 26332.0], [25.5, 26586.0], [25.6, 26586.0], [25.7, 26595.0], [25.8, 26595.0], [25.9, 26606.0], [26.0, 26606.0], [26.1, 26852.0], [26.2, 26852.0], [26.3, 26852.0], [26.4, 27041.0], [26.5, 27041.0], [26.6, 27145.0], [26.7, 27145.0], [26.8, 27292.0], [26.9, 27292.0], [27.0, 27292.0], [27.1, 27406.0], [27.2, 27406.0], [27.3, 27593.0], [27.4, 27593.0], [27.5, 27769.0], [27.6, 27769.0], [27.7, 27769.0], [27.8, 28170.0], [27.9, 28170.0], [28.0, 28410.0], [28.1, 28410.0], [28.2, 28536.0], [28.3, 28536.0], [28.4, 28536.0], [28.5, 29151.0], [28.6, 29151.0], [28.7, 29263.0], [28.8, 29263.0], [28.9, 30678.0], [29.0, 30678.0], [29.1, 30701.0], [29.2, 30701.0], [29.3, 30701.0], [29.4, 30711.0], [29.5, 30711.0], [29.6, 30714.0], [29.7, 30714.0], [29.8, 30725.0], [29.9, 30725.0], [30.0, 30725.0], [30.1, 30816.0], [30.2, 30816.0], [30.3, 31060.0], [30.4, 31060.0], [30.5, 31079.0], [30.6, 31079.0], [30.7, 31079.0], [30.8, 31101.0], [30.9, 31101.0], [31.0, 31153.0], [31.1, 31153.0], [31.2, 31223.0], [31.3, 31223.0], [31.4, 31223.0], [31.5, 31357.0], [31.6, 31357.0], [31.7, 31409.0], [31.8, 31409.0], [31.9, 31707.0], [32.0, 31707.0], [32.1, 31707.0], [32.2, 31967.0], [32.3, 31967.0], [32.4, 32092.0], [32.5, 32092.0], [32.6, 33671.0], [32.7, 33671.0], [32.8, 33692.0], [32.9, 33692.0], [33.0, 33692.0], [33.1, 33735.0], [33.2, 33735.0], [33.3, 34154.0], [33.4, 34154.0], [33.5, 34160.0], [33.6, 34160.0], [33.7, 34160.0], [33.8, 34161.0], [33.9, 34161.0], [34.0, 34163.0], [34.1, 34163.0], [34.2, 34164.0], [34.3, 34164.0], [34.4, 34164.0], [34.5, 34166.0], [34.6, 34166.0], [34.7, 34173.0], [34.8, 34173.0], [34.9, 34181.0], [35.0, 34181.0], [35.1, 34181.0], [35.2, 34199.0], [35.3, 34199.0], [35.4, 34222.0], [35.5, 34222.0], [35.6, 34514.0], [35.7, 34514.0], [35.8, 34544.0], [35.9, 34544.0], [36.0, 34544.0], [36.1, 34562.0], [36.2, 34562.0], [36.3, 34567.0], [36.4, 34567.0], [36.5, 34576.0], [36.6, 34576.0], [36.7, 34576.0], [36.8, 34592.0], [36.9, 34592.0], [37.0, 34715.0], [37.1, 34715.0], [37.2, 34999.0], [37.3, 34999.0], [37.4, 34999.0], [37.5, 35048.0], [37.6, 35048.0], [37.7, 35278.0], [37.8, 35278.0], [37.9, 35645.0], [38.0, 35645.0], [38.1, 35645.0], [38.2, 35816.0], [38.3, 35816.0], [38.4, 36088.0], [38.5, 36088.0], [38.6, 36125.0], [38.7, 36125.0], [38.8, 36917.0], [38.9, 36917.0], [39.0, 36917.0], [39.1, 36932.0], [39.2, 36932.0], [39.3, 37330.0], [39.4, 37330.0], [39.5, 37331.0], [39.6, 37331.0], [39.7, 37331.0], [39.8, 37334.0], [39.9, 37334.0], [40.0, 37664.0], [40.1, 37664.0], [40.2, 37831.0], [40.3, 37831.0], [40.4, 37831.0], [40.5, 37911.0], [40.6, 37911.0], [40.7, 38516.0], [40.8, 38516.0], [40.9, 38569.0], [41.0, 38569.0], [41.1, 38569.0], [41.2, 39206.0], [41.3, 39206.0], [41.4, 40403.0], [41.5, 40403.0], [41.6, 40418.0], [41.7, 40418.0], [41.8, 40418.0], [41.9, 40465.0], [42.0, 40465.0], [42.1, 41179.0], [42.2, 41179.0], [42.3, 41594.0], [42.4, 41594.0], [42.5, 41601.0], [42.6, 41601.0], [42.7, 41601.0], [42.8, 41619.0], [42.9, 41619.0], [43.0, 41736.0], [43.1, 41736.0], [43.2, 41863.0], [43.3, 41863.0], [43.4, 41863.0], [43.5, 41863.0], [43.6, 41863.0], [43.7, 42578.0], [43.8, 42578.0], [43.9, 43638.0], [44.0, 43638.0], [44.1, 43638.0], [44.2, 43859.0], [44.3, 43859.0], [44.4, 44117.0], [44.5, 44117.0], [44.6, 44321.0], [44.7, 44321.0], [44.8, 44321.0], [44.9, 44356.0], [45.0, 44356.0], [45.1, 44746.0], [45.2, 44746.0], [45.3, 45603.0], [45.4, 45603.0], [45.5, 45604.0], [45.6, 45604.0], [45.7, 45604.0], [45.8, 46113.0], [45.9, 46113.0], [46.0, 46562.0], [46.1, 46562.0], [46.2, 46744.0], [46.3, 46744.0], [46.4, 46744.0], [46.5, 47231.0], [46.6, 47231.0], [46.7, 47426.0], [46.8, 47426.0], [46.9, 47451.0], [47.0, 47451.0], [47.1, 47451.0], [47.2, 47884.0], [47.3, 47884.0], [47.4, 48048.0], [47.5, 48048.0], [47.6, 48066.0], [47.7, 48066.0], [47.8, 48066.0], [47.9, 48334.0], [48.0, 48334.0], [48.1, 48408.0], [48.2, 48408.0], [48.3, 48645.0], [48.4, 48645.0], [48.5, 48828.0], [48.6, 48828.0], [48.7, 48828.0], [48.8, 48917.0], [48.9, 48917.0], [49.0, 48975.0], [49.1, 48975.0], [49.2, 49058.0], [49.3, 49058.0], [49.4, 49058.0], [49.5, 50589.0], [49.6, 50589.0], [49.7, 50998.0], [49.8, 50998.0], [49.9, 51174.0], [50.0, 51174.0], [50.1, 51174.0], [50.2, 51388.0], [50.3, 51388.0], [50.4, 51577.0], [50.5, 51577.0], [50.6, 51729.0], [50.7, 51729.0], [50.8, 51729.0], [50.9, 52202.0], [51.0, 52202.0], [51.1, 52758.0], [51.2, 52758.0], [51.3, 53589.0], [51.4, 53589.0], [51.5, 53589.0], [51.6, 54363.0], [51.7, 54363.0], [51.8, 54365.0], [51.9, 54365.0], [52.0, 54365.0], [52.1, 54365.0], [52.2, 54365.0], [52.3, 54365.0], [52.4, 54365.0], [52.5, 54365.0], [52.6, 54365.0], [52.7, 54365.0], [52.8, 54365.0], [52.9, 54366.0], [53.0, 54366.0], [53.1, 54366.0], [53.2, 54367.0], [53.3, 54367.0], [53.4, 54403.0], [53.5, 54403.0], [53.6, 54694.0], [53.7, 54694.0], [53.8, 54694.0], [53.9, 55222.0], [54.0, 55222.0], [54.1, 55227.0], [54.2, 55227.0], [54.3, 55248.0], [54.4, 55248.0], [54.5, 55248.0], [54.6, 55268.0], [54.7, 55268.0], [54.8, 55270.0], [54.9, 55270.0], [55.0, 55279.0], [55.1, 55279.0], [55.2, 55283.0], [55.3, 55283.0], [55.4, 55283.0], [55.5, 55366.0], [55.6, 55366.0], [55.7, 55393.0], [55.8, 55393.0], [55.9, 55907.0], [56.0, 55907.0], [56.1, 55907.0], [56.2, 56142.0], [56.3, 56142.0], [56.4, 56827.0], [56.5, 56827.0], [56.6, 57004.0], [56.7, 57004.0], [56.8, 57004.0], [56.9, 57736.0], [57.0, 57736.0], [57.1, 57865.0], [57.2, 57865.0], [57.3, 58036.0], [57.4, 58036.0], [57.5, 58036.0], [57.6, 58860.0], [57.7, 58860.0], [57.8, 58900.0], [57.9, 58900.0], [58.0, 58910.0], [58.1, 58910.0], [58.2, 58936.0], [58.3, 58936.0], [58.4, 58936.0], [58.5, 59146.0], [58.6, 59146.0], [58.7, 60138.0], [58.8, 60138.0], [58.9, 60925.0], [59.0, 60925.0], [59.1, 60925.0], [59.2, 60928.0], [59.3, 60928.0], [59.4, 60955.0], [59.5, 60955.0], [59.6, 60966.0], [59.7, 60966.0], [59.8, 60966.0], [59.9, 60980.0], [60.0, 60980.0], [60.1, 60995.0], [60.2, 60995.0], [60.3, 61016.0], [60.4, 61016.0], [60.5, 61016.0], [60.6, 61251.0], [60.7, 61251.0], [60.8, 61706.0], [60.9, 61706.0], [61.0, 62022.0], [61.1, 62022.0], [61.2, 62022.0], [61.3, 62198.0], [61.4, 62198.0], [61.5, 62551.0], [61.6, 62551.0], [61.7, 63409.0], [61.8, 63409.0], [61.9, 63486.0], [62.0, 63486.0], [62.1, 63486.0], [62.2, 64004.0], [62.3, 64004.0], [62.4, 64062.0], [62.5, 64062.0], [62.6, 64533.0], [62.7, 64533.0], [62.8, 64533.0], [62.9, 64538.0], [63.0, 64538.0], [63.1, 64598.0], [63.2, 64598.0], [63.3, 64697.0], [63.4, 64697.0], [63.5, 64697.0], [63.6, 64972.0], [63.7, 64972.0], [63.8, 65064.0], [63.9, 65064.0], [64.0, 65090.0], [64.1, 65090.0], [64.2, 65090.0], [64.3, 65186.0], [64.4, 65186.0], [64.5, 65634.0], [64.6, 65634.0], [64.7, 66105.0], [64.8, 66105.0], [64.9, 66238.0], [65.0, 66238.0], [65.1, 66238.0], [65.2, 66717.0], [65.3, 66717.0], [65.4, 67490.0], [65.5, 67490.0], [65.6, 67563.0], [65.7, 67563.0], [65.8, 67563.0], [65.9, 67615.0], [66.0, 67615.0], [66.1, 67621.0], [66.2, 67621.0], [66.3, 68191.0], [66.4, 68191.0], [66.5, 68191.0], [66.6, 68210.0], [66.7, 68210.0], [66.8, 68572.0], [66.9, 68572.0], [67.0, 68791.0], [67.1, 68791.0], [67.2, 68791.0], [67.3, 68825.0], [67.4, 68825.0], [67.5, 70813.0], [67.6, 70813.0], [67.7, 71465.0], [67.8, 71465.0], [67.9, 72366.0], [68.0, 72366.0], [68.1, 72366.0], [68.2, 72382.0], [68.3, 72382.0], [68.4, 72743.0], [68.5, 72743.0], [68.6, 72785.0], [68.7, 72785.0], [68.8, 72785.0], [68.9, 72970.0], [69.0, 72970.0], [69.1, 73011.0], [69.2, 73011.0], [69.3, 73029.0], [69.4, 73029.0], [69.5, 73029.0], [69.6, 73300.0], [69.7, 73300.0], [69.8, 73335.0], [69.9, 73335.0], [70.0, 74822.0], [70.1, 74822.0], [70.2, 74822.0], [70.3, 76092.0], [70.4, 76092.0], [70.5, 76093.0], [70.6, 76093.0], [70.7, 76946.0], [70.8, 76946.0], [70.9, 76946.0], [71.0, 76951.0], [71.1, 76951.0], [71.2, 76954.0], [71.3, 76954.0], [71.4, 76967.0], [71.5, 76967.0], [71.6, 76982.0], [71.7, 76982.0], [71.8, 76982.0], [71.9, 76994.0], [72.0, 76994.0], [72.1, 77006.0], [72.2, 77006.0], [72.3, 77908.0], [72.4, 77908.0], [72.5, 77908.0], [72.6, 78168.0], [72.7, 78168.0], [72.8, 79049.0], [72.9, 79049.0], [73.0, 79655.0], [73.1, 79655.0], [73.2, 79655.0], [73.3, 79838.0], [73.4, 79838.0], [73.5, 79868.0], [73.6, 79868.0], [73.7, 79962.0], [73.8, 79962.0], [73.9, 79962.0], [74.0, 80284.0], [74.1, 80284.0], [74.2, 80429.0], [74.3, 80429.0], [74.4, 80803.0], [74.5, 80803.0], [74.6, 81189.0], [74.7, 81189.0], [74.8, 81189.0], [74.9, 81202.0], [75.0, 81202.0], [75.1, 81252.0], [75.2, 81252.0], [75.3, 81530.0], [75.4, 81530.0], [75.5, 81530.0], [75.6, 82183.0], [75.7, 82183.0], [75.8, 82232.0], [75.9, 82232.0], [76.0, 82940.0], [76.1, 82940.0], [76.2, 82940.0], [76.3, 83056.0], [76.4, 83056.0], [76.5, 83586.0], [76.6, 83586.0], [76.7, 83842.0], [76.8, 83842.0], [76.9, 83842.0], [77.0, 83890.0], [77.1, 83890.0], [77.2, 83911.0], [77.3, 83911.0], [77.4, 83950.0], [77.5, 83950.0], [77.6, 83989.0], [77.7, 83989.0], [77.8, 83989.0], [77.9, 84113.0], [78.0, 84113.0], [78.1, 84137.0], [78.2, 84137.0], [78.3, 84181.0], [78.4, 84181.0], [78.5, 84181.0], [78.6, 84303.0], [78.7, 84303.0], [78.8, 84341.0], [78.9, 84341.0], [79.0, 84376.0], [79.1, 84376.0], [79.2, 84376.0], [79.3, 84620.0], [79.4, 84620.0], [79.5, 84997.0], [79.6, 84997.0], [79.7, 85069.0], [79.8, 85069.0], [79.9, 85069.0], [80.0, 85115.0], [80.1, 85115.0], [80.2, 85144.0], [80.3, 85144.0], [80.4, 85391.0], [80.5, 85391.0], [80.6, 85391.0], [80.7, 85693.0], [80.8, 85693.0], [80.9, 85845.0], [81.0, 85845.0], [81.1, 86490.0], [81.2, 86490.0], [81.3, 86960.0], [81.4, 86960.0], [81.5, 86960.0], [81.6, 86988.0], [81.7, 86988.0], [81.8, 87004.0], [81.9, 87004.0], [82.0, 87140.0], [82.1, 87140.0], [82.2, 87140.0], [82.3, 87160.0], [82.4, 87160.0], [82.5, 87160.0], [82.6, 87160.0], [82.7, 87404.0], [82.8, 87404.0], [82.9, 87404.0], [83.0, 87414.0], [83.1, 87414.0], [83.2, 87672.0], [83.3, 87672.0], [83.4, 87769.0], [83.5, 87769.0], [83.6, 87769.0], [83.7, 88038.0], [83.8, 88038.0], [83.9, 88040.0], [84.0, 88040.0], [84.1, 88045.0], [84.2, 88045.0], [84.3, 88047.0], [84.4, 88047.0], [84.5, 88047.0], [84.6, 88053.0], [84.7, 88053.0], [84.8, 88070.0], [84.9, 88070.0], [85.0, 88213.0], [85.1, 88213.0], [85.2, 88213.0], [85.3, 88348.0], [85.4, 88348.0], [85.5, 88499.0], [85.6, 88499.0], [85.7, 89031.0], [85.8, 89031.0], [85.9, 89031.0], [86.0, 89040.0], [86.1, 89040.0], [86.2, 89059.0], [86.3, 89059.0], [86.4, 89076.0], [86.5, 89076.0], [86.6, 89076.0], [86.7, 89137.0], [86.8, 89137.0], [86.9, 89145.0], [87.0, 89145.0], [87.1, 89378.0], [87.2, 89378.0], [87.3, 90547.0], [87.4, 90547.0], [87.5, 90547.0], [87.6, 90843.0], [87.7, 90843.0], [87.8, 90855.0], [87.9, 90855.0], [88.0, 90880.0], [88.1, 90880.0], [88.2, 90880.0], [88.3, 90893.0], [88.4, 90893.0], [88.5, 90901.0], [88.6, 90901.0], [88.7, 91308.0], [88.8, 91308.0], [88.9, 91308.0], [89.0, 91516.0], [89.1, 91516.0], [89.2, 91709.0], [89.3, 91709.0], [89.4, 91713.0], [89.5, 91713.0], [89.6, 91713.0], [89.7, 91723.0], [89.8, 91723.0], [89.9, 91729.0], [90.0, 91729.0], [90.1, 91734.0], [90.2, 91734.0], [90.3, 91734.0], [90.4, 91749.0], [90.5, 91749.0], [90.6, 91750.0], [90.7, 91750.0], [90.8, 91756.0], [90.9, 91756.0], [91.0, 92209.0], [91.1, 92209.0], [91.2, 92209.0], [91.3, 92413.0], [91.4, 92413.0], [91.5, 93711.0], [91.6, 93711.0], [91.7, 93715.0], [91.8, 93715.0], [91.9, 93715.0], [92.0, 94019.0], [92.1, 94019.0], [92.2, 94584.0], [92.3, 94584.0], [92.4, 94586.0], [92.5, 94586.0], [92.6, 94586.0], [92.7, 94721.0], [92.8, 94721.0], [92.9, 94988.0], [93.0, 94988.0], [93.1, 95042.0], [93.2, 95042.0], [93.3, 95042.0], [93.4, 95574.0], [93.5, 95574.0], [93.6, 95849.0], [93.7, 95849.0], [93.8, 95868.0], [93.9, 95868.0], [94.0, 96196.0], [94.1, 96196.0], [94.2, 96196.0], [94.3, 96344.0], [94.4, 96344.0], [94.5, 96553.0], [94.6, 96553.0], [94.7, 96561.0], [94.8, 96561.0], [94.9, 96561.0], [95.0, 96679.0], [95.1, 96679.0], [95.2, 96720.0], [95.3, 96720.0], [95.4, 97020.0], [95.5, 97020.0], [95.6, 97020.0], [95.7, 97401.0], [95.8, 97401.0], [95.9, 97434.0], [96.0, 97434.0], [96.1, 97565.0], [96.2, 97565.0], [96.3, 97565.0], [96.4, 97568.0], [96.5, 97568.0], [96.6, 97621.0], [96.7, 97621.0], [96.8, 97926.0], [96.9, 97926.0], [97.0, 98137.0], [97.1, 98137.0], [97.2, 98137.0], [97.3, 98328.0], [97.4, 98328.0], [97.5, 98485.0], [97.6, 98485.0], [97.7, 98658.0], [97.8, 98658.0], [97.9, 98658.0], [98.0, 98839.0], [98.1, 98839.0], [98.2, 98962.0], [98.3, 98962.0], [98.4, 98998.0], [98.5, 98998.0], [98.6, 98998.0], [98.7, 99424.0], [98.8, 99424.0], [98.9, 99825.0], [99.0, 99825.0], [99.1, 100401.0], [99.2, 100401.0], [99.3, 100401.0], [99.4, 101367.0], [99.5, 101367.0], [99.6, 104181.0], [99.7, 104181.0], [99.8, 105181.0], [99.9, 105181.0], [100.0, 105181.0]], "isOverall": false, "label": "Dashboard-0", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 4.0], [4.9, 4.0], [5.0, 4.0], [5.1, 4.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 7.0], [5.8, 7.0], [5.9, 8.0], [6.0, 8.0], [6.1, 9.0], [6.2, 9.0], [6.3, 155.0], [6.4, 155.0], [6.5, 3642.0], [6.6, 3642.0], [6.7, 3700.0], [6.8, 3700.0], [6.9, 3769.0], [7.0, 3769.0], [7.1, 3777.0], [7.2, 3777.0], [7.3, 3849.0], [7.4, 3849.0], [7.5, 3874.0], [7.6, 3874.0], [7.7, 3889.0], [7.8, 3889.0], [7.9, 3941.0], [8.0, 3941.0], [8.1, 4011.0], [8.2, 4011.0], [8.3, 4049.0], [8.4, 4190.0], [8.5, 4190.0], [8.6, 4470.0], [8.7, 4470.0], [8.8, 4471.0], [8.9, 4471.0], [9.0, 4607.0], [9.1, 4607.0], [9.2, 4614.0], [9.3, 4614.0], [9.4, 4666.0], [9.5, 4666.0], [9.6, 4673.0], [9.7, 4673.0], [9.8, 4675.0], [9.9, 4675.0], [10.0, 4682.0], [10.1, 4682.0], [10.2, 4686.0], [10.3, 4686.0], [10.4, 4764.0], [10.5, 4764.0], [10.6, 4811.0], [10.7, 4811.0], [10.8, 4822.0], [10.9, 4822.0], [11.0, 4858.0], [11.1, 4858.0], [11.2, 4897.0], [11.3, 4897.0], [11.4, 4951.0], [11.5, 4951.0], [11.6, 4954.0], [11.7, 4954.0], [11.8, 4971.0], [11.9, 4971.0], [12.0, 5050.0], [12.1, 5050.0], [12.2, 5569.0], [12.3, 5569.0], [12.4, 5569.0], [12.5, 5569.0], [12.6, 5573.0], [12.7, 5573.0], [12.8, 5576.0], [12.9, 5576.0], [13.0, 5918.0], [13.1, 5918.0], [13.2, 5937.0], [13.3, 5937.0], [13.4, 5943.0], [13.5, 5943.0], [13.6, 6736.0], [13.7, 6736.0], [13.8, 6794.0], [13.9, 6794.0], [14.0, 7213.0], [14.1, 7213.0], [14.2, 7224.0], [14.3, 7224.0], [14.4, 7225.0], [14.5, 7225.0], [14.6, 7230.0], [14.7, 7230.0], [14.8, 7420.0], [14.9, 7420.0], [15.0, 7616.0], [15.1, 7616.0], [15.2, 7628.0], [15.3, 7628.0], [15.4, 7717.0], [15.5, 7717.0], [15.6, 7773.0], [15.7, 7773.0], [15.8, 7849.0], [15.9, 7849.0], [16.0, 7928.0], [16.1, 7928.0], [16.2, 8423.0], [16.3, 8423.0], [16.4, 8723.0], [16.5, 8723.0], [16.6, 10421.0], [16.7, 10421.0], [16.8, 10422.0], [16.9, 10422.0], [17.0, 10428.0], [17.1, 10428.0], [17.2, 10431.0], [17.3, 10431.0], [17.4, 10438.0], [17.5, 10438.0], [17.6, 10447.0], [17.7, 10447.0], [17.8, 10496.0], [17.9, 10496.0], [18.0, 12284.0], [18.1, 12284.0], [18.2, 12305.0], [18.3, 12305.0], [18.4, 12308.0], [18.5, 12308.0], [18.6, 12309.0], [18.7, 12309.0], [18.8, 12321.0], [18.9, 12321.0], [19.0, 12331.0], [19.1, 12331.0], [19.2, 12335.0], [19.3, 12335.0], [19.4, 12344.0], [19.5, 12344.0], [19.6, 12442.0], [19.7, 12442.0], [19.8, 12690.0], [19.9, 12690.0], [20.0, 12751.0], [20.1, 12751.0], [20.2, 12815.0], [20.3, 12815.0], [20.4, 12968.0], [20.5, 12968.0], [20.6, 13187.0], [20.7, 13187.0], [20.8, 13449.0], [20.9, 13449.0], [21.0, 13465.0], [21.1, 13465.0], [21.2, 13865.0], [21.3, 13865.0], [21.4, 15009.0], [21.5, 15009.0], [21.6, 15012.0], [21.7, 15012.0], [21.8, 15013.0], [21.9, 15013.0], [22.0, 15021.0], [22.1, 15021.0], [22.2, 15031.0], [22.3, 15031.0], [22.4, 15049.0], [22.5, 15049.0], [22.6, 15663.0], [22.7, 15663.0], [22.8, 48545.0], [22.9, 48545.0], [23.0, 61671.0], [23.1, 61671.0], [23.2, 68151.0], [23.3, 68151.0], [23.4, 79011.0], [23.5, 79011.0], [23.6, 98878.0], [23.7, 98878.0], [23.8, 99090.0], [23.9, 99090.0], [24.0, 99108.0], [24.1, 99108.0], [24.2, 99178.0], [24.3, 99178.0], [24.4, 99633.0], [24.5, 99633.0], [24.6, 99695.0], [24.7, 99695.0], [24.8, 99833.0], [24.9, 99833.0], [25.0, 100350.0], [25.1, 100350.0], [25.2, 100702.0], [25.3, 100702.0], [25.4, 100874.0], [25.5, 100874.0], [25.6, 101009.0], [25.7, 101009.0], [25.8, 101735.0], [25.9, 101735.0], [26.0, 102031.0], [26.1, 102031.0], [26.2, 102162.0], [26.3, 102162.0], [26.4, 102367.0], [26.5, 102367.0], [26.6, 102551.0], [26.7, 102551.0], [26.8, 102622.0], [26.9, 102622.0], [27.0, 103251.0], [27.1, 103251.0], [27.2, 103478.0], [27.3, 103478.0], [27.4, 104454.0], [27.5, 104454.0], [27.6, 104909.0], [27.7, 104909.0], [27.8, 105255.0], [27.9, 105255.0], [28.0, 106151.0], [28.1, 106151.0], [28.2, 106293.0], [28.3, 106293.0], [28.4, 106516.0], [28.5, 106516.0], [28.6, 106872.0], [28.7, 106872.0], [28.8, 107118.0], [28.9, 107118.0], [29.0, 107156.0], [29.1, 107156.0], [29.2, 107174.0], [29.3, 107174.0], [29.4, 107749.0], [29.5, 107749.0], [29.6, 107782.0], [29.7, 107782.0], [29.8, 107853.0], [29.9, 107853.0], [30.0, 108051.0], [30.1, 108051.0], [30.2, 108302.0], [30.3, 108302.0], [30.4, 108407.0], [30.5, 108407.0], [30.6, 108921.0], [30.7, 108921.0], [30.8, 108984.0], [30.9, 108984.0], [31.0, 109062.0], [31.1, 109062.0], [31.2, 109106.0], [31.3, 109106.0], [31.4, 109426.0], [31.5, 109426.0], [31.6, 109444.0], [31.7, 109444.0], [31.8, 109615.0], [31.9, 109615.0], [32.0, 109977.0], [32.1, 109977.0], [32.2, 110081.0], [32.3, 110081.0], [32.4, 110281.0], [32.5, 110281.0], [32.6, 110476.0], [32.7, 110476.0], [32.8, 110632.0], [32.9, 110632.0], [33.0, 110990.0], [33.1, 110990.0], [33.2, 111176.0], [33.3, 111176.0], [33.4, 111248.0], [33.5, 111248.0], [33.6, 111740.0], [33.7, 111740.0], [33.8, 111831.0], [33.9, 111831.0], [34.0, 111843.0], [34.1, 111843.0], [34.2, 111878.0], [34.3, 111878.0], [34.4, 111961.0], [34.5, 111961.0], [34.6, 112165.0], [34.7, 112165.0], [34.8, 112352.0], [34.9, 112352.0], [35.0, 112526.0], [35.1, 112526.0], [35.2, 112731.0], [35.3, 112731.0], [35.4, 112872.0], [35.5, 112872.0], [35.6, 112929.0], [35.7, 112929.0], [35.8, 113830.0], [35.9, 113830.0], [36.0, 113867.0], [36.1, 113867.0], [36.2, 113964.0], [36.3, 113964.0], [36.4, 114130.0], [36.5, 114130.0], [36.6, 114199.0], [36.7, 114199.0], [36.8, 114262.0], [36.9, 114262.0], [37.0, 114505.0], [37.1, 114505.0], [37.2, 114721.0], [37.3, 114721.0], [37.4, 115333.0], [37.5, 115333.0], [37.6, 115471.0], [37.7, 115471.0], [37.8, 115844.0], [37.9, 115844.0], [38.0, 115927.0], [38.1, 115927.0], [38.2, 116163.0], [38.3, 116163.0], [38.4, 116163.0], [38.5, 116279.0], [38.6, 116279.0], [38.7, 116771.0], [38.8, 116771.0], [38.9, 117226.0], [39.0, 117226.0], [39.1, 117236.0], [39.2, 117236.0], [39.3, 117725.0], [39.4, 117725.0], [39.5, 117775.0], [39.6, 117775.0], [39.7, 117829.0], [39.8, 117829.0], [39.9, 118263.0], [40.0, 118263.0], [40.1, 118445.0], [40.2, 118445.0], [40.3, 118674.0], [40.4, 118674.0], [40.5, 118800.0], [40.6, 118800.0], [40.7, 118962.0], [40.8, 118962.0], [40.9, 119408.0], [41.0, 119408.0], [41.1, 119413.0], [41.2, 119413.0], [41.3, 120001.0], [41.4, 120001.0], [41.5, 120037.0], [41.6, 120037.0], [41.7, 120201.0], [41.8, 120201.0], [41.9, 120337.0], [42.0, 120337.0], [42.1, 120436.0], [42.2, 120436.0], [42.3, 120685.0], [42.4, 120685.0], [42.5, 120883.0], [42.6, 120883.0], [42.7, 120997.0], [42.8, 120997.0], [42.9, 121458.0], [43.0, 121458.0], [43.1, 121480.0], [43.2, 121480.0], [43.3, 121633.0], [43.4, 121633.0], [43.5, 121814.0], [43.6, 121814.0], [43.7, 121918.0], [43.8, 121918.0], [43.9, 122149.0], [44.0, 122149.0], [44.1, 122597.0], [44.2, 122597.0], [44.3, 122925.0], [44.4, 122925.0], [44.5, 124039.0], [44.6, 124039.0], [44.7, 124409.0], [44.8, 124409.0], [44.9, 124415.0], [45.0, 124415.0], [45.1, 124516.0], [45.2, 124516.0], [45.3, 124775.0], [45.4, 124775.0], [45.5, 124969.0], [45.6, 124969.0], [45.7, 125403.0], [45.8, 125403.0], [45.9, 125474.0], [46.0, 125474.0], [46.1, 125538.0], [46.2, 125538.0], [46.3, 125683.0], [46.4, 125683.0], [46.5, 125741.0], [46.6, 125741.0], [46.7, 126207.0], [46.8, 126207.0], [46.9, 126211.0], [47.0, 126211.0], [47.1, 126850.0], [47.2, 126850.0], [47.3, 126921.0], [47.4, 126921.0], [47.5, 126924.0], [47.6, 126924.0], [47.7, 126981.0], [47.8, 126981.0], [47.9, 127135.0], [48.0, 127135.0], [48.1, 127238.0], [48.2, 127238.0], [48.3, 127423.0], [48.4, 127423.0], [48.5, 128653.0], [48.6, 128653.0], [48.7, 128802.0], [48.8, 128802.0], [48.9, 128923.0], [49.0, 128923.0], [49.1, 129197.0], [49.2, 129197.0], [49.3, 129248.0], [49.4, 129248.0], [49.5, 129729.0], [49.6, 129729.0], [49.7, 130474.0], [49.8, 130474.0], [49.9, 130606.0], [50.0, 130606.0], [50.1, 131450.0], [50.2, 131450.0], [50.3, 131499.0], [50.4, 131499.0], [50.5, 131804.0], [50.6, 131804.0], [50.7, 132789.0], [50.8, 132789.0], [50.9, 132968.0], [51.0, 132968.0], [51.1, 133029.0], [51.2, 133029.0], [51.3, 133072.0], [51.4, 133072.0], [51.5, 133367.0], [51.6, 133367.0], [51.7, 133734.0], [51.8, 133734.0], [51.9, 133871.0], [52.0, 133871.0], [52.1, 134251.0], [52.2, 134251.0], [52.3, 134469.0], [52.4, 134469.0], [52.5, 134618.0], [52.6, 134618.0], [52.7, 134725.0], [52.8, 134725.0], [52.9, 134766.0], [53.0, 134766.0], [53.1, 135048.0], [53.2, 135048.0], [53.3, 135252.0], [53.4, 135252.0], [53.5, 135397.0], [53.6, 135397.0], [53.7, 135695.0], [53.8, 135695.0], [53.9, 135763.0], [54.0, 135763.0], [54.1, 136189.0], [54.2, 136189.0], [54.3, 136395.0], [54.4, 136395.0], [54.5, 136532.0], [54.6, 136532.0], [54.7, 136649.0], [54.8, 136649.0], [54.9, 136667.0], [55.0, 136667.0], [55.1, 136893.0], [55.2, 136893.0], [55.3, 137260.0], [55.4, 137260.0], [55.5, 137364.0], [55.6, 137364.0], [55.7, 137437.0], [55.8, 137437.0], [55.9, 138017.0], [56.0, 138017.0], [56.1, 138353.0], [56.2, 138353.0], [56.3, 139244.0], [56.4, 139244.0], [56.5, 139364.0], [56.6, 139364.0], [56.7, 139413.0], [56.8, 139413.0], [56.9, 139637.0], [57.0, 139637.0], [57.1, 140029.0], [57.2, 140029.0], [57.3, 140102.0], [57.4, 140102.0], [57.5, 140299.0], [57.6, 140299.0], [57.7, 140334.0], [57.8, 140334.0], [57.9, 140593.0], [58.0, 140593.0], [58.1, 141423.0], [58.2, 141423.0], [58.3, 141605.0], [58.4, 141605.0], [58.5, 142604.0], [58.6, 142604.0], [58.7, 142641.0], [58.8, 142641.0], [58.9, 143662.0], [59.0, 143662.0], [59.1, 145261.0], [59.2, 145261.0], [59.3, 145582.0], [59.4, 145582.0], [59.5, 145744.0], [59.6, 145744.0], [59.7, 146090.0], [59.8, 146090.0], [59.9, 146402.0], [60.0, 146402.0], [60.1, 146824.0], [60.2, 146824.0], [60.3, 147210.0], [60.4, 147210.0], [60.5, 147765.0], [60.6, 147765.0], [60.7, 147783.0], [60.8, 147783.0], [60.9, 148424.0], [61.0, 148424.0], [61.1, 148944.0], [61.2, 148944.0], [61.3, 149281.0], [61.4, 149281.0], [61.5, 149383.0], [61.6, 149383.0], [61.7, 149390.0], [61.8, 149390.0], [61.9, 149412.0], [62.0, 149412.0], [62.1, 149456.0], [62.2, 149456.0], [62.3, 149459.0], [62.4, 149459.0], [62.5, 149477.0], [62.6, 149477.0], [62.7, 149550.0], [62.8, 149550.0], [62.9, 150052.0], [63.0, 150052.0], [63.1, 150309.0], [63.2, 150309.0], [63.3, 150463.0], [63.4, 150463.0], [63.5, 150490.0], [63.6, 150490.0], [63.7, 150575.0], [63.8, 150575.0], [63.9, 150578.0], [64.0, 150578.0], [64.1, 150712.0], [64.2, 150712.0], [64.3, 150930.0], [64.4, 150930.0], [64.5, 150973.0], [64.6, 150973.0], [64.7, 150989.0], [64.8, 150989.0], [64.9, 151164.0], [65.0, 151164.0], [65.1, 151184.0], [65.2, 151184.0], [65.3, 151380.0], [65.4, 151380.0], [65.5, 151442.0], [65.6, 151442.0], [65.7, 151664.0], [65.8, 151664.0], [65.9, 151834.0], [66.0, 151834.0], [66.1, 151925.0], [66.2, 151925.0], [66.3, 152047.0], [66.4, 152047.0], [66.5, 152058.0], [66.6, 152058.0], [66.7, 152719.0], [66.8, 152719.0], [66.9, 152809.0], [67.0, 152809.0], [67.1, 153081.0], [67.2, 153081.0], [67.3, 153107.0], [67.4, 153107.0], [67.5, 153246.0], [67.6, 153246.0], [67.7, 153305.0], [67.8, 153305.0], [67.9, 153308.0], [68.0, 153308.0], [68.1, 153858.0], [68.2, 153858.0], [68.3, 154336.0], [68.4, 154336.0], [68.5, 154458.0], [68.6, 154458.0], [68.7, 155400.0], [68.8, 155400.0], [68.9, 155639.0], [69.0, 155639.0], [69.1, 155940.0], [69.2, 155940.0], [69.3, 155998.0], [69.4, 155998.0], [69.5, 156004.0], [69.6, 156004.0], [69.7, 156612.0], [69.8, 156612.0], [69.9, 156750.0], [70.0, 156750.0], [70.1, 157372.0], [70.2, 157372.0], [70.3, 157377.0], [70.4, 157377.0], [70.5, 157532.0], [70.6, 157532.0], [70.7, 157680.0], [70.8, 157680.0], [70.9, 157824.0], [71.0, 157824.0], [71.1, 157833.0], [71.2, 157833.0], [71.3, 158394.0], [71.4, 158394.0], [71.5, 158395.0], [71.6, 158395.0], [71.7, 158497.0], [71.8, 158497.0], [71.9, 159234.0], [72.0, 159234.0], [72.1, 159366.0], [72.2, 159366.0], [72.3, 159940.0], [72.4, 159940.0], [72.5, 160712.0], [72.6, 160712.0], [72.7, 161752.0], [72.8, 161752.0], [72.9, 161969.0], [73.0, 161969.0], [73.1, 163918.0], [73.2, 163918.0], [73.3, 164090.0], [73.4, 164090.0], [73.5, 165091.0], [73.6, 165091.0], [73.7, 165307.0], [73.8, 165307.0], [73.9, 165411.0], [74.0, 165411.0], [74.1, 165461.0], [74.2, 165461.0], [74.3, 165564.0], [74.4, 165564.0], [74.5, 166065.0], [74.6, 166065.0], [74.7, 166475.0], [74.8, 166475.0], [74.9, 166683.0], [75.0, 166683.0], [75.1, 166698.0], [75.2, 166698.0], [75.3, 166746.0], [75.4, 166746.0], [75.5, 166873.0], [75.6, 166873.0], [75.7, 166894.0], [75.8, 166894.0], [75.9, 166911.0], [76.0, 166911.0], [76.1, 167145.0], [76.2, 167145.0], [76.3, 167873.0], [76.4, 167873.0], [76.5, 169124.0], [76.6, 169124.0], [76.7, 169251.0], [76.8, 169251.0], [76.9, 170310.0], [77.0, 170310.0], [77.1, 170870.0], [77.2, 170870.0], [77.3, 171000.0], [77.4, 171000.0], [77.5, 171031.0], [77.6, 171031.0], [77.7, 171472.0], [77.8, 171472.0], [77.9, 171924.0], [78.0, 171924.0], [78.1, 172088.0], [78.2, 172088.0], [78.3, 172915.0], [78.4, 172915.0], [78.5, 172964.0], [78.6, 172964.0], [78.7, 173203.0], [78.8, 173203.0], [78.9, 173237.0], [79.0, 173237.0], [79.1, 173555.0], [79.2, 173555.0], [79.3, 173938.0], [79.4, 173938.0], [79.5, 174352.0], [79.6, 174352.0], [79.7, 174433.0], [79.8, 174433.0], [79.9, 174469.0], [80.0, 174469.0], [80.1, 174617.0], [80.2, 174617.0], [80.3, 174845.0], [80.4, 174845.0], [80.5, 174919.0], [80.6, 174919.0], [80.7, 175393.0], [80.8, 175393.0], [80.9, 175444.0], [81.0, 175444.0], [81.1, 175476.0], [81.2, 175476.0], [81.3, 175478.0], [81.4, 175478.0], [81.5, 175579.0], [81.6, 175579.0], [81.7, 175620.0], [81.8, 175620.0], [81.9, 175635.0], [82.0, 175635.0], [82.1, 175770.0], [82.2, 175770.0], [82.3, 175881.0], [82.4, 175881.0], [82.5, 175948.0], [82.6, 175948.0], [82.7, 176066.0], [82.8, 176066.0], [82.9, 176107.0], [83.0, 176107.0], [83.1, 176127.0], [83.2, 176127.0], [83.3, 176209.0], [83.4, 176209.0], [83.5, 176520.0], [83.6, 176520.0], [83.7, 176767.0], [83.8, 176767.0], [83.9, 176818.0], [84.0, 176818.0], [84.1, 176834.0], [84.2, 176834.0], [84.3, 176835.0], [84.4, 176835.0], [84.5, 176871.0], [84.6, 176871.0], [84.7, 177039.0], [84.8, 177039.0], [84.9, 177185.0], [85.0, 177185.0], [85.1, 177201.0], [85.2, 177201.0], [85.3, 177439.0], [85.4, 177439.0], [85.5, 177493.0], [85.6, 177493.0], [85.7, 177502.0], [85.8, 177502.0], [85.9, 177980.0], [86.0, 177980.0], [86.1, 178166.0], [86.2, 178166.0], [86.3, 178239.0], [86.4, 178239.0], [86.5, 178553.0], [86.6, 178553.0], [86.7, 178863.0], [86.8, 178863.0], [86.9, 179095.0], [87.0, 179095.0], [87.1, 179192.0], [87.2, 179192.0], [87.3, 179491.0], [87.4, 179491.0], [87.5, 179512.0], [87.6, 179512.0], [87.7, 179555.0], [87.8, 179555.0], [87.9, 180216.0], [88.0, 180216.0], [88.1, 180355.0], [88.2, 180355.0], [88.3, 180722.0], [88.4, 180722.0], [88.5, 182416.0], [88.6, 182416.0], [88.7, 182463.0], [88.8, 182463.0], [88.9, 184355.0], [89.0, 184355.0], [89.1, 184613.0], [89.2, 184613.0], [89.3, 185177.0], [89.4, 185177.0], [89.5, 185257.0], [89.6, 185257.0], [89.7, 186227.0], [89.8, 186227.0], [89.9, 186657.0], [90.0, 186657.0], [90.1, 186880.0], [90.2, 186880.0], [90.3, 186895.0], [90.4, 186895.0], [90.5, 187629.0], [90.6, 187629.0], [90.7, 188194.0], [90.8, 188194.0], [90.9, 188238.0], [91.0, 188238.0], [91.1, 188265.0], [91.2, 188265.0], [91.3, 188441.0], [91.4, 188441.0], [91.5, 188542.0], [91.6, 188542.0], [91.7, 188775.0], [91.8, 188775.0], [91.9, 188825.0], [92.0, 188825.0], [92.1, 188926.0], [92.2, 188926.0], [92.3, 189006.0], [92.4, 189006.0], [92.5, 189381.0], [92.6, 189381.0], [92.7, 189547.0], [92.8, 189547.0], [92.9, 189636.0], [93.0, 189636.0], [93.1, 189795.0], [93.2, 189795.0], [93.3, 189959.0], [93.4, 189959.0], [93.5, 190399.0], [93.6, 190399.0], [93.7, 190462.0], [93.8, 190462.0], [93.9, 190578.0], [94.0, 190578.0], [94.1, 190884.0], [94.2, 190884.0], [94.3, 191070.0], [94.4, 191070.0], [94.5, 191190.0], [94.6, 191190.0], [94.7, 191250.0], [94.8, 191250.0], [94.9, 191491.0], [95.0, 191491.0], [95.1, 191492.0], [95.2, 191492.0], [95.3, 192234.0], [95.4, 192234.0], [95.5, 192391.0], [95.6, 192391.0], [95.7, 192581.0], [95.8, 192581.0], [95.9, 193758.0], [96.0, 193758.0], [96.1, 194107.0], [96.2, 194107.0], [96.3, 194423.0], [96.4, 194423.0], [96.5, 194437.0], [96.6, 194437.0], [96.7, 194455.0], [96.8, 194455.0], [96.9, 194573.0], [97.0, 194573.0], [97.1, 194984.0], [97.2, 194984.0], [97.3, 195269.0], [97.4, 195269.0], [97.5, 195553.0], [97.6, 195553.0], [97.7, 195614.0], [97.8, 195614.0], [97.9, 196074.0], [98.0, 196074.0], [98.1, 196229.0], [98.2, 196229.0], [98.3, 197016.0], [98.4, 197016.0], [98.5, 197135.0], [98.6, 197135.0], [98.7, 197493.0], [98.8, 197493.0], [98.9, 197787.0], [99.0, 197787.0], [99.1, 197882.0], [99.2, 197882.0], [99.3, 197938.0], [99.4, 197938.0], [99.5, 198732.0], [99.6, 198732.0], [99.7, 199221.0], [99.8, 199221.0], [99.9, 199929.0], [100.0, 199929.0]], "isOverall": false, "label": "Dashboard", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 3.0], [9.6, 3.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 5.0], [10.3, 5.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 20.0], [10.8, 20.0], [10.9, 44818.0], [11.0, 44818.0], [11.1, 57729.0], [11.2, 57729.0], [11.3, 57729.0], [11.4, 62545.0], [11.5, 62545.0], [11.6, 62559.0], [11.7, 62559.0], [11.8, 62905.0], [11.9, 62905.0], [12.0, 62905.0], [12.1, 63175.0], [12.2, 63175.0], [12.3, 63290.0], [12.4, 63290.0], [12.5, 63882.0], [12.6, 63882.0], [12.7, 63882.0], [12.8, 63896.0], [12.9, 63896.0], [13.0, 64614.0], [13.1, 64614.0], [13.2, 65071.0], [13.3, 65071.0], [13.4, 65213.0], [13.5, 65213.0], [13.6, 65213.0], [13.7, 65284.0], [13.8, 65284.0], [13.9, 65337.0], [14.0, 65337.0], [14.1, 65629.0], [14.2, 65629.0], [14.3, 65629.0], [14.4, 65942.0], [14.5, 65942.0], [14.6, 66027.0], [14.7, 66027.0], [14.8, 66199.0], [14.9, 66199.0], [15.0, 66199.0], [15.1, 67513.0], [15.2, 67513.0], [15.3, 67908.0], [15.4, 67908.0], [15.5, 68232.0], [15.6, 68232.0], [15.7, 68232.0], [15.8, 68947.0], [15.9, 68947.0], [16.0, 68985.0], [16.1, 68985.0], [16.2, 69188.0], [16.3, 69188.0], [16.4, 69338.0], [16.5, 69338.0], [16.6, 69338.0], [16.7, 69355.0], [16.8, 69355.0], [16.9, 69958.0], [17.0, 69958.0], [17.1, 70098.0], [17.2, 70098.0], [17.3, 70098.0], [17.4, 70126.0], [17.5, 70126.0], [17.6, 70228.0], [17.7, 70228.0], [17.8, 70243.0], [17.9, 70243.0], [18.0, 70243.0], [18.1, 70260.0], [18.2, 70260.0], [18.3, 70998.0], [18.4, 70998.0], [18.5, 71050.0], [18.6, 71050.0], [18.7, 71050.0], [18.8, 71125.0], [18.9, 71125.0], [19.0, 71190.0], [19.1, 71190.0], [19.2, 71346.0], [19.3, 71346.0], [19.4, 71423.0], [19.5, 71423.0], [19.6, 71423.0], [19.7, 71562.0], [19.8, 71562.0], [19.9, 71727.0], [20.0, 71727.0], [20.1, 71729.0], [20.2, 71729.0], [20.3, 71729.0], [20.4, 71816.0], [20.5, 71816.0], [20.6, 72202.0], [20.7, 72202.0], [20.8, 72347.0], [20.9, 72347.0], [21.0, 72347.0], [21.1, 72540.0], [21.2, 72540.0], [21.3, 72645.0], [21.4, 72645.0], [21.5, 72679.0], [21.6, 72679.0], [21.7, 72679.0], [21.8, 72697.0], [21.9, 72697.0], [22.0, 73034.0], [22.1, 73034.0], [22.2, 73104.0], [22.3, 73104.0], [22.4, 73104.0], [22.5, 73139.0], [22.6, 73139.0], [22.7, 73302.0], [22.8, 73302.0], [22.9, 73400.0], [23.0, 73400.0], [23.1, 73533.0], [23.2, 73533.0], [23.3, 73533.0], [23.4, 73566.0], [23.5, 73566.0], [23.6, 73809.0], [23.7, 73809.0], [23.8, 74000.0], [23.9, 74000.0], [24.0, 74000.0], [24.1, 74010.0], [24.2, 74010.0], [24.3, 74686.0], [24.4, 74686.0], [24.5, 74889.0], [24.6, 74889.0], [24.7, 74889.0], [24.8, 74924.0], [24.9, 74924.0], [25.0, 75026.0], [25.1, 75026.0], [25.2, 75106.0], [25.3, 75106.0], [25.4, 75106.0], [25.5, 75112.0], [25.6, 75112.0], [25.7, 75122.0], [25.8, 75122.0], [25.9, 75202.0], [26.0, 75202.0], [26.1, 75331.0], [26.2, 75331.0], [26.3, 75331.0], [26.4, 75410.0], [26.5, 75410.0], [26.6, 75473.0], [26.7, 75473.0], [26.8, 75504.0], [26.9, 75504.0], [27.0, 75504.0], [27.1, 75541.0], [27.2, 75541.0], [27.3, 75602.0], [27.4, 75602.0], [27.5, 75644.0], [27.6, 75644.0], [27.7, 75644.0], [27.8, 75665.0], [27.9, 75665.0], [28.0, 75747.0], [28.1, 75747.0], [28.2, 75758.0], [28.3, 75758.0], [28.4, 75758.0], [28.5, 75760.0], [28.6, 75760.0], [28.7, 75828.0], [28.8, 75828.0], [28.9, 75847.0], [29.0, 75847.0], [29.1, 75860.0], [29.2, 75860.0], [29.3, 75860.0], [29.4, 75944.0], [29.5, 75944.0], [29.6, 76114.0], [29.7, 76114.0], [29.8, 76123.0], [29.9, 76123.0], [30.0, 76123.0], [30.1, 76155.0], [30.2, 76155.0], [30.3, 76211.0], [30.4, 76211.0], [30.5, 76302.0], [30.6, 76302.0], [30.7, 76302.0], [30.8, 76336.0], [30.9, 76336.0], [31.0, 76431.0], [31.1, 76431.0], [31.2, 76453.0], [31.3, 76453.0], [31.4, 76453.0], [31.5, 76480.0], [31.6, 76480.0], [31.7, 76491.0], [31.8, 76491.0], [31.9, 76644.0], [32.0, 76644.0], [32.1, 76644.0], [32.2, 76884.0], [32.3, 76884.0], [32.4, 76887.0], [32.5, 76887.0], [32.6, 76904.0], [32.7, 76904.0], [32.8, 76942.0], [32.9, 76942.0], [33.0, 76942.0], [33.1, 76945.0], [33.2, 76945.0], [33.3, 77002.0], [33.4, 77002.0], [33.5, 77063.0], [33.6, 77063.0], [33.7, 77063.0], [33.8, 77092.0], [33.9, 77092.0], [34.0, 77122.0], [34.1, 77122.0], [34.2, 77146.0], [34.3, 77146.0], [34.4, 77146.0], [34.5, 77158.0], [34.6, 77158.0], [34.7, 77285.0], [34.8, 77285.0], [34.9, 77304.0], [35.0, 77304.0], [35.1, 77304.0], [35.2, 77334.0], [35.3, 77334.0], [35.4, 77491.0], [35.5, 77491.0], [35.6, 77664.0], [35.7, 77664.0], [35.8, 77717.0], [35.9, 77717.0], [36.0, 77717.0], [36.1, 77731.0], [36.2, 77731.0], [36.3, 77743.0], [36.4, 77743.0], [36.5, 77868.0], [36.6, 77868.0], [36.7, 77868.0], [36.8, 77868.0], [36.9, 77868.0], [37.0, 77900.0], [37.1, 77900.0], [37.2, 77906.0], [37.3, 77906.0], [37.4, 77906.0], [37.5, 78004.0], [37.6, 78004.0], [37.7, 78057.0], [37.8, 78057.0], [37.9, 78112.0], [38.0, 78112.0], [38.1, 78112.0], [38.2, 78126.0], [38.3, 78126.0], [38.4, 78196.0], [38.5, 78196.0], [38.6, 78216.0], [38.7, 78216.0], [38.8, 78297.0], [38.9, 78297.0], [39.0, 78297.0], [39.1, 78303.0], [39.2, 78303.0], [39.3, 78361.0], [39.4, 78361.0], [39.5, 78392.0], [39.6, 78392.0], [39.7, 78392.0], [39.8, 78402.0], [39.9, 78402.0], [40.0, 78595.0], [40.1, 78595.0], [40.2, 78669.0], [40.3, 78669.0], [40.4, 78669.0], [40.5, 78701.0], [40.6, 78701.0], [40.7, 78734.0], [40.8, 78734.0], [40.9, 78782.0], [41.0, 78782.0], [41.1, 78782.0], [41.2, 78877.0], [41.3, 78877.0], [41.4, 79005.0], [41.5, 79005.0], [41.6, 79144.0], [41.7, 79144.0], [41.8, 79144.0], [41.9, 79146.0], [42.0, 79146.0], [42.1, 79150.0], [42.2, 79150.0], [42.3, 79252.0], [42.4, 79252.0], [42.5, 79264.0], [42.6, 79264.0], [42.7, 79264.0], [42.8, 79317.0], [42.9, 79317.0], [43.0, 79354.0], [43.1, 79354.0], [43.2, 79371.0], [43.3, 79371.0], [43.4, 79371.0], [43.5, 79401.0], [43.6, 79401.0], [43.7, 79405.0], [43.8, 79405.0], [43.9, 79409.0], [44.0, 79409.0], [44.1, 79409.0], [44.2, 79466.0], [44.3, 79466.0], [44.4, 79466.0], [44.5, 79466.0], [44.6, 79524.0], [44.7, 79524.0], [44.8, 79524.0], [44.9, 79555.0], [45.0, 79555.0], [45.1, 79569.0], [45.2, 79569.0], [45.3, 79612.0], [45.4, 79612.0], [45.5, 79641.0], [45.6, 79641.0], [45.7, 79641.0], [45.8, 79671.0], [45.9, 79671.0], [46.0, 79768.0], [46.1, 79768.0], [46.2, 79863.0], [46.3, 79863.0], [46.4, 79863.0], [46.5, 79955.0], [46.6, 79955.0], [46.7, 79962.0], [46.8, 79962.0], [46.9, 80096.0], [47.0, 80096.0], [47.1, 80096.0], [47.2, 80117.0], [47.3, 80117.0], [47.4, 80434.0], [47.5, 80434.0], [47.6, 80458.0], [47.7, 80458.0], [47.8, 80458.0], [47.9, 80529.0], [48.0, 80529.0], [48.1, 80764.0], [48.2, 80764.0], [48.3, 81249.0], [48.4, 81249.0], [48.5, 81291.0], [48.6, 81291.0], [48.7, 81291.0], [48.8, 81324.0], [48.9, 81324.0], [49.0, 81468.0], [49.1, 81468.0], [49.2, 81614.0], [49.3, 81614.0], [49.4, 81614.0], [49.5, 81642.0], [49.6, 81642.0], [49.7, 82030.0], [49.8, 82030.0], [49.9, 82063.0], [50.0, 82063.0], [50.1, 82063.0], [50.2, 82107.0], [50.3, 82107.0], [50.4, 82471.0], [50.5, 82471.0], [50.6, 82531.0], [50.7, 82531.0], [50.8, 82531.0], [50.9, 82591.0], [51.0, 82591.0], [51.1, 82606.0], [51.2, 82606.0], [51.3, 82808.0], [51.4, 82808.0], [51.5, 82808.0], [51.6, 83489.0], [51.7, 83489.0], [51.8, 83502.0], [51.9, 83502.0], [52.0, 83565.0], [52.1, 83565.0], [52.2, 83613.0], [52.3, 83613.0], [52.4, 83613.0], [52.5, 83670.0], [52.6, 83670.0], [52.7, 84100.0], [52.8, 84100.0], [52.9, 84131.0], [53.0, 84131.0], [53.1, 84131.0], [53.2, 84248.0], [53.3, 84248.0], [53.4, 84292.0], [53.5, 84292.0], [53.6, 84361.0], [53.7, 84361.0], [53.8, 84361.0], [53.9, 84415.0], [54.0, 84415.0], [54.1, 84453.0], [54.2, 84453.0], [54.3, 84488.0], [54.4, 84488.0], [54.5, 84488.0], [54.6, 84813.0], [54.7, 84813.0], [54.8, 85313.0], [54.9, 85313.0], [55.0, 86855.0], [55.1, 86855.0], [55.2, 87771.0], [55.3, 87771.0], [55.4, 87771.0], [55.5, 87828.0], [55.6, 87828.0], [55.7, 87845.0], [55.8, 87845.0], [55.9, 87886.0], [56.0, 87886.0], [56.1, 87886.0], [56.2, 88069.0], [56.3, 88069.0], [56.4, 88099.0], [56.5, 88099.0], [56.6, 88304.0], [56.7, 88304.0], [56.8, 88304.0], [56.9, 88507.0], [57.0, 88507.0], [57.1, 88615.0], [57.2, 88615.0], [57.3, 88674.0], [57.4, 88674.0], [57.5, 88674.0], [57.6, 88778.0], [57.7, 88778.0], [57.8, 88782.0], [57.9, 88782.0], [58.0, 88787.0], [58.1, 88787.0], [58.2, 88790.0], [58.3, 88790.0], [58.4, 88790.0], [58.5, 88798.0], [58.6, 88798.0], [58.7, 88851.0], [58.8, 88851.0], [58.9, 88986.0], [59.0, 88986.0], [59.1, 88986.0], [59.2, 92956.0], [59.3, 92956.0], [59.4, 93151.0], [59.5, 93151.0], [59.6, 93618.0], [59.7, 93618.0], [59.8, 93618.0], [59.9, 93713.0], [60.0, 93713.0], [60.1, 93993.0], [60.2, 93993.0], [60.3, 94571.0], [60.4, 94571.0], [60.5, 94571.0], [60.6, 94729.0], [60.7, 94729.0], [60.8, 94836.0], [60.9, 94836.0], [61.0, 94919.0], [61.1, 94919.0], [61.2, 94919.0], [61.3, 95043.0], [61.4, 95043.0], [61.5, 95381.0], [61.6, 95381.0], [61.7, 95412.0], [61.8, 95412.0], [61.9, 96173.0], [62.0, 96173.0], [62.1, 96173.0], [62.2, 96511.0], [62.3, 96511.0], [62.4, 96543.0], [62.5, 96543.0], [62.6, 97136.0], [62.7, 97136.0], [62.8, 97136.0], [62.9, 97145.0], [63.0, 97145.0], [63.1, 97153.0], [63.2, 97153.0], [63.3, 97176.0], [63.4, 97176.0], [63.5, 97176.0], [63.6, 97252.0], [63.7, 97252.0], [63.8, 97416.0], [63.9, 97416.0], [64.0, 97551.0], [64.1, 97551.0], [64.2, 97551.0], [64.3, 97567.0], [64.4, 97567.0], [64.5, 97609.0], [64.6, 97609.0], [64.7, 97627.0], [64.8, 97627.0], [64.9, 97691.0], [65.0, 97691.0], [65.1, 97691.0], [65.2, 97702.0], [65.3, 97702.0], [65.4, 97764.0], [65.5, 97764.0], [65.6, 97820.0], [65.7, 97820.0], [65.8, 97820.0], [65.9, 97989.0], [66.0, 97989.0], [66.1, 98017.0], [66.2, 98017.0], [66.3, 98053.0], [66.4, 98053.0], [66.5, 98053.0], [66.6, 98097.0], [66.7, 98097.0], [66.8, 98164.0], [66.9, 98164.0], [67.0, 98669.0], [67.1, 98669.0], [67.2, 98669.0], [67.3, 98674.0], [67.4, 98674.0], [67.5, 98674.0], [67.6, 98674.0], [67.7, 98683.0], [67.8, 98683.0], [67.9, 98735.0], [68.0, 98735.0], [68.1, 98735.0], [68.2, 98820.0], [68.3, 98820.0], [68.4, 98830.0], [68.5, 98830.0], [68.6, 99100.0], [68.7, 99100.0], [68.8, 99100.0], [68.9, 99120.0], [69.0, 99120.0], [69.1, 99162.0], [69.2, 99162.0], [69.3, 99260.0], [69.4, 99260.0], [69.5, 99260.0], [69.6, 99277.0], [69.7, 99277.0], [69.8, 99327.0], [69.9, 99327.0], [70.0, 99337.0], [70.1, 99337.0], [70.2, 99337.0], [70.3, 99473.0], [70.4, 99473.0], [70.5, 99484.0], [70.6, 99484.0], [70.7, 99702.0], [70.8, 99702.0], [70.9, 99702.0], [71.0, 99735.0], [71.1, 99735.0], [71.2, 99751.0], [71.3, 99751.0], [71.4, 99766.0], [71.5, 99766.0], [71.6, 99790.0], [71.7, 99790.0], [71.8, 99790.0], [71.9, 99870.0], [72.0, 99870.0], [72.1, 99931.0], [72.2, 99931.0], [72.3, 99954.0], [72.4, 99954.0], [72.5, 99954.0], [72.6, 99962.0], [72.7, 99962.0], [72.8, 99963.0], [72.9, 99963.0], [73.0, 100032.0], [73.1, 100032.0], [73.2, 100032.0], [73.3, 100099.0], [73.4, 100099.0], [73.5, 100106.0], [73.6, 100106.0], [73.7, 100183.0], [73.8, 100183.0], [73.9, 100183.0], [74.0, 100207.0], [74.1, 100207.0], [74.2, 100228.0], [74.3, 100228.0], [74.4, 100315.0], [74.5, 100315.0], [74.6, 100354.0], [74.7, 100354.0], [74.8, 100354.0], [74.9, 100401.0], [75.0, 100401.0], [75.1, 100415.0], [75.2, 100415.0], [75.3, 100464.0], [75.4, 100464.0], [75.5, 100464.0], [75.6, 100501.0], [75.7, 100501.0], [75.8, 100538.0], [75.9, 100538.0], [76.0, 100555.0], [76.1, 100555.0], [76.2, 100555.0], [76.3, 100582.0], [76.4, 100582.0], [76.5, 100596.0], [76.6, 100596.0], [76.7, 100603.0], [76.8, 100603.0], [76.9, 100603.0], [77.0, 100605.0], [77.1, 100605.0], [77.2, 100656.0], [77.3, 100656.0], [77.4, 100657.0], [77.5, 100657.0], [77.6, 100690.0], [77.7, 100690.0], [77.8, 100690.0], [77.9, 100713.0], [78.0, 100713.0], [78.1, 100723.0], [78.2, 100723.0], [78.3, 100796.0], [78.4, 100796.0], [78.5, 100796.0], [78.6, 100815.0], [78.7, 100815.0], [78.8, 100833.0], [78.9, 100833.0], [79.0, 100879.0], [79.1, 100879.0], [79.2, 100879.0], [79.3, 101121.0], [79.4, 101121.0], [79.5, 101129.0], [79.6, 101129.0], [79.7, 101280.0], [79.8, 101280.0], [79.9, 101280.0], [80.0, 101340.0], [80.1, 101340.0], [80.2, 101352.0], [80.3, 101352.0], [80.4, 101513.0], [80.5, 101513.0], [80.6, 101513.0], [80.7, 101602.0], [80.8, 101602.0], [80.9, 101619.0], [81.0, 101619.0], [81.1, 101656.0], [81.2, 101656.0], [81.3, 101691.0], [81.4, 101691.0], [81.5, 101691.0], [81.6, 101736.0], [81.7, 101736.0], [81.8, 101810.0], [81.9, 101810.0], [82.0, 102397.0], [82.1, 102397.0], [82.2, 102397.0], [82.3, 102454.0], [82.4, 102454.0], [82.5, 102605.0], [82.6, 102605.0], [82.7, 102910.0], [82.8, 102910.0], [82.9, 102910.0], [83.0, 103227.0], [83.1, 103227.0], [83.2, 103341.0], [83.3, 103341.0], [83.4, 103531.0], [83.5, 103531.0], [83.6, 103531.0], [83.7, 103630.0], [83.8, 103630.0], [83.9, 103964.0], [84.0, 103964.0], [84.1, 104805.0], [84.2, 104805.0], [84.3, 104844.0], [84.4, 104844.0], [84.5, 104844.0], [84.6, 104859.0], [84.7, 104859.0], [84.8, 104926.0], [84.9, 104926.0], [85.0, 105070.0], [85.1, 105070.0], [85.2, 105070.0], [85.3, 105279.0], [85.4, 105279.0], [85.5, 105302.0], [85.6, 105302.0], [85.7, 105681.0], [85.8, 105681.0], [85.9, 105681.0], [86.0, 105857.0], [86.1, 105857.0], [86.2, 105904.0], [86.3, 105904.0], [86.4, 105940.0], [86.5, 105940.0], [86.6, 105940.0], [86.7, 106459.0], [86.8, 106459.0], [86.9, 106609.0], [87.0, 106609.0], [87.1, 106632.0], [87.2, 106632.0], [87.3, 106866.0], [87.4, 106866.0], [87.5, 106866.0], [87.6, 106873.0], [87.7, 106873.0], [87.8, 107133.0], [87.9, 107133.0], [88.0, 107255.0], [88.1, 107255.0], [88.2, 107255.0], [88.3, 107296.0], [88.4, 107296.0], [88.5, 107381.0], [88.6, 107381.0], [88.7, 107429.0], [88.8, 107429.0], [88.9, 107429.0], [89.0, 107775.0], [89.1, 107775.0], [89.2, 107790.0], [89.3, 107790.0], [89.4, 107938.0], [89.5, 107938.0], [89.6, 107938.0], [89.7, 108169.0], [89.8, 108169.0], [89.9, 108234.0], [90.0, 108234.0], [90.1, 108317.0], [90.2, 108317.0], [90.3, 108317.0], [90.4, 108728.0], [90.5, 108728.0], [90.6, 109111.0], [90.7, 109111.0], [90.8, 109179.0], [90.9, 109179.0], [91.0, 109337.0], [91.1, 109337.0], [91.2, 109337.0], [91.3, 109444.0], [91.4, 109444.0], [91.5, 109518.0], [91.6, 109518.0], [91.7, 110089.0], [91.8, 110089.0], [91.9, 110089.0], [92.0, 110449.0], [92.1, 110449.0], [92.2, 110669.0], [92.3, 110669.0], [92.4, 110856.0], [92.5, 110856.0], [92.6, 110856.0], [92.7, 113141.0], [92.8, 113141.0], [92.9, 114899.0], [93.0, 114899.0], [93.1, 115572.0], [93.2, 115572.0], [93.3, 115572.0], [93.4, 116042.0], [93.5, 116042.0], [93.6, 116145.0], [93.7, 116145.0], [93.8, 118127.0], [93.9, 118127.0], [94.0, 118668.0], [94.1, 118668.0], [94.2, 118668.0], [94.3, 118840.0], [94.4, 118840.0], [94.5, 119211.0], [94.6, 119211.0], [94.7, 119576.0], [94.8, 119576.0], [94.9, 119576.0], [95.0, 120166.0], [95.1, 120166.0], [95.2, 120412.0], [95.3, 120412.0], [95.4, 120845.0], [95.5, 120845.0], [95.6, 120845.0], [95.7, 120918.0], [95.8, 120918.0], [95.9, 121760.0], [96.0, 121760.0], [96.1, 121845.0], [96.2, 121845.0], [96.3, 121845.0], [96.4, 122167.0], [96.5, 122167.0], [96.6, 122226.0], [96.7, 122226.0], [96.8, 122836.0], [96.9, 122836.0], [97.0, 122919.0], [97.1, 122919.0], [97.2, 122919.0], [97.3, 123138.0], [97.4, 123138.0], [97.5, 123615.0], [97.6, 123615.0], [97.7, 124189.0], [97.8, 124189.0], [97.9, 124189.0], [98.0, 124329.0], [98.1, 124329.0], [98.2, 124499.0], [98.3, 124499.0], [98.4, 124826.0], [98.5, 124826.0], [98.6, 124826.0], [98.7, 125089.0], [98.8, 125089.0], [98.9, 125507.0], [99.0, 125507.0], [99.1, 125523.0], [99.2, 125523.0], [99.3, 125523.0], [99.4, 126557.0], [99.5, 126557.0], [99.6, 127024.0], [99.7, 127024.0], [99.8, 127598.0], [99.9, 127598.0], [100.0, 127598.0]], "isOverall": false, "label": "Dashboard-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 47.0, "series": [{"data": [[67500.0, 1.0], [66700.0, 1.0], [72300.0, 2.0], [77900.0, 1.0], [81100.0, 1.0], [84300.0, 3.0], [85100.0, 2.0], [83500.0, 1.0], [88300.0, 1.0], [89100.0, 2.0], [91500.0, 1.0], [97900.0, 1.0], [96300.0, 1.0], [95500.0, 1.0], [94700.0, 1.0], [105100.0, 1.0], [34500.0, 6.0], [34100.0, 9.0], [33700.0, 1.0], [34900.0, 1.0], [36100.0, 1.0], [37300.0, 3.0], [36900.0, 2.0], [38500.0, 2.0], [41700.0, 1.0], [42500.0, 1.0], [44100.0, 1.0], [46100.0, 1.0], [46500.0, 1.0], [48900.0, 2.0], [50900.0, 1.0], [50500.0, 1.0], [51700.0, 1.0], [51300.0, 1.0], [56100.0, 1.0], [55300.0, 2.0], [58900.0, 3.0], [57700.0, 1.0], [60900.0, 6.0], [60100.0, 1.0], [62500.0, 1.0], [61700.0, 1.0], [62100.0, 1.0], [64500.0, 3.0], [64900.0, 1.0], [67400.0, 1.0], [68200.0, 1.0], [71400.0, 1.0], [73000.0, 2.0], [77000.0, 1.0], [80200.0, 1.0], [85000.0, 1.0], [85800.0, 1.0], [88200.0, 1.0], [89000.0, 4.0], [87400.0, 2.0], [92200.0, 1.0], [97000.0, 1.0], [98600.0, 1.0], [99400.0, 1.0], [1900.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [68100.0, 1.0], [72900.0, 1.0], [76900.0, 6.0], [84100.0, 3.0], [84900.0, 1.0], [5500.0, 4.0], [90500.0, 1.0], [91300.0, 1.0], [93700.0, 2.0], [5900.0, 3.0], [96100.0, 1.0], [94500.0, 2.0], [104100.0, 1.0], [7200.0, 4.0], [7400.0, 1.0], [7700.0, 1.0], [7900.0, 1.0], [8400.0, 1.0], [8700.0, 1.0], [10400.0, 7.0], [12200.0, 1.0], [12300.0, 7.0], [12400.0, 1.0], [12600.0, 1.0], [12700.0, 1.0], [12800.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [13700.0, 1.0], [15000.0, 6.0], [15200.0, 1.0], [15600.0, 1.0], [16200.0, 1.0], [16400.0, 3.0], [17400.0, 1.0], [18200.0, 1.0], [19400.0, 2.0], [18600.0, 1.0], [19600.0, 1.0], [19800.0, 2.0], [21200.0, 1.0], [21800.0, 1.0], [23000.0, 1.0], [23400.0, 1.0], [22800.0, 1.0], [23200.0, 1.0], [24400.0, 1.0], [23600.0, 1.0], [24200.0, 2.0], [25200.0, 1.0], [25400.0, 1.0], [26600.0, 1.0], [26800.0, 1.0], [27000.0, 1.0], [27400.0, 1.0], [27200.0, 1.0], [28400.0, 1.0], [29200.0, 1.0], [30600.0, 1.0], [31000.0, 2.0], [30800.0, 1.0], [31200.0, 1.0], [31400.0, 1.0], [32000.0, 1.0], [33600.0, 2.0], [35200.0, 1.0], [35600.0, 1.0], [36000.0, 1.0], [37600.0, 1.0], [39200.0, 1.0], [40400.0, 3.0], [41600.0, 2.0], [43600.0, 1.0], [45600.0, 2.0], [48000.0, 2.0], [48400.0, 1.0], [47200.0, 1.0], [48800.0, 1.0], [55200.0, 7.0], [54400.0, 1.0], [56800.0, 1.0], [58800.0, 1.0], [58000.0, 1.0], [61200.0, 1.0], [62000.0, 1.0], [64000.0, 2.0], [65600.0, 1.0], [68800.0, 1.0], [76000.0, 2.0], [80800.0, 1.0], [85600.0, 1.0], [86400.0, 1.0], [88000.0, 6.0], [97600.0, 1.0], [98400.0, 1.0], [68700.0, 1.0], [72700.0, 2.0], [79900.0, 1.0], [81500.0, 1.0], [83900.0, 3.0], [87100.0, 3.0], [96700.0, 1.0], [97500.0, 2.0], [98300.0, 1.0], [34700.0, 1.0], [37900.0, 1.0], [41500.0, 1.0], [41100.0, 1.0], [44300.0, 2.0], [44700.0, 1.0], [46700.0, 1.0], [48300.0, 1.0], [51100.0, 1.0], [51500.0, 1.0], [52700.0, 1.0], [54300.0, 8.0], [53500.0, 1.0], [55900.0, 1.0], [59100.0, 1.0], [65100.0, 1.0], [66200.0, 1.0], [79000.0, 1.0], [79800.0, 2.0], [83000.0, 1.0], [83800.0, 2.0], [84600.0, 1.0], [82200.0, 1.0], [87000.0, 1.0], [95800.0, 2.0], [95000.0, 1.0], [96600.0, 1.0], [97400.0, 2.0], [99800.0, 1.0], [66100.0, 1.0], [68500.0, 1.0], [73300.0, 2.0], [78100.0, 1.0], [82100.0, 1.0], [82900.0, 1.0], [85300.0, 1.0], [86900.0, 2.0], [87700.0, 1.0], [89300.0, 1.0], [91700.0, 8.0], [90900.0, 1.0], [96500.0, 2.0], [94900.0, 1.0], [98100.0, 1.0], [98900.0, 2.0], [101300.0, 1.0], [16700.0, 1.0], [17100.0, 2.0], [16900.0, 1.0], [16500.0, 1.0], [17500.0, 1.0], [18300.0, 1.0], [18500.0, 1.0], [19500.0, 1.0], [19700.0, 2.0], [19900.0, 1.0], [20700.0, 1.0], [21100.0, 1.0], [21900.0, 3.0], [21700.0, 1.0], [22100.0, 3.0], [23100.0, 1.0], [23500.0, 2.0], [22700.0, 1.0], [24500.0, 2.0], [23700.0, 1.0], [25100.0, 2.0], [25500.0, 1.0], [26300.0, 2.0], [26500.0, 2.0], [27100.0, 1.0], [27500.0, 1.0], [27700.0, 1.0], [28100.0, 1.0], [28500.0, 1.0], [29100.0, 1.0], [30700.0, 4.0], [31100.0, 2.0], [31700.0, 1.0], [31300.0, 1.0], [31900.0, 1.0], [34200.0, 1.0], [35000.0, 1.0], [35800.0, 1.0], [37800.0, 1.0], [41800.0, 2.0], [43800.0, 1.0], [47400.0, 2.0], [47800.0, 1.0], [48600.0, 1.0], [49000.0, 1.0], [52200.0, 1.0], [54600.0, 1.0], [57000.0, 1.0], [57800.0, 1.0], [61000.0, 1.0], [63400.0, 2.0], [64600.0, 1.0], [65000.0, 2.0], [67600.0, 2.0], [70800.0, 1.0], [74800.0, 1.0], [81200.0, 2.0], [79600.0, 1.0], [80400.0, 1.0], [88400.0, 1.0], [87600.0, 1.0], [90800.0, 4.0], [92400.0, 1.0], [94000.0, 1.0], [98800.0, 1.0], [100400.0, 1.0]], "isOverall": false, "label": "Dashboard-0", "isController": false}, {"data": [[0.0, 31.0], [135200.0, 1.0], [136800.0, 1.0], [140000.0, 1.0], [141600.0, 1.0], [146400.0, 1.0], [152800.0, 1.0], [154400.0, 1.0], [156000.0, 1.0], [157600.0, 1.0], [159200.0, 1.0], [164000.0, 1.0], [172000.0, 1.0], [176800.0, 4.0], [189600.0, 1.0], [194400.0, 3.0], [191200.0, 1.0], [196000.0, 1.0], [199200.0, 1.0], [132900.0, 1.0], [136100.0, 1.0], [139300.0, 1.0], [145700.0, 1.0], [148900.0, 1.0], [150500.0, 2.0], [161700.0, 1.0], [172900.0, 2.0], [176100.0, 2.0], [188900.0, 1.0], [190500.0, 1.0], [193700.0, 1.0], [100300.0, 1.0], [108300.0, 1.0], [109100.0, 1.0], [109900.0, 1.0], [112300.0, 1.0], [113900.0, 1.0], [114700.0, 1.0], [120300.0, 1.0], [121900.0, 1.0], [129100.0, 1.0], [133800.0, 1.0], [140200.0, 1.0], [151400.0, 1.0], [153000.0, 1.0], [157800.0, 2.0], [175400.0, 3.0], [177000.0, 1.0], [180200.0, 1.0], [188200.0, 2.0], [186600.0, 1.0], [191400.0, 2.0], [196200.0, 1.0], [197800.0, 1.0], [100.0, 1.0], [134700.0, 2.0], [136300.0, 1.0], [150700.0, 1.0], [161900.0, 1.0], [166700.0, 1.0], [177900.0, 1.0], [179500.0, 2.0], [184300.0, 1.0], [48500.0, 1.0], [192300.0, 1.0], [195500.0, 1.0], [197100.0, 1.0], [198700.0, 1.0], [101000.0, 1.0], [102600.0, 1.0], [103400.0, 1.0], [109000.0, 1.0], [110600.0, 1.0], [113800.0, 2.0], [115400.0, 1.0], [116200.0, 1.0], [117800.0, 1.0], [118600.0, 1.0], [119400.0, 2.0], [120200.0, 1.0], [121800.0, 1.0], [130600.0, 1.0], [127400.0, 1.0], [135600.0, 1.0], [137200.0, 1.0], [143600.0, 1.0], [145200.0, 1.0], [146800.0, 1.0], [150000.0, 1.0], [151600.0, 1.0], [148400.0, 1.0], [153200.0, 1.0], [166000.0, 1.0], [170800.0, 1.0], [169200.0, 1.0], [175600.0, 2.0], [177200.0, 1.0], [178800.0, 1.0], [185200.0, 1.0], [186800.0, 2.0], [188400.0, 1.0], [133300.0, 1.0], [136500.0, 1.0], [149300.0, 2.0], [150900.0, 3.0], [147700.0, 2.0], [157300.0, 2.0], [165300.0, 1.0], [166900.0, 1.0], [176500.0, 1.0], [178100.0, 1.0], [174900.0, 1.0], [192500.0, 1.0], [189300.0, 1.0], [194100.0, 1.0], [3600.0, 1.0], [3700.0, 3.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 2.0], [4100.0, 1.0], [68100.0, 1.0], [4400.0, 2.0], [4600.0, 7.0], [4700.0, 1.0], [4800.0, 4.0], [4900.0, 3.0], [5000.0, 1.0], [5500.0, 4.0], [5900.0, 3.0], [101700.0, 1.0], [102500.0, 1.0], [104900.0, 1.0], [6700.0, 2.0], [106500.0, 1.0], [108900.0, 2.0], [112100.0, 1.0], [112900.0, 1.0], [114500.0, 1.0], [7200.0, 4.0], [7400.0, 1.0], [115300.0, 1.0], [116100.0, 1.0], [117700.0, 2.0], [7600.0, 2.0], [122500.0, 1.0], [120900.0, 1.0], [7700.0, 2.0], [7800.0, 1.0], [7900.0, 1.0], [124900.0, 1.0], [125700.0, 1.0], [128900.0, 1.0], [129700.0, 1.0], [8400.0, 1.0], [8700.0, 1.0], [134200.0, 1.0], [137400.0, 1.0], [151800.0, 1.0], [156600.0, 1.0], [10400.0, 7.0], [167800.0, 1.0], [171000.0, 2.0], [175800.0, 1.0], [177400.0, 2.0], [179000.0, 1.0], [12200.0, 1.0], [12300.0, 7.0], [12400.0, 1.0], [12600.0, 1.0], [12700.0, 1.0], [12800.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [15000.0, 6.0], [15600.0, 1.0], [138300.0, 1.0], [149500.0, 1.0], [151100.0, 2.0], [152700.0, 1.0], [154300.0, 1.0], [155900.0, 2.0], [160700.0, 1.0], [157500.0, 1.0], [165500.0, 1.0], [163900.0, 1.0], [167100.0, 1.0], [170300.0, 1.0], [171900.0, 1.0], [173500.0, 1.0], [176700.0, 1.0], [189500.0, 1.0], [191100.0, 1.0], [61600.0, 1.0], [100800.0, 1.0], [103200.0, 1.0], [108000.0, 1.0], [109600.0, 1.0], [110400.0, 1.0], [111200.0, 1.0], [112800.0, 1.0], [118400.0, 1.0], [120000.0, 2.0], [120800.0, 1.0], [121600.0, 1.0], [124000.0, 1.0], [125600.0, 1.0], [127200.0, 1.0], [128800.0, 1.0], [130400.0, 1.0], [134400.0, 1.0], [139200.0, 1.0], [147200.0, 1.0], [150400.0, 2.0], [152000.0, 2.0], [158400.0, 1.0], [166400.0, 1.0], [174400.0, 2.0], [176000.0, 1.0], [182400.0, 2.0], [188800.0, 1.0], [190400.0, 1.0], [195200.0, 1.0], [133700.0, 1.0], [135300.0, 1.0], [140100.0, 1.0], [151300.0, 1.0], [159300.0, 1.0], [178500.0, 1.0], [175300.0, 1.0], [188100.0, 1.0], [189700.0, 1.0], [194500.0, 1.0], [197700.0, 1.0], [99100.0, 2.0], [100700.0, 1.0], [102300.0, 1.0], [107100.0, 3.0], [111100.0, 1.0], [112700.0, 1.0], [111900.0, 1.0], [115900.0, 1.0], [116700.0, 1.0], [125500.0, 1.0], [124700.0, 1.0], [127100.0, 1.0], [131400.0, 2.0], [133000.0, 2.0], [134600.0, 1.0], [139400.0, 1.0], [142600.0, 2.0], [153800.0, 1.0], [155400.0, 1.0], [165000.0, 1.0], [166600.0, 2.0], [171400.0, 1.0], [176200.0, 1.0], [174600.0, 1.0], [179400.0, 1.0], [189000.0, 1.0], [192200.0, 1.0], [197000.0, 1.0], [140300.0, 1.0], [153100.0, 1.0], [169100.0, 1.0], [177100.0, 1.0], [173900.0, 1.0], [175500.0, 1.0], [180300.0, 1.0], [185100.0, 1.0], [189900.0, 1.0], [197900.0, 1.0], [79000.0, 1.0], [99000.0, 1.0], [99800.0, 1.0], [106200.0, 1.0], [107800.0, 1.0], [109400.0, 2.0], [110200.0, 1.0], [111800.0, 3.0], [114200.0, 1.0], [118200.0, 1.0], [115800.0, 1.0], [120600.0, 1.0], [121400.0, 2.0], [126200.0, 2.0], [125400.0, 2.0], [128600.0, 1.0], [138000.0, 1.0], [139600.0, 1.0], [146000.0, 1.0], [149200.0, 1.0], [155600.0, 1.0], [166800.0, 2.0], [173200.0, 2.0], [174800.0, 1.0], [187600.0, 1.0], [190800.0, 1.0], [195600.0, 1.0], [137300.0, 1.0], [135700.0, 1.0], [140500.0, 1.0], [153300.0, 2.0], [175700.0, 1.0], [188500.0, 1.0], [194900.0, 1.0], [102100.0, 1.0], [106100.0, 1.0], [107700.0, 2.0], [114100.0, 2.0], [110900.0, 1.0], [111700.0, 1.0], [112500.0, 1.0], [118900.0, 1.0], [122100.0, 1.0], [122900.0, 1.0], [126900.0, 3.0], [124500.0, 1.0], [131800.0, 1.0], [135000.0, 1.0], [136600.0, 2.0], [141400.0, 1.0], [149400.0, 4.0], [165400.0, 2.0], [178200.0, 1.0], [184600.0, 1.0], [186200.0, 1.0], [191000.0, 1.0], [197400.0, 1.0], [132700.0, 1.0], [145500.0, 1.0], [150300.0, 1.0], [151900.0, 1.0], [156700.0, 1.0], [158300.0, 2.0], [159900.0, 1.0], [174300.0, 1.0], [177500.0, 1.0], [179100.0, 1.0], [175900.0, 1.0], [180700.0, 1.0], [190300.0, 1.0], [188700.0, 1.0], [199900.0, 1.0], [98800.0, 1.0], [99600.0, 2.0], [102000.0, 1.0], [104400.0, 1.0], [105200.0, 1.0], [106800.0, 1.0], [108400.0, 1.0], [110000.0, 1.0], [117200.0, 2.0], [118800.0, 1.0], [120400.0, 1.0], [124400.0, 2.0], [126800.0, 1.0], [129200.0, 1.0]], "isOverall": false, "label": "Dashboard", "isController": false}, {"data": [[0.0, 47.0], [65900.0, 1.0], [67500.0, 1.0], [69100.0, 1.0], [69900.0, 1.0], [71500.0, 1.0], [72300.0, 1.0], [73100.0, 2.0], [77100.0, 3.0], [76300.0, 2.0], [75500.0, 2.0], [79500.0, 3.0], [78700.0, 3.0], [77900.0, 2.0], [83500.0, 2.0], [84300.0, 1.0], [88300.0, 1.0], [93100.0, 1.0], [93900.0, 1.0], [94700.0, 1.0], [97100.0, 4.0], [97900.0, 1.0], [101100.0, 2.0], [98700.0, 1.0], [100300.0, 2.0], [103500.0, 1.0], [105900.0, 2.0], [108300.0, 1.0], [109100.0, 2.0], [113100.0, 1.0], [115500.0, 1.0], [119500.0, 1.0], [124300.0, 1.0], [127500.0, 1.0], [57700.0, 1.0], [62500.0, 2.0], [62900.0, 1.0], [65300.0, 1.0], [68200.0, 1.0], [71400.0, 1.0], [73000.0, 1.0], [72200.0, 1.0], [77000.0, 3.0], [77800.0, 2.0], [75400.0, 2.0], [73800.0, 1.0], [74600.0, 1.0], [76200.0, 1.0], [79400.0, 5.0], [78600.0, 1.0], [82600.0, 1.0], [84200.0, 2.0], [83400.0, 1.0], [95400.0, 1.0], [97800.0, 1.0], [101800.0, 1.0], [98600.0, 4.0], [99400.0, 2.0], [100200.0, 2.0], [102600.0, 1.0], [105000.0, 1.0], [105800.0, 1.0], [107400.0, 1.0], [108200.0, 1.0], [106600.0, 2.0], [110600.0, 1.0], [118600.0, 1.0], [121800.0, 1.0], [125000.0, 1.0], [68900.0, 2.0], [71300.0, 1.0], [76100.0, 3.0], [76900.0, 3.0], [77700.0, 3.0], [75300.0, 1.0], [80100.0, 1.0], [79300.0, 3.0], [78500.0, 1.0], [84100.0, 2.0], [82500.0, 2.0], [88900.0, 1.0], [92900.0, 1.0], [93700.0, 1.0], [94500.0, 1.0], [95300.0, 1.0], [96100.0, 1.0], [97700.0, 2.0], [101700.0, 1.0], [99300.0, 2.0], [100100.0, 2.0], [104900.0, 1.0], [103300.0, 1.0], [107300.0, 1.0], [108100.0, 1.0], [116100.0, 1.0], [120100.0, 1.0], [120900.0, 1.0], [121700.0, 1.0], [124100.0, 1.0], [126500.0, 1.0], [44800.0, 1.0], [63200.0, 1.0], [65200.0, 2.0], [65600.0, 1.0], [75200.0, 1.0], [76800.0, 2.0], [77600.0, 1.0], [78400.0, 1.0], [81600.0, 2.0], [80000.0, 1.0], [79200.0, 2.0], [82400.0, 1.0], [84800.0, 1.0], [88000.0, 2.0], [88800.0, 1.0], [93600.0, 1.0], [97600.0, 3.0], [99200.0, 2.0], [100800.0, 3.0], [101600.0, 4.0], [100000.0, 2.0], [102400.0, 1.0], [103200.0, 1.0], [104800.0, 3.0], [106400.0, 1.0], [105600.0, 1.0], [107200.0, 2.0], [110400.0, 1.0], [116000.0, 1.0], [119200.0, 1.0], [120800.0, 1.0], [124800.0, 1.0], [67900.0, 1.0], [71100.0, 2.0], [73500.0, 2.0], [75900.0, 1.0], [75100.0, 3.0], [78300.0, 3.0], [79900.0, 2.0], [80700.0, 1.0], [79100.0, 3.0], [88700.0, 5.0], [97500.0, 2.0], [102300.0, 1.0], [99900.0, 4.0], [100700.0, 3.0], [101500.0, 1.0], [99100.0, 3.0], [103900.0, 1.0], [107100.0, 1.0], [109500.0, 1.0], [107900.0, 1.0], [108700.0, 1.0], [123100.0, 1.0], [125500.0, 2.0], [63100.0, 1.0], [71000.0, 1.0], [70200.0, 3.0], [72600.0, 3.0], [73400.0, 1.0], [71800.0, 1.0], [75800.0, 3.0], [77400.0, 1.0], [75000.0, 1.0], [76600.0, 1.0], [79800.0, 1.0], [78200.0, 2.0], [79000.0, 1.0], [81400.0, 1.0], [87800.0, 3.0], [88600.0, 2.0], [95000.0, 1.0], [97400.0, 1.0], [100600.0, 5.0], [99800.0, 1.0], [109400.0, 1.0], [122200.0, 1.0], [127000.0, 1.0], [66100.0, 1.0], [69300.0, 2.0], [70100.0, 1.0], [70900.0, 1.0], [71700.0, 2.0], [72500.0, 1.0], [73300.0, 1.0], [75700.0, 3.0], [77300.0, 2.0], [74900.0, 1.0], [80500.0, 1.0], [79700.0, 1.0], [78100.0, 3.0], [81300.0, 1.0], [82100.0, 1.0], [85300.0, 1.0], [87700.0, 1.0], [88500.0, 1.0], [94900.0, 1.0], [96500.0, 2.0], [98100.0, 1.0], [100500.0, 5.0], [99700.0, 5.0], [101300.0, 2.0], [102900.0, 1.0], [105300.0, 1.0], [107700.0, 2.0], [109300.0, 1.0], [118100.0, 1.0], [122100.0, 1.0], [122900.0, 1.0], [63800.0, 2.0], [65000.0, 1.0], [64600.0, 1.0], [66000.0, 1.0], [70000.0, 1.0], [74800.0, 1.0], [75600.0, 3.0], [76400.0, 4.0], [77200.0, 1.0], [74000.0, 2.0], [78800.0, 1.0], [78000.0, 2.0], [81200.0, 2.0], [80400.0, 2.0], [79600.0, 3.0], [83600.0, 2.0], [84400.0, 3.0], [82000.0, 2.0], [82800.0, 1.0], [86800.0, 1.0], [94800.0, 1.0], [97200.0, 1.0], [98000.0, 3.0], [98800.0, 2.0], [101200.0, 1.0], [100400.0, 3.0], [103600.0, 1.0], [105200.0, 1.0], [106800.0, 2.0], [110000.0, 1.0], [110800.0, 1.0], [114800.0, 1.0], [120400.0, 1.0], [118800.0, 1.0], [122800.0, 1.0], [123600.0, 1.0], [124400.0, 1.0]], "isOverall": false, "label": "Dashboard-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 199900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 161.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1205.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1205.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 161.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 93.5, "minX": 1.7154063E12, "maxY": 402.9475524475525, "series": [{"data": [[1.71540648E12, 93.5], [1.71540636E12, 196.56349206349202], [1.71540642E12, 249.8157894736843], [1.7154063E12, 402.9475524475525]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.0, "maxY": 199929.0, "series": [{"data": [[2.0, 98328.0], [6.0, 94019.0], [8.0, 98137.0], [12.0, 94721.0], [16.0, 97401.0], [19.0, 97568.0], [20.0, 97434.0], [22.0, 96679.0], [24.0, 96720.0], [25.0, 95574.0], [28.0, 96553.0], [37.0, 95042.0], [38.0, 95868.0], [43.0, 95849.0], [44.0, 91516.0], [49.0, 93711.0], [48.0, 93715.0], [51.0, 94988.0], [50.0, 94584.0], [59.0, 89378.0], [58.0, 94586.0], [65.0, 92413.0], [69.0, 87769.0], [76.0, 91308.0], [82.0, 92209.0], [80.0, 90547.0], [86.0, 90901.0], [90.0, 89040.0], [89.0, 90893.0], [94.0, 89031.0], [93.0, 91709.0], [99.0, 87404.0], [98.0, 91750.0], [97.0, 89076.0], [96.0, 91713.0], [101.0, 89145.0], [100.0, 91729.0], [107.0, 90880.0], [106.0, 91723.0], [105.0, 91734.0], [104.0, 87414.0], [114.0, 91749.0], [118.0, 89137.0], [116.0, 90843.0], [123.0, 89059.0], [121.0, 90855.0], [124.0, 91756.0], [135.0, 87160.0], [134.0, 87160.0], [132.0, 88213.0], [131.0, 85693.0], [130.0, 88499.0], [129.0, 88348.0], [128.0, 87672.0], [140.0, 52758.0], [137.0, 88070.0], [145.0, 55393.0], [155.0, 55907.0], [166.0, 105181.0], [175.0, 53589.0], [172.0, 54694.0], [171.0, 101367.0], [183.0, 54403.0], [181.0, 99825.0], [180.0, 104181.0], [179.0, 100401.0], [191.0, 54365.0], [190.0, 55227.0], [189.0, 54365.0], [188.0, 98962.0], [186.0, 98998.0], [185.0, 99424.0], [184.0, 54367.0], [197.0, 96561.0], [192.0, 97020.0], [207.0, 55248.0], [205.0, 98839.0], [204.0, 96196.0], [203.0, 54365.0], [201.0, 96344.0], [200.0, 54366.0], [215.0, 98658.0], [214.0, 55268.0], [213.0, 97621.0], [209.0, 54365.0], [222.0, 55279.0], [221.0, 54365.0], [220.0, 98485.0], [217.0, 97926.0], [216.0, 51388.0], [231.0, 55283.0], [230.0, 88038.0], [228.0, 87140.0], [226.0, 88040.0], [225.0, 88047.0], [224.0, 88045.0], [238.0, 84113.0], [237.0, 86490.0], [236.0, 87004.0], [235.0, 86960.0], [234.0, 86988.0], [233.0, 88053.0], [245.0, 55270.0], [243.0, 85845.0], [242.0, 82232.0], [254.0, 54363.0], [253.0, 85391.0], [251.0, 83989.0], [250.0, 55222.0], [271.0, 84997.0], [267.0, 50589.0], [265.0, 85069.0], [261.0, 48334.0], [258.0, 85144.0], [257.0, 83586.0], [285.0, 51174.0], [287.0, 85115.0], [284.0, 84341.0], [283.0, 82940.0], [282.0, 46744.0], [281.0, 51729.0], [277.0, 50998.0], [276.0, 81252.0], [273.0, 52202.0], [300.0, 51577.0], [297.0, 84620.0], [295.0, 83890.0], [294.0, 84303.0], [319.0, 84137.0], [317.0, 83950.0], [312.0, 83842.0], [308.0, 80284.0], [305.0, 80429.0], [323.0, 48048.0], [321.0, 81189.0], [347.0, 84376.0], [344.0, 83056.0], [340.0, 79655.0], [338.0, 79868.0], [336.0, 48828.0], [366.0, 47231.0], [365.0, 82183.0], [364.0, 49058.0], [363.0, 79838.0], [362.0, 48917.0], [357.0, 81530.0], [379.0, 47884.0], [378.0, 79962.0], [377.0, 81202.0], [376.0, 48645.0], [371.0, 48408.0], [370.0, 80803.0], [399.0, 47451.0], [395.0, 77908.0], [394.0, 78168.0], [393.0, 46562.0], [390.0, 79049.0], [389.0, 84181.0], [388.0, 48066.0], [386.0, 83911.0], [385.0, 48975.0], [414.0, 76092.0], [412.0, 74822.0], [411.0, 41863.0], [409.0, 76954.0], [403.0, 47426.0], [402.0, 43638.0], [400.0, 42578.0], [416.0, 72785.0], [444.0, 76982.0], [443.0, 70813.0], [439.0, 77006.0], [438.0, 72743.0], [437.0, 76951.0], [436.0, 76946.0], [461.0, 76994.0], [460.0, 76967.0], [459.0, 68825.0], [457.0, 73300.0], [456.0, 46113.0], [455.0, 45604.0], [453.0, 68210.0], [452.0, 41863.0], [450.0, 73335.0], [449.0, 40403.0], [477.0, 41179.0], [476.0, 76093.0], [475.0, 73029.0], [474.0, 68791.0], [472.0, 43859.0], [471.0, 44117.0], [469.0, 68191.0], [468.0, 41736.0], [465.0, 41601.0], [464.0, 44321.0], [495.0, 40465.0], [491.0, 40418.0], [489.0, 41619.0], [488.0, 44356.0], [486.0, 41594.0], [484.0, 73011.0], [483.0, 72970.0], [482.0, 44746.0], [480.0, 45603.0], [500.0, 71465.0], [542.0, 38516.0], [541.0, 39206.0], [538.0, 67615.0], [536.0, 67490.0], [533.0, 68572.0], [524.0, 72366.0], [523.0, 72382.0], [575.0, 65090.0], [569.0, 64004.0], [564.0, 66105.0], [563.0, 37664.0], [562.0, 38569.0], [558.0, 66238.0], [555.0, 62198.0], [553.0, 67563.0], [551.0, 67621.0], [550.0, 66717.0], [605.0, 64697.0], [607.0, 36917.0], [602.0, 64062.0], [601.0, 65064.0], [599.0, 65186.0], [597.0, 34199.0], [594.0, 63486.0], [592.0, 37331.0], [587.0, 64972.0], [581.0, 37330.0], [579.0, 36932.0], [578.0, 37911.0], [586.0, 65634.0], [632.0, 36125.0], [635.0, 63409.0], [637.0, 35645.0], [634.0, 35816.0], [627.0, 64533.0], [626.0, 62022.0], [620.0, 64598.0], [612.0, 37831.0], [619.0, 36088.0], [618.0, 64538.0], [617.0, 37334.0], [668.0, 23218.0], [671.0, 22115.0], [667.0, 61251.0], [665.0, 19993.0], [664.0, 32092.0], [662.0, 57865.0], [661.0, 57736.0], [656.0, 62551.0], [650.0, 35278.0], [642.0, 61706.0], [702.0, 21936.0], [690.0, 57004.0], [689.0, 19463.0], [688.0, 22749.0], [686.0, 61016.0], [681.0, 60966.0], [677.0, 21936.0], [676.0, 22856.0], [733.0, 21129.0], [730.0, 21742.0], [710.0, 60980.0], [708.0, 60955.0], [725.0, 60925.0], [724.0, 22152.0], [723.0, 22111.0], [717.0, 60995.0], [716.0, 60928.0], [715.0, 60138.0], [712.0, 59146.0], [765.0, 58860.0], [758.0, 58036.0], [756.0, 21234.0], [753.0, 20787.0], [742.0, 18600.0], [741.0, 55366.0], [740.0, 21803.0], [739.0, 21961.0], [798.0, 34222.0], [799.0, 34999.0], [793.0, 56827.0], [791.0, 19700.0], [789.0, 19680.0], [785.0, 19805.0], [784.0, 56142.0], [780.0, 19761.0], [770.0, 19897.0], [774.0, 58900.0], [771.0, 58910.0], [775.0, 58936.0], [829.0, 18536.0], [830.0, 34173.0], [827.0, 16273.0], [825.0, 34166.0], [824.0, 19406.0], [806.0, 19523.0], [805.0, 34715.0], [802.0, 34154.0], [801.0, 31357.0], [800.0, 35048.0], [819.0, 33735.0], [818.0, 34161.0], [817.0, 34163.0], [815.0, 34160.0], [809.0, 34164.0], [856.0, 31060.0], [860.0, 34592.0], [862.0, 34562.0], [857.0, 34544.0], [855.0, 18210.0], [849.0, 33671.0], [845.0, 15274.0], [836.0, 33692.0], [842.0, 34181.0], [841.0, 18376.0], [891.0, 17169.0], [893.0, 31153.0], [888.0, 16994.0], [871.0, 31101.0], [866.0, 34567.0], [865.0, 34514.0], [886.0, 17148.0], [885.0, 31409.0], [883.0, 17433.0], [882.0, 31707.0], [879.0, 31967.0], [878.0, 16549.0], [877.0, 34576.0], [876.0, 17548.0], [914.0, 30711.0], [927.0, 29151.0], [926.0, 29263.0], [923.0, 31079.0], [921.0, 30725.0], [910.0, 16463.0], [903.0, 30816.0], [902.0, 13755.0], [900.0, 30678.0], [896.0, 31223.0], [909.0, 16763.0], [919.0, 30701.0], [918.0, 30714.0], [915.0, 16470.0], [913.0, 16464.0], [945.0, 27406.0], [956.0, 26852.0], [934.0, 27292.0], [932.0, 28410.0], [950.0, 27145.0], [949.0, 26595.0], [946.0, 27041.0], [941.0, 27593.0], [940.0, 27769.0], [939.0, 28170.0], [937.0, 28536.0], [976.0, 26306.0], [989.0, 25144.0], [983.0, 25160.0], [982.0, 24577.0], [981.0, 25245.0], [974.0, 25459.0], [973.0, 25559.0], [972.0, 26332.0], [967.0, 23540.0], [966.0, 23518.0], [962.0, 26586.0], [961.0, 26606.0], [1019.0, 1952.0], [1016.0, 4121.0], [999.0, 24236.0], [993.0, 23760.0], [1014.0, 23049.0], [1013.0, 23420.0], [1011.0, 23164.0], [1010.0, 24511.0], [1008.0, 24493.0], [1005.0, 23617.0], [1004.0, 24231.0], [1066.0, 13186.0], [1075.0, 12442.0], [1072.0, 12690.0], [1037.0, 15048.0], [1030.0, 15661.0], [1029.0, 3727.0], [1027.0, 3941.0], [1070.0, 12751.0], [1069.0, 12814.0], [1067.0, 12967.0], [1062.0, 13449.0], [1060.0, 13464.0], [1055.0, 13865.0], [1054.0, 15020.5], [1046.0, 15010.0], [1043.0, 15021.0], [1130.0, 7772.0], [1128.0, 7927.0], [1124.0, 8423.0], [1121.0, 8722.0], [1100.0, 12307.0], [1117.0, 12307.5], [1212.0, 5576.0], [1202.0, 5564.0], [1186.0, 5569.0], [1185.0, 5569.0], [1168.0, 5917.0], [1166.0, 5917.0], [1164.0, 5943.0], [1229.0, 7213.0], [1216.0, 7226.333333333333], [1219.0, 7418.0], [1454.0, 12309.0], [1452.0, 12304.0], [1421.0, 12320.0], [1418.0, 12339.5], [1596.0, 10422.0], [1587.0, 10445.0], [1606.0, 10495.0], [1609.0, 10427.25], [1.0, 97565.0]], "isOverall": false, "label": "Dashboard-0", "isController": false}, {"data": [[580.8013856812933, 52148.41570438799]], "isOverall": false, "label": "Dashboard-0-Aggregated", "isController": false}, {"data": [[2.0, 199929.0], [6.0, 194573.0], [8.0, 198732.0], [12.0, 195553.0], [16.0, 197938.0], [19.0, 197882.0], [20.0, 197787.0], [22.0, 197493.0], [24.0, 197135.0], [25.0, 196229.0], [28.0, 197016.0], [37.0, 195269.0], [38.0, 196074.0], [43.0, 195614.0], [44.0, 191250.0], [49.0, 194423.0], [48.0, 194437.0], [51.0, 194107.0], [50.0, 194984.0], [59.0, 189959.0], [58.0, 194455.0], [65.0, 193758.0], [69.0, 189381.0], [76.0, 192581.0], [82.0, 192391.0], [80.0, 190578.0], [86.0, 192234.0], [90.0, 189636.0], [89.0, 191491.0], [94.0, 188775.0], [93.0, 191492.0], [99.0, 186657.0], [98.0, 191070.0], [97.0, 188542.0], [96.0, 191190.0], [101.0, 188238.0], [100.0, 190884.0], [107.0, 189547.0], [106.0, 190399.0], [105.0, 190462.0], [104.0, 186227.0], [114.0, 189795.0], [118.0, 186895.0], [116.0, 188825.0], [123.0, 189006.0], [121.0, 188265.0], [124.0, 188926.0], [135.0, 185177.0], [134.0, 185257.0], [132.0, 186880.0], [131.0, 184355.0], [130.0, 188194.0], [129.0, 188441.0], [128.0, 187629.0], [140.0, 180355.0], [137.0, 184613.0], [145.0, 182416.0], [155.0, 182463.0], [166.0, 180722.0], [175.0, 179095.0], [172.0, 180216.0], [171.0, 176871.0], [183.0, 179491.0], [181.0, 175948.0], [180.0, 179512.0], [179.0, 176066.0], [191.0, 178553.0], [190.0, 179555.0], [189.0, 178863.0], [188.0, 175393.0], [186.0, 175478.0], [185.0, 175579.0], [184.0, 179192.0], [197.0, 174617.0], [192.0, 174919.0], [207.0, 178166.0], [205.0, 178239.0], [204.0, 173938.0], [203.0, 177502.0], [201.0, 174469.0], [200.0, 177980.0], [215.0, 177439.0], [214.0, 177493.0], [213.0, 176767.0], [209.0, 177201.0], [222.0, 177039.0], [221.0, 176209.0], [220.0, 177185.0], [217.0, 176520.0], [216.0, 173555.0], [231.0, 176127.0], [230.0, 176107.0], [228.0, 175444.0], [226.0, 176818.0], [225.0, 176834.0], [224.0, 176835.0], [238.0, 172964.0], [237.0, 175476.0], [236.0, 175620.0], [235.0, 175635.0], [234.0, 175770.0], [233.0, 175881.0], [245.0, 174845.0], [243.0, 174352.0], [242.0, 171031.0], [254.0, 173203.0], [253.0, 173237.0], [251.0, 172088.0], [250.0, 174433.0], [271.0, 170310.0], [267.0, 171000.0], [265.0, 171924.0], [261.0, 169251.0], [258.0, 172915.0], [257.0, 171472.0], [285.0, 166746.0], [287.0, 167145.0], [284.0, 166873.0], [283.0, 165411.0], [282.0, 166911.0], [281.0, 167873.0], [277.0, 169124.0], [276.0, 166065.0], [273.0, 170870.0], [300.0, 166475.0], [297.0, 166683.0], [295.0, 166698.0], [294.0, 166894.0], [319.0, 165461.0], [317.0, 165564.0], [312.0, 165091.0], [308.0, 161752.0], [305.0, 163918.0], [323.0, 164090.0], [321.0, 165307.0], [347.0, 160712.0], [344.0, 159940.0], [340.0, 157372.0], [338.0, 157532.0], [336.0, 161969.0], [366.0, 155400.0], [365.0, 158394.0], [364.0, 158395.0], [363.0, 159234.0], [362.0, 159366.0], [357.0, 157377.0], [379.0, 156612.0], [378.0, 157680.0], [377.0, 157833.0], [376.0, 157824.0], [371.0, 158497.0], [370.0, 154336.0], [399.0, 153308.0], [395.0, 153305.0], [394.0, 154458.0], [393.0, 153858.0], [390.0, 155940.0], [389.0, 155998.0], [388.0, 156004.0], [386.0, 155639.0], [385.0, 156750.0], [414.0, 151834.0], [412.0, 150578.0], [411.0, 152719.0], [409.0, 152809.0], [403.0, 153107.0], [402.0, 153081.0], [400.0, 153246.0], [416.0, 148424.0], [444.0, 151664.0], [443.0, 149477.0], [439.0, 151925.0], [438.0, 147765.0], [437.0, 152058.0], [436.0, 152047.0], [461.0, 150989.0], [460.0, 150973.0], [459.0, 146824.0], [457.0, 151164.0], [456.0, 151184.0], [455.0, 150463.0], [453.0, 147210.0], [452.0, 151380.0], [450.0, 151442.0], [449.0, 147783.0], [477.0, 149412.0], [476.0, 149390.0], [475.0, 150309.0], [474.0, 146090.0], [472.0, 150490.0], [471.0, 150575.0], [469.0, 146402.0], [468.0, 150052.0], [465.0, 150712.0], [464.0, 150930.0], [495.0, 145744.0], [491.0, 145261.0], [489.0, 145582.0], [488.0, 149281.0], [486.0, 149383.0], [484.0, 149459.0], [483.0, 149456.0], [482.0, 149550.0], [480.0, 148944.0], [500.0, 143662.0], [542.0, 140029.0], [541.0, 140334.0], [538.0, 141423.0], [536.0, 140593.0], [533.0, 141605.0], [524.0, 142604.0], [523.0, 142641.0], [575.0, 137437.0], [569.0, 136649.0], [564.0, 139244.0], [563.0, 138353.0], [562.0, 139364.0], [558.0, 139637.0], [555.0, 135763.0], [553.0, 140102.0], [551.0, 140299.0], [550.0, 139413.0], [605.0, 135695.0], [607.0, 134618.0], [602.0, 135252.0], [601.0, 136189.0], [599.0, 136532.0], [597.0, 133029.0], [594.0, 135048.0], [592.0, 136667.0], [587.0, 136395.0], [581.0, 137260.0], [579.0, 136893.0], [578.0, 138017.0], [586.0, 137364.0], [632.0, 133734.0], [635.0, 133367.0], [637.0, 132789.0], [634.0, 132968.0], [627.0, 133871.0], [626.0, 133072.0], [620.0, 134725.0], [612.0, 135397.0], [619.0, 134251.0], [618.0, 134766.0], [617.0, 134469.0], [668.0, 130474.0], [671.0, 129248.0], [667.0, 130606.0], [665.0, 127423.0], [664.0, 127135.0], [662.0, 126850.0], [661.0, 126924.0], [656.0, 131499.0], [650.0, 131450.0], [642.0, 131804.0], [702.0, 127238.0], [690.0, 124516.0], [689.0, 125403.0], [688.0, 128653.0], [686.0, 128923.0], [681.0, 129197.0], [677.0, 128802.0], [676.0, 129729.0], [733.0, 124039.0], [730.0, 124969.0], [710.0, 126921.0], [708.0, 126981.0], [725.0, 125538.0], [724.0, 125683.0], [723.0, 125741.0], [717.0, 126207.0], [716.0, 126211.0], [715.0, 125474.0], [712.0, 124775.0], [765.0, 122149.0], [758.0, 121918.0], [756.0, 122925.0], [753.0, 122597.0], [742.0, 120997.0], [741.0, 120436.0], [740.0, 124409.0], [739.0, 124415.0], [798.0, 118674.0], [799.0, 119413.0], [793.0, 120001.0], [791.0, 120201.0], [789.0, 120337.0], [785.0, 120685.0], [784.0, 120037.0], [780.0, 120883.0], [770.0, 121633.0], [774.0, 121458.0], [771.0, 121814.0], [775.0, 121480.0], [829.0, 116163.0], [830.0, 116279.0], [827.0, 113964.0], [825.0, 116771.0], [824.0, 117226.0], [806.0, 118800.0], [805.0, 118962.0], [802.0, 118445.0], [801.0, 115844.0], [800.0, 119408.0], [819.0, 117236.0], [818.0, 117725.0], [817.0, 117775.0], [815.0, 117829.0], [809.0, 118263.0], [856.0, 111176.0], [860.0, 114262.0], [862.0, 114130.0], [857.0, 114505.0], [855.0, 114721.0], [849.0, 114199.0], [845.0, 112526.0], [836.0, 115333.0], [842.0, 115471.0], [841.0, 115927.0], [891.0, 111740.0], [893.0, 111248.0], [888.0, 111831.0], [871.0, 109977.0], [866.0, 113830.0], [865.0, 113867.0], [886.0, 111878.0], [885.0, 111843.0], [883.0, 112352.0], [882.0, 112165.0], [879.0, 112731.0], [878.0, 111961.0], [877.0, 112872.0], [876.0, 112929.0], [914.0, 109444.0], [927.0, 108302.0], [926.0, 108407.0], [923.0, 108984.0], [921.0, 108921.0], [910.0, 110081.0], [903.0, 110281.0], [902.0, 107749.0], [900.0, 110632.0], [896.0, 110990.0], [909.0, 110476.0], [919.0, 109062.0], [918.0, 109106.0], [915.0, 109426.0], [913.0, 109615.0], [945.0, 106872.0], [956.0, 105255.0], [934.0, 107156.0], [932.0, 108051.0], [950.0, 106516.0], [949.0, 106151.0], [946.0, 106293.0], [941.0, 107118.0], [940.0, 107174.0], [939.0, 107782.0], [937.0, 107853.0], [976.0, 103251.0], [989.0, 102031.0], [983.0, 102162.0], [982.0, 101735.0], [981.0, 102367.0], [974.0, 102551.0], [973.0, 102622.0], [972.0, 103478.0], [967.0, 100874.0], [966.0, 101009.0], [962.0, 104454.0], [961.0, 104909.0], [1019.0, 68151.0], [1016.0, 79011.0], [999.0, 100350.0], [993.0, 100702.0], [1014.0, 98878.0], [1013.0, 99178.0], [1011.0, 99108.0], [1010.0, 99633.0], [1008.0, 99695.0], [1005.0, 99090.0], [1004.0, 99833.0], [1066.0, 13187.0], [1075.0, 12442.0], [1072.0, 12690.0], [1037.0, 15049.0], [1030.0, 15663.0], [1029.0, 48545.0], [1027.0, 61671.0], [1070.0, 12751.0], [1069.0, 12815.0], [1067.0, 12968.0], [1062.0, 13449.0], [1060.0, 13465.0], [1055.0, 13865.0], [1054.0, 15021.5], [1046.0, 15011.0], [1043.0, 15021.0], [1140.0, 6794.0], [1147.0, 7176.0], [1139.0, 3815.0], [1138.0, 7717.0], [1130.0, 7773.0], [1128.0, 7928.0], [1124.0, 8423.0], [1121.0, 8723.0], [1100.0, 12308.0], [1117.0, 12307.5], [1210.0, 2.0], [1213.0, 8.0], [1186.0, 5573.0], [1185.0, 5569.0], [1212.0, 5576.0], [1190.0, 3.0], [1188.0, 5050.0], [1209.0, 3.0], [1208.0, 4971.0], [1206.0, 7.0], [1204.0, 9.0], [1202.0, 2785.0], [1166.0, 5937.0], [1164.0, 5943.0], [1153.0, 1.0], [1161.0, 7849.0], [1176.0, 155.0], [1172.0, 1.0], [1168.0, 5918.0], [1198.0, 5.0], [1197.0, 1.0], [1192.0, 4190.0], [1191.0, 2.0], [1266.0, 2.0], [1277.0, 3.0], [1278.0, 4666.0], [1250.0, 2.0], [1259.0, 4764.0], [1257.0, 4822.0], [1274.0, 2.0], [1272.0, 4686.0], [1270.0, 1285.3333333333335], [1264.0, 3874.0], [1229.0, 7213.0], [1228.0, 4897.0], [1226.0, 4011.0], [1223.0, 4951.0], [1221.0, 4049.0], [1220.0, 4954.0], [1216.0, 7226.333333333333], [1219.0, 7420.0], [1247.0, 2.0], [1244.0, 3.0], [1243.0, 1971.5], [1241.0, 4811.0], [1233.0, 2430.0], [1262.0, 2.0], [1260.0, 3889.0], [1294.0, 3769.0], [1335.0, 1491.0], [1332.0, 2.0], [1334.0, 4471.0], [1313.0, 3642.0], [1310.0, 1.0], [1308.0, 4.0], [1305.0, 4307.0], [1302.0, 4.0], [1290.0, 2.0], [1289.0, 4682.0], [1286.0, 3777.0], [1285.0, 4675.0], [1284.0, 4673.0], [1454.0, 12309.0], [1452.0, 12305.0], [1421.0, 12321.0], [1418.0, 12339.5], [1596.0, 10422.0], [1587.0, 10447.0], [1606.0, 10496.0], [1609.0, 10429.5], [1.0, 199221.0]], "isOverall": false, "label": "Dashboard", "isController": false}, {"data": [[669.3699999999998, 114798.02999999993]], "isOverall": false, "label": "Dashboard-Aggregated", "isController": false}, {"data": [[2.0, 101602.0], [6.0, 100555.0], [8.0, 100596.0], [12.0, 100833.0], [16.0, 100538.0], [19.0, 100315.0], [20.0, 100354.0], [22.0, 100815.0], [24.0, 100415.0], [25.0, 100656.0], [28.0, 100464.0], [37.0, 100228.0], [38.0, 100207.0], [43.0, 99766.0], [44.0, 99735.0], [49.0, 100713.0], [48.0, 100723.0], [51.0, 99120.0], [50.0, 100401.0], [59.0, 100582.0], [58.0, 99870.0], [65.0, 101352.0], [69.0, 101619.0], [76.0, 101280.0], [82.0, 100183.0], [80.0, 100032.0], [86.0, 101340.0], [90.0, 100603.0], [89.0, 100605.0], [94.0, 99751.0], [93.0, 99790.0], [99.0, 99260.0], [98.0, 99327.0], [97.0, 99473.0], [96.0, 99484.0], [101.0, 99100.0], [100.0, 99162.0], [107.0, 98674.0], [106.0, 98683.0], [105.0, 98735.0], [104.0, 98820.0], [114.0, 98053.0], [118.0, 97764.0], [116.0, 97989.0], [123.0, 99954.0], [121.0, 97416.0], [124.0, 97176.0], [135.0, 98017.0], [134.0, 98097.0], [132.0, 98674.0], [131.0, 98669.0], [130.0, 99702.0], [129.0, 100099.0], [128.0, 99963.0], [140.0, 127598.0], [137.0, 96543.0], [145.0, 127024.0], [155.0, 126557.0], [166.0, 75541.0], [175.0, 125507.0], [172.0, 125523.0], [171.0, 75504.0], [183.0, 125089.0], [181.0, 76123.0], [180.0, 75331.0], [179.0, 75665.0], [191.0, 124189.0], [190.0, 124329.0], [189.0, 124499.0], [188.0, 76431.0], [186.0, 76480.0], [185.0, 76155.0], [184.0, 124826.0], [197.0, 78057.0], [192.0, 77900.0], [207.0, 122919.0], [205.0, 79401.0], [204.0, 77743.0], [203.0, 123138.0], [201.0, 78126.0], [200.0, 123615.0], [215.0, 78782.0], [214.0, 122226.0], [213.0, 79146.0], [209.0, 122836.0], [222.0, 121760.0], [221.0, 121845.0], [220.0, 78701.0], [217.0, 78595.0], [216.0, 122167.0], [231.0, 120845.0], [230.0, 88069.0], [228.0, 88304.0], [226.0, 88778.0], [225.0, 88787.0], [224.0, 88790.0], [238.0, 88851.0], [237.0, 88986.0], [236.0, 88615.0], [235.0, 88674.0], [234.0, 88782.0], [233.0, 87828.0], [245.0, 119576.0], [243.0, 88507.0], [242.0, 88798.0], [254.0, 118840.0], [253.0, 87845.0], [251.0, 88099.0], [250.0, 119211.0], [271.0, 85313.0], [267.0, 120412.0], [265.0, 86855.0], [261.0, 120918.0], [258.0, 87771.0], [257.0, 87886.0], [285.0, 115572.0], [287.0, 82030.0], [284.0, 82531.0], [283.0, 82471.0], [282.0, 120166.0], [281.0, 116145.0], [277.0, 118127.0], [276.0, 84813.0], [273.0, 118668.0], [300.0, 114899.0], [297.0, 82063.0], [295.0, 82808.0], [294.0, 82591.0], [319.0, 81324.0], [317.0, 81614.0], [312.0, 81249.0], [308.0, 81468.0], [305.0, 83489.0], [323.0, 116042.0], [321.0, 84131.0], [347.0, 76336.0], [344.0, 76884.0], [340.0, 77717.0], [338.0, 77664.0], [336.0, 113141.0], [366.0, 108169.0], [365.0, 76211.0], [364.0, 109337.0], [363.0, 79409.0], [362.0, 110449.0], [357.0, 75847.0], [379.0, 108728.0], [378.0, 77731.0], [377.0, 76644.0], [376.0, 109179.0], [371.0, 110089.0], [370.0, 73533.0], [399.0, 105857.0], [395.0, 75410.0], [394.0, 76302.0], [393.0, 107296.0], [390.0, 76904.0], [389.0, 71816.0], [388.0, 107938.0], [386.0, 71727.0], [385.0, 107775.0], [414.0, 75747.0], [412.0, 75760.0], [411.0, 110856.0], [409.0, 75860.0], [403.0, 105681.0], [402.0, 109444.0], [400.0, 110669.0], [416.0, 75644.0], [444.0, 74686.0], [443.0, 78669.0], [439.0, 74924.0], [438.0, 75026.0], [437.0, 75112.0], [436.0, 75106.0], [461.0, 74000.0], [460.0, 74010.0], [459.0, 78004.0], [457.0, 77868.0], [456.0, 105070.0], [455.0, 104859.0], [453.0, 79005.0], [452.0, 109518.0], [450.0, 78112.0], [449.0, 107381.0], [477.0, 108234.0], [476.0, 73302.0], [475.0, 77285.0], [474.0, 77304.0], [472.0, 106632.0], [471.0, 106459.0], [469.0, 78216.0], [468.0, 108317.0], [465.0, 109111.0], [464.0, 106609.0], [495.0, 105279.0], [491.0, 104844.0], [489.0, 103964.0], [488.0, 104926.0], [486.0, 107790.0], [484.0, 76453.0], [483.0, 76491.0], [482.0, 104805.0], [480.0, 103341.0], [500.0, 72202.0], [542.0, 101513.0], [541.0, 101129.0], [538.0, 73809.0], [536.0, 73104.0], [533.0, 73034.0], [524.0, 70243.0], [523.0, 70260.0], [575.0, 72347.0], [569.0, 72645.0], [564.0, 73139.0], [563.0, 100690.0], [562.0, 100796.0], [558.0, 73400.0], [555.0, 73566.0], [553.0, 72540.0], [551.0, 72679.0], [550.0, 72697.0], [605.0, 70998.0], [607.0, 97702.0], [602.0, 71190.0], [601.0, 71125.0], [599.0, 71346.0], [597.0, 98830.0], [594.0, 71562.0], [592.0, 99337.0], [587.0, 71423.0], [581.0, 99931.0], [579.0, 99962.0], [578.0, 100106.0], [586.0, 71729.0], [632.0, 97609.0], [635.0, 69958.0], [637.0, 97145.0], [634.0, 97153.0], [627.0, 69338.0], [626.0, 71050.0], [620.0, 70126.0], [612.0, 97567.0], [619.0, 98164.0], [618.0, 70228.0], [617.0, 97136.0], [668.0, 107255.0], [671.0, 107133.0], [667.0, 69355.0], [665.0, 107429.0], [664.0, 95043.0], [662.0, 68985.0], [661.0, 69188.0], [656.0, 68947.0], [650.0, 96173.0], [642.0, 70098.0], [702.0, 105302.0], [690.0, 67513.0], [689.0, 105940.0], [688.0, 105904.0], [686.0, 67908.0], [681.0, 68232.0], [677.0, 106866.0], [676.0, 106873.0], [733.0, 102910.0], [730.0, 103227.0], [710.0, 65942.0], [708.0, 66027.0], [725.0, 64614.0], [724.0, 103531.0], [723.0, 103630.0], [717.0, 65213.0], [716.0, 65284.0], [715.0, 65337.0], [712.0, 65629.0], [765.0, 63290.0], [758.0, 63882.0], [756.0, 101691.0], [753.0, 101810.0], [742.0, 102397.0], [741.0, 65071.0], [740.0, 102605.0], [739.0, 102454.0], [798.0, 84453.0], [799.0, 84415.0], [793.0, 63175.0], [791.0, 100501.0], [789.0, 100657.0], [785.0, 100879.0], [784.0, 63896.0], [780.0, 101121.0], [770.0, 101736.0], [774.0, 62559.0], [771.0, 62905.0], [775.0, 62545.0], [829.0, 97627.0], [830.0, 82107.0], [827.0, 97691.0], [825.0, 82606.0], [824.0, 97820.0], [806.0, 99277.0], [805.0, 84248.0], [802.0, 84292.0], [801.0, 84488.0], [800.0, 84361.0], [819.0, 83502.0], [818.0, 83565.0], [817.0, 83613.0], [815.0, 83670.0], [809.0, 84100.0], [856.0, 80117.0], [860.0, 79671.0], [862.0, 79569.0], [857.0, 79962.0], [855.0, 96511.0], [849.0, 80529.0], [845.0, 97252.0], [836.0, 81642.0], [842.0, 81291.0], [841.0, 97551.0], [891.0, 94571.0], [893.0, 80096.0], [888.0, 94836.0], [871.0, 78877.0], [866.0, 79264.0], [865.0, 79354.0], [886.0, 94729.0], [885.0, 80434.0], [883.0, 94919.0], [882.0, 80458.0], [879.0, 80764.0], [878.0, 95412.0], [877.0, 78297.0], [876.0, 95381.0], [914.0, 78734.0], [927.0, 79150.0], [926.0, 79144.0], [923.0, 77906.0], [921.0, 78196.0], [910.0, 93618.0], [903.0, 79466.0], [902.0, 93993.0], [900.0, 79955.0], [896.0, 79768.0], [909.0, 93713.0], [919.0, 78361.0], [918.0, 78392.0], [915.0, 92956.0], [913.0, 93151.0], [945.0, 79466.0], [956.0, 78402.0], [934.0, 79863.0], [932.0, 79641.0], [950.0, 79371.0], [949.0, 79555.0], [946.0, 79252.0], [941.0, 79524.0], [940.0, 79405.0], [939.0, 79612.0], [937.0, 79317.0], [976.0, 76945.0], [989.0, 76887.0], [983.0, 77002.0], [982.0, 77158.0], [981.0, 77122.0], [974.0, 77092.0], [973.0, 77063.0], [972.0, 77146.0], [967.0, 77334.0], [966.0, 77491.0], [962.0, 77868.0], [961.0, 78303.0], [1019.0, 66199.0], [1016.0, 74889.0], [999.0, 76114.0], [993.0, 76942.0], [1014.0, 75828.0], [1013.0, 75758.0], [1011.0, 75944.0], [1010.0, 75122.0], [1008.0, 75202.0], [1005.0, 75473.0], [1004.0, 75602.0], [1066.0, 2.0], [1075.0, 1.0], [1072.0, 1.0], [1037.0, 1.0], [1030.0, 2.0], [1029.0, 44818.0], [1027.0, 57729.0], [1070.0, 1.0], [1069.0, 1.0], [1067.0, 1.0], [1062.0, 1.0], [1060.0, 2.0], [1055.0, 1.0], [1054.0, 2.0], [1046.0, 2.0], [1043.0, 1.0], [1130.0, 1.0], [1128.0, 2.0], [1124.0, 1.0], [1121.0, 2.0], [1100.0, 2.0], [1117.0, 0.5], [1212.0, 1.0], [1202.0, 6.0], [1186.0, 5.0], [1185.0, 1.0], [1168.0, 1.0], [1166.0, 20.0], [1164.0, 1.0], [1229.0, 1.0], [1216.0, 1.0], [1219.0, 3.0], [1454.0, 1.0], [1452.0, 2.0], [1421.0, 2.0], [1418.0, 1.0], [1596.0, 1.0], [1587.0, 2.0], [1606.0, 2.0], [1609.0, 3.0], [1.0, 101656.0]], "isOverall": false, "label": "Dashboard-1", "isController": false}, {"data": [[580.8013856812933, 80014.78060046196]], "isOverall": false, "label": "Dashboard-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1609.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 441.46666666666664, "minX": 1.7154063E12, "maxY": 30431.333333333332, "series": [{"data": [[1.71540648E12, 27933.466666666667], [1.71540636E12, 4395.8], [1.71540642E12, 30431.333333333332], [1.7154063E12, 10506.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71540648E12, 1401.2], [1.71540636E12, 656.4], [1.71540642E12, 1640.8], [1.7154063E12, 441.46666666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.085106382978724, "minX": 1.7154063E12, "maxY": 173823.97311827954, "series": [{"data": [[1.71540636E12, 58856.22540983607], [1.71540642E12, 94510.20312499999], [1.7154063E12, 17365.536]], "isOverall": false, "label": "Dashboard-0", "isController": false}, {"data": [[1.71540648E12, 173823.97311827954], [1.71540636E12, 64344.5], [1.71540642E12, 123128.51020408166], [1.7154063E12, 5940.263157894737]], "isOverall": false, "label": "Dashboard", "isController": false}, {"data": [[1.71540648E12, 95922.07526881716], [1.71540636E12, 60908.75], [1.71540642E12, 84495.71938775516], [1.7154063E12, 2.085106382978724]], "isOverall": false, "label": "Dashboard-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7154063E12, "maxY": 95892.79032258064, "series": [{"data": [[1.71540636E12, 58795.17213114757], [1.71540642E12, 94508.00000000001], [1.7154063E12, 17362.904000000002]], "isOverall": false, "label": "Dashboard-0", "isController": false}, {"data": [[1.71540648E12, 77840.5215053763], [1.71540636E12, 3432.5], [1.71540642E12, 38615.77040816327], [1.7154063E12, 4422.271929824561]], "isOverall": false, "label": "Dashboard", "isController": false}, {"data": [[1.71540648E12, 95892.79032258064], [1.71540636E12, 60900.5], [1.71540642E12, 84488.82653061223], [1.7154063E12, 0.0]], "isOverall": false, "label": "Dashboard-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.8877551020408163, "minX": 1.7154063E12, "maxY": 1951.2049180327863, "series": [{"data": [[1.71540636E12, 1951.2049180327863], [1.71540642E12, 1786.4687500000002], [1.7154063E12, 964.2480000000002]], "isOverall": false, "label": "Dashboard-0", "isController": false}, {"data": [[1.71540648E12, 1905.8709677419363], [1.71540636E12, 31.750000000000004], [1.71540642E12, 1817.051020408164], [1.7154063E12, 1518.2631578947369]], "isOverall": false, "label": "Dashboard", "isController": false}, {"data": [[1.71540648E12, 1.3494623655913975], [1.71540636E12, 1.25], [1.71540642E12, 0.8877551020408163], [1.7154063E12, 2.021276595744682]], "isOverall": false, "label": "Dashboard-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1952.0, "minX": 1.7154063E12, "maxY": 199929.0, "series": [{"data": [[1.71540648E12, 199929.0], [1.71540636E12, 89059.0], [1.71540642E12, 150930.0], [1.7154063E12, 29263.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71540648E12, 71727.0], [1.71540636E12, 30678.0], [1.71540642E12, 62545.0], [1.7154063E12, 1952.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71540648E12, 189497.2], [1.71540636E12, 84883.90000000001], [1.71540642E12, 135715.4], [1.7154063E12, 26704.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71540648E12, 198152.37999999998], [1.71540636E12, 88418.97], [1.71540642E12, 150386.83], [1.7154063E12, 29233.88]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71540648E12, 137211.0], [1.71540636E12, 57950.5], [1.71540642E12, 100673.5], [1.7154063E12, 17433.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71540648E12, 194427.9], [1.71540636E12, 87160.0], [1.71540642E12, 141754.84999999998], [1.7154063E12, 27716.199999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.5, "minX": 1.0, "maxY": 112063.0, "series": [{"data": [[33.0, 12331.0], [8.0, 99396.0], [2.0, 91991.0], [9.0, 48828.0], [10.0, 100579.0], [43.0, 4031.0], [11.0, 88054.0], [3.0, 62551.0], [12.0, 108753.0], [14.0, 100597.0], [15.0, 59642.0], [1.0, 52212.0], [4.0, 84481.0], [16.0, 112063.0], [19.0, 54367.0], [5.0, 58900.0], [20.0, 89141.0], [21.0, 12751.5], [6.0, 77302.5], [26.0, 104964.5], [28.0, 5569.0], [7.0, 50304.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 6143.0], [9.0, 3965.0], [43.0, 3769.0], [21.0, 5212.5], [11.0, 87.5], [3.0, 6933.0], [26.0, 7003.5], [28.0, 7.5], [15.0, 6408.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 43.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 88181.0, "series": [{"data": [[33.0, 12331.0], [8.0, 71154.5], [2.0, 70777.0], [9.0, 48826.0], [10.0, 63289.0], [43.0, 4027.0], [11.0, 51635.5], [3.0, 62018.0], [12.0, 88181.0], [14.0, 80836.5], [15.0, 58503.5], [1.0, 52209.0], [4.0, 72371.0], [16.0, 78738.5], [19.0, 54365.0], [5.0, 58899.0], [20.0, 74695.5], [21.0, 12751.0], [6.0, 63298.0], [26.0, 74001.5], [28.0, 5562.5], [7.0, 50302.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 6142.0], [9.0, 3962.0], [43.0, 0.0], [21.0, 5208.0], [11.0, 0.0], [3.0, 6931.5], [26.0, 0.0], [28.0, 0.0], [15.0, 6406.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 43.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0666666666666667, "minX": 1.7154063E12, "maxY": 17.633333333333333, "series": [{"data": [[1.71540636E12, 4.066666666666666], [1.71540642E12, 1.0666666666666667], [1.7154063E12, 17.633333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540642E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.7154063E12, "maxY": 6.533333333333333, "series": [{"data": [[1.71540648E12, 6.2], [1.71540636E12, 0.13333333333333333], [1.71540642E12, 6.533333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7154063E12, 2.683333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.71540636E12, 4.066666666666666], [1.71540642E12, 1.0666666666666667], [1.7154063E12, 2.0833333333333335]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71540648E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7154063E12, "maxY": 4.066666666666666, "series": [{"data": [[1.71540648E12, 3.1], [1.71540636E12, 0.06666666666666667], [1.71540642E12, 3.2666666666666666]], "isOverall": false, "label": "Dashboard-success", "isController": false}, {"data": [[1.7154063E12, 1.9]], "isOverall": false, "label": "Dashboard-failure", "isController": false}, {"data": [[1.7154063E12, 0.7833333333333333]], "isOverall": false, "label": "Dashboard-1-failure", "isController": false}, {"data": [[1.71540648E12, 3.1], [1.71540636E12, 0.06666666666666667], [1.71540642E12, 3.2666666666666666]], "isOverall": false, "label": "Dashboard-1-success", "isController": false}, {"data": [[1.71540636E12, 4.066666666666666], [1.71540642E12, 1.0666666666666667], [1.7154063E12, 2.0833333333333335]], "isOverall": false, "label": "Dashboard-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.0833333333333335, "minX": 1.7154063E12, "maxY": 7.6, "series": [{"data": [[1.71540648E12, 6.2], [1.71540636E12, 4.2], [1.71540642E12, 7.6], [1.7154063E12, 2.0833333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7154063E12, 2.683333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71540648E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

